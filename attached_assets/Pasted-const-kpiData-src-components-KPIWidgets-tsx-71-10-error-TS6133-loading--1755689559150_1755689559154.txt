const kpiData = [
         ~~~~~~~

src/components/KPIWidgets.tsx:71:10 - error TS6133: 'loading' is declared but its value is never read.

71   const [loading, setLoading] = useState(true)
            ~~~~~~~

src/components/KPIWidgets.tsx:95:21 - error TS7006: Parameter 'kpi' implicitly has an 'any' type.

95       {kpiData.map((kpi, index) => {
                       ~~~

src/components/KPIWidgets.tsx:95:26 - error TS7006: Parameter 'index' implicitly has an 'any' type.

95       {kpiData.map((kpi, index) => {
                            ~~~~~

src/components/KPIWidgets.tsx:165:8 - error TS2300: Duplicate identifier 'React'.

165 import React, { useState, useEffect } from 'react'
           ~~~~~

src/components/KPIWidgets.tsx:165:17 - error TS2300: Duplicate identifier 'useState'.

165 import React, { useState, useEffect } from 'react'
                    ~~~~~~~~

src/components/KPIWidgets.tsx:165:27 - error TS2300: Duplicate identifier 'useEffect'.

165 import React, { useState, useEffect } from 'react'
                              ~~~~~~~~~

src/components/KPIWidgets.tsx:166:10 - error TS2300: Duplicate identifier 'Card'.

166 import { Card, CardContent, CardHeader, CardTitle } from './ui/card'
             ~~~~

src/components/KPIWidgets.tsx:166:16 - error TS2300: Duplicate identifier 'CardContent'.

166 import { Card, CardContent, CardHeader, CardTitle } from './ui/card'
                   ~~~~~~~~~~~

src/components/KPIWidgets.tsx:166:29 - error TS2300: Duplicate identifier 'CardHeader'.

166 import { Card, CardContent, CardHeader, CardTitle } from './ui/card'
                                ~~~~~~~~~~

src/components/KPIWidgets.tsx:166:41 - error TS2300: Duplicate identifier 'CardTitle'.

166 import { Card, CardContent, CardHeader, CardTitle } from './ui/card'
                                            ~~~~~~~~~

src/components/KPIWidgets.tsx:168:3 - error TS2300: Duplicate identifier 'TrendingUp'.

168   TrendingUp,
      ~~~~~~~~~~

src/components/KPIWidgets.tsx:169:3 - error TS2300: Duplicate identifier 'TrendingDown'.

169   TrendingDown,
      ~~~~~~~~~~~~

src/components/KPIWidgets.tsx:170:3 - error TS2300: Duplicate identifier 'Plane'.

170   Plane,
      ~~~~~

src/components/KPIWidgets.tsx:171:3 - error TS2300: Duplicate identifier 'Users'.

171   Users,
      ~~~~~

src/components/KPIWidgets.tsx:172:3 - error TS2300: Duplicate identifier 'Clock'.

172   Clock,
      ~~~~~

src/components/KPIWidgets.tsx:173:3 - error TS2300: Duplicate identifier 'AlertTriangle'.

173   AlertTriangle,
      ~~~~~~~~~~~~~

src/components/KPIWidgets.tsx:174:3 - error TS2300: Duplicate identifier 'CheckCircle'.

174   CheckCircle,
      ~~~~~~~~~~~

src/components/KPIWidgets.tsx:176:3 - error TS6133: 'RefreshCw' is declared but its value is never read.

176   RefreshCw
      ~~~~~~~~~

src/components/KPIWidgets.tsx:178:10 - error TS2300: Duplicate identifier 'databaseService'.

178 import { databaseService } from '../services/databaseService'
             ~~~~~~~~~~~~~~~

src/components/Layout.tsx:1:8 - error TS6133: 'React' is declared but its value is never read.

1 import React, { useState, useEffect, ReactNode } from "react";
         ~~~~~

src/components/Layout.tsx:26:3 - error TS6133: 'RotateCcw' is declared but its value is never read.

26   RotateCcw,
     ~~~~~~~~~

src/components/Layout.tsx:250:9 - error TS6133: 'quickStats' is declared but its value is never read.

250   const quickStats = getQuickStats();
            ~~~~~~~~~~

src/components/NetworkHeatMap.tsx:3:8 - error TS6133: 'React' is declared but its value is never read.

3 import React, { useState, useEffect } from 'react'
         ~~~~~

src/components/NetworkHeatMap.tsx:3:27 - error TS6133: 'useEffect' is declared but its value is never read.

3 import React, { useState, useEffect } from 'react'
                            ~~~~~~~~~

src/components/NetworkHeatMap.tsx:8:1 - error TS6192: All imports in import declaration are unused.

8 import { Tabs, TabsContent, TabsList, TabsTrigger } from './ui/tabs'
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/NetworkHeatMap.tsx:10:1 - error TS6133: 'Progress' is declared but its value is never read.

10 import { Progress } from './ui/progress'
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/NetworkHeatMap.tsx:16:3 - error TS6133: 'Clock' is declared but its value is never read.

16   Clock,
     ~~~~~

src/components/NetworkHeatMap.tsx:18:3 - error TS6133: 'TrendingDown' is declared but its value is never read.

18   TrendingDown,
     ~~~~~~~~~~~~

src/components/NetworkHeatMap.tsx:27:3 - error TS6133: 'Layers' is declared but its value is never read.

27   Layers,
     ~~~~~~

src/components/NetworkHeatMap.tsx:28:3 - error TS6133: 'Eye' is declared but its value is never read.

28   Eye,
     ~~~

src/components/NetworkHeatMap.tsx:29:3 - error TS6133: 'EyeOff' is declared but its value is never read.

29   EyeOff,
     ~~~~~~

src/components/NetworkHeatMap.tsx:30:3 - error TS6133: 'RotateCcw' is declared but its value is never read.

30   RotateCcw,
     ~~~~~~~~~

src/components/NetworkHeatMap.tsx:32:3 - error TS6133: 'Filter' is declared but its value is never read.

32   Filter,
     ~~~~~~

src/components/NetworkHeatMap.tsx:33:3 - error TS6133: 'Search' is declared but its value is never read.

33   Search
     ~~~~~~

src/components/NetworkHeatMap.tsx:35:1 - error TS6133: 'ImageWithFallback' is declared but its value is never read.

35 import { ImageWithFallback } from './figma/ImageWithFallback'
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/NetworkHeatMap.tsx:36:27 - error TS2307: Cannot find module 'figma:asset/f497ef8e5a05ab25bb00d39bb281fadf3e573e35.png' or its corresponding type declarations.

36 import worldMapImage from 'figma:asset/f497ef8e5a05ab25bb00d39bb281fadf3e573e35.png'
                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/NetworkHeatMap.tsx:38:34 - error TS7031: Binding element 'onSelectDisruption' implicitly has an 'any' type.

38 export function NetworkHeatMap({ onSelectDisruption, filters }) {
                                    ~~~~~~~~~~~~~~~~~~

src/components/NetworkHeatMap.tsx:38:54 - error TS7031: Binding element 'filters' implicitly has an 'any' type.

38 export function NetworkHeatMap({ onSelectDisruption, filters }) {
                                                        ~~~~~~~

src/components/NetworkHeatMap.tsx:41:10 - error TS6133: 'showRoutes' is declared but its value is never read.

41   const [showRoutes, setShowRoutes] = useState(true)
            ~~~~~~~~~~

src/components/NetworkHeatMap.tsx:41:22 - error TS6133: 'setShowRoutes' is declared but its value is never read.

41   const [showRoutes, setShowRoutes] = useState(true)
                        ~~~~~~~~~~~~~

src/components/NetworkHeatMap.tsx:42:10 - error TS6133: 'showWeather' is declared but its value is never read.

42   const [showWeather, setShowWeather] = useState(true)
            ~~~~~~~~~~~

src/components/NetworkHeatMap.tsx:42:23 - error TS6133: 'setShowWeather' is declared but its value is never read.

42   const [showWeather, setShowWeather] = useState(true)
                         ~~~~~~~~~~~~~~

src/components/NetworkHeatMap.tsx:43:26 - error TS6133: 'setAnimateFlights' is declared but its value is never read.

43   const [animateFlights, setAnimateFlights] = useState(true)
                            ~~~~~~~~~~~~~~~~~

src/components/NetworkHeatMap.tsx:110:23 - error TS7006: Parameter 'code' implicitly has an 'any' type.

110   const getAirport = (code) => airports.find(a => a.code === code)
                          ~~~~

src/components/NetworkHeatMap.tsx:112:9 - error TS6133: 'getStatusColor' is declared but its value is never read.

112   const getStatusColor = (status) => {
            ~~~~~~~~~~~~~~

src/components/NetworkHeatMap.tsx:112:27 - error TS7006: Parameter 'status' implicitly has an 'any' type.

112   const getStatusColor = (status) => {
                              ~~~~~~

src/components/NetworkHeatMap.tsx:121:9 - error TS6133: 'getRouteColor' is declared but its value is never read.

121   const getRouteColor = (status) => {
            ~~~~~~~~~~~~~

src/components/NetworkHeatMap.tsx:121:26 - error TS7006: Parameter 'status' implicitly has an 'any' type.

121   const getRouteColor = (status) => {
                             ~~~~~~

src/components/NetworkHeatMap.tsx:130:27 - error TS7006: Parameter 'type' implicitly has an 'any' type.

130   const getWeatherIcon = (type) => {
                              ~~~~

src/components/NetworkHeatMap.tsx:151:12 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ na: string[]; eu: string[]; me: string[]; asia: string[]; oceania: string[]; africa: string[]; }'.

151       if (!regionMap[filters.region]?.includes(airport.country)) return false
               ~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/NetworkHeatMap.tsx:156:31 - error TS7006: Parameter 'airport' implicitly has an 'any' type.

156   const handleAirportClick = (airport) => {
                                  ~~~~~~~

src/components/NetworkHeatMap.tsx:169:24 - error TS7006: Parameter 'layer' implicitly has an 'any' type.

169   const toggleLayer = (layer) => {
                           ~~~~~

src/components/NetworkHeatMap.tsx:172:17 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ disruptions: boolean; routes: boolean; weather: boolean; traffic: boolean; }'.

172       [layer]: !prev[layer]
                    ~~~~~~~~~~~

src/components/NetworkHeatMap.tsx:499:34 - error TS2339: Property 'name' does not exist on type 'never'.

499                 {selectedAirport.name} ({selectedAirport.code})
                                     ~~~~

src/components/NetworkHeatMap.tsx:499:58 - error TS2339: Property 'code' does not exist on type 'never'.

499                 {selectedAirport.name} ({selectedAirport.code})
                                                             ~~~~

src/components/NetworkHeatMap.tsx:510:61 - error TS2339: Property 'city' does not exist on type 'never'.

510                 <p className="font-medium">{selectedAirport.city}, {selectedAirport.country}</p>
                                                                ~~~~

src/components/NetworkHeatMap.tsx:510:85 - error TS2339: Property 'country' does not exist on type 'never'.

510                 <p className="font-medium">{selectedAirport.city}, {selectedAirport.country}</p>
                                                                                        ~~~~~~~

src/components/NetworkHeatMap.tsx:514:61 - error TS2339: Property 'flights' does not exist on type 'never'.

514                 <p className="font-medium">{selectedAirport.flights}</p>
                                                                ~~~~~~~

src/components/NetworkHeatMap.tsx:518:77 - error TS2339: Property 'delays' does not exist on type 'never'.

518                 <p className="font-medium text-orange-600">{selectedAirport.delays}</p>
                                                                                ~~~~~~

src/components/NetworkHeatMap.tsx:522:61 - error TS2339: Property 'passengers' does not exist on type 'never'.

522                 <p className="font-medium">{selectedAirport.passengers.toLocaleString()}</p>
                                                                ~~~~~~~~~~

src/components/NetworkHeatMap.tsx:526:30 - error TS2339: Property 'status' does not exist on type 'never'.

526             {selectedAirport.status !== 'normal' && (
                                 ~~~~~~

src/components/NetworkHeatMap.tsx:530:45 - error TS2339: Property 'code' does not exist on type 'never'.

530                   location: selectedAirport.code,
                                                ~~~~

src/components/NetworkHeatMap.tsx:531:45 - error TS2339: Property 'status' does not exist on type 'never'.

531                   severity: selectedAirport.status,
                                                ~~~~~~

src/components/NetworkHeatMap.tsx:532:52 - error TS2339: Property 'delays' does not exist on type 'never'.

532                   affectedFlights: selectedAirport.delays
                                                       ~~~~~~

src/components/PassengerLookup.tsx:3:8 - error TS6133: 'React' is declared but its value is never read.

3 import React, { useState } from 'react'
         ~~~~~

src/components/PassengerLookup.tsx:11:1 - error TS6133: 'Separator' is declared but its value is never read.

11 import { Separator } from './ui/separator'
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerLookup.tsx:18:3 - error TS6133: 'AlertTriangle' is declared but its value is never read.

18   AlertTriangle,
     ~~~~~~~~~~~~~

src/components/PassengerLookup.tsx:19:3 - error TS6133: 'CheckCircle' is declared but its value is never read.

19   CheckCircle,
     ~~~~~~~~~~~

src/components/PassengerLookup.tsx:28:3 - error TS7031: Binding element 'passengers' implicitly has an 'any' type.

28   passengers,
     ~~~~~~~~~~

src/components/PassengerLookup.tsx:29:3 - error TS7031: Binding element 'selectedPassengers' implicitly has an 'any' type.

29   selectedPassengers,
     ~~~~~~~~~~~~~~~~~~

src/components/PassengerLookup.tsx:30:3 - error TS7031: Binding element 'onPassengerSelection' implicitly has an 'any' type.

30   onPassengerSelection,
     ~~~~~~~~~~~~~~~~~~~~

src/components/PassengerLookup.tsx:31:3 - error TS7031: Binding element 'onSelectAll' implicitly has an 'any' type.

31   onSelectAll,
     ~~~~~~~~~~~

src/components/PassengerLookup.tsx:32:3 - error TS7031: Binding element 'onClearSelection' implicitly has an 'any' type.

32   onClearSelection
     ~~~~~~~~~~~~~~~~

src/components/PassengerLookup.tsx:45:25 - error TS7006: Parameter 'key' implicitly has an 'any' type.

45   const updateFilter = (key, value) => {
                           ~~~

src/components/PassengerLookup.tsx:45:30 - error TS7006: Parameter 'value' implicitly has an 'any' type.

45   const updateFilter = (key, value) => {
                                ~~~~~

src/components/PassengerLookup.tsx:50:30 - error TS7006: Parameter 'passenger' implicitly has an 'any' type.

50     return passengers.filter(passenger => {
                                ~~~~~~~~~

src/components/PassengerLookup.tsx:83:34 - error TS7006: Parameter 'type' implicitly has an 'any' type.

83   const getPassengerTypeColor = (type) => {
                                    ~~~~

src/components/PassengerLookup.tsx:92:27 - error TS7006: Parameter 'status' implicitly has an 'any' type.

92   const getStatusColor = (status) => {
                             ~~~~~~

src/components/PassengerLookup.tsx:102:29 - error TS7006: Parameter 'action' implicitly has an 'any' type.

102   const handleBulkAction = (action) => {
                                ~~~~~~

src/components/PassengerLookup.tsx:319:37 - error TS7006: Parameter 'passenger' implicitly has an 'any' type.

319             {filteredPassengers.map(passenger => (
                                        ~~~~~~~~~

src/components/PassengerLookup.tsx:370:58 - error TS7006: Parameter 'need' implicitly has an 'any' type.

370                             {passenger.specialNeeds.map((need, index) => (
                                                             ~~~~

src/components/PassengerLookup.tsx:370:64 - error TS7006: Parameter 'index' implicitly has an 'any' type.

370                             {passenger.specialNeeds.map((need, index) => (
                                                                   ~~~~~

src/components/PassengerLookup.tsx:422:82 - error TS2367: This comparison appears to be unintentional because the types 'string | true' and 'false' have no overlap.

422       {Object.values(searchFilters).some(filter => filter && filter !== 'all' && filter !== false) && (
                                                                                     ~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:3:8 - error TS6133: 'React' is declared but its value is never read.

3 import React, { useState, useEffect, useMemo } from "react";
         ~~~~~

src/components/PassengerRebooking.tsx:30:3 - error TS6133: 'DialogTrigger' is declared but its value is never read.

30   DialogTrigger,
     ~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:38:3 - error TS6133: 'AlertTriangle' is declared but its value is never read.

38   AlertTriangle,
     ~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:41:3 - error TS6133: 'CalendarDays' is declared but its value is never read.

41   CalendarDays,
     ~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:46:3 - error TS6133: 'UtensilsCrossed' is declared but its value is never read.

46   UtensilsCrossed,
     ~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:48:3 - error TS2305: Module '"lucide-react"' has no exported member 'Wheelchair'.

48   Wheelchair,
     ~~~~~~~~~~

src/components/PassengerRebooking.tsx:48:3 - error TS6133: 'Wheelchair' is declared but its value is never read.

48   Wheelchair,
     ~~~~~~~~~~

src/components/PassengerRebooking.tsx:49:3 - error TS6133: 'Luggage' is declared but its value is never read.

49   Luggage,
     ~~~~~~~

src/components/PassengerRebooking.tsx:51:3 - error TS6133: 'Banknote' is declared but its value is never read.

51   Banknote,
     ~~~~~~~~

src/components/PassengerRebooking.tsx:52:3 - error TS6133: 'Copy' is declared but its value is never read.

52   Copy,
     ~~~~

src/components/PassengerRebooking.tsx:53:3 - error TS6133: 'ExternalLink' is declared but its value is never read.

53   ExternalLink,
     ~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:55:3 - error TS2724: '"lucide-react"' has no exported member named 'FlightIcon'. Did you mean 'FishIcon'?

55   FlightIcon as LucidePlane,
     ~~~~~~~~~~

src/components/PassengerRebooking.tsx:55:17 - error TS6133: 'LucidePlane' is declared but its value is never read.

55   FlightIcon as LucidePlane,
                   ~~~~~~~~~~~

src/components/PassengerRebooking.tsx:58:3 - error TS6133: 'PhoneCall' is declared but its value is never read.

58   PhoneCall,
     ~~~~~~~~~

src/components/PassengerRebooking.tsx:59:3 - error TS6133: 'Mail' is declared but its value is never read.

59   Mail,
     ~~~~

src/components/PassengerRebooking.tsx:60:3 - error TS6133: 'MessageSquare' is declared but its value is never read.

60   MessageSquare,
     ~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:61:3 - error TS6133: 'ThumbsUp' is declared but its value is never read.

61   ThumbsUp,
     ~~~~~~~~

src/components/PassengerRebooking.tsx:63:3 - error TS6133: 'Bell' is declared but its value is never read.

63   Bell,
     ~~~~

src/components/PassengerRebooking.tsx:64:3 - error TS6133: 'Smartphone' is declared but its value is never read.

64   Smartphone,
     ~~~~~~~~~~

src/components/PassengerRebooking.tsx:100:1 - error TS6133: 'Textarea' is declared but its value is never read.

100 import { Textarea } from "./ui/textarea";
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:105:38 - error TS7031: Binding element 'context' implicitly has an 'any' type.

105 export function PassengerRebooking({ context, onClearContext }) {
                                         ~~~~~~~

src/components/PassengerRebooking.tsx:105:47 - error TS6133: 'onClearContext' is declared but its value is never read.

105 export function PassengerRebooking({ context, onClearContext }) {
                                                  ~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:105:47 - error TS7031: Binding element 'onClearContext' implicitly has an 'any' type.

105 export function PassengerRebooking({ context, onClearContext }) {
                                                  ~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:106:9 - error TS6133: 'location' is declared but its value is never read.

106   const location = useLocation();
            ~~~~~~~~

src/components/PassengerRebooking.tsx:153:10 - error TS6133: 'showFlightDetails' is declared but its value is never read.

153   const [showFlightDetails, setShowFlightDetails] = useState(null);
             ~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:153:29 - error TS6133: 'setShowFlightDetails' is declared but its value is never read.

153   const [showFlightDetails, setShowFlightDetails] = useState(null);
                                ~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:154:10 - error TS6133: 'selectedRebookingFlight' is declared but its value is never read.

154   const [selectedRebookingFlight, setSelectedRebookingFlight] = useState(null);
             ~~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:154:35 - error TS6133: 'setSelectedRebookingFlight' is declared but its value is never read.

154   const [selectedRebookingFlight, setSelectedRebookingFlight] = useState(null);
                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:183:10 - error TS6133: 'pnrsForApproval' is declared but its value is never read.

183   const [pnrsForApproval, setPnrsForApproval] = useState(new Set());
             ~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:416:32 - error TS7006: Parameter 'passengerOrGroup' implicitly has an 'any' type.

416   const getAvailableFlights = (passengerOrGroup) => {
                                   ~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:525:9 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{}'.
  No index signature with a parameter of type 'string' was found on type '{}'.

525         updatedAvailableSeats[cabin] = {
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:526:14 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ business: { total: number; available: number; price: string; }; premiumEconomy: { total: number; available: number; price: string; }; economy: { total: number; available: number; price: string; }; }'.
  No index signature with a parameter of type 'string' was found on type '{ business: { total: number; available: number; price: string; }; premiumEconomy: { total: number; available: number; price: string; }; economy: { total: number; available: number; price: string; }; }'.

526           ...flight.availableSeats[cabin],
                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:529:13 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ business: { total: number; available: number; price: string; }; premiumEconomy: { total: number; available: number; price: string; }; economy: { total: number; available: number; price: string; }; }'.
  No index signature with a parameter of type 'string' was found on type '{ business: { total: number; available: number; price: string; }; premiumEconomy: { total: number; available: number; price: string; }; economy: { total: number; available: number; price: string; }; }'.

529             flight.availableSeats[cabin].available - passengersCount + 1,
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:543:38 - error TS7006: Parameter 'passengerOrGroup' implicitly has an 'any' type.

543   const calculateGroupFlightScore = (passengerOrGroup, flightId) => {
                                         ~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:543:56 - error TS7006: Parameter 'flightId' implicitly has an 'any' type.

543   const calculateGroupFlightScore = (passengerOrGroup, flightId) => {
                                                           ~~~~~~~~

src/components/PassengerRebooking.tsx:598:38 - error TS7006: Parameter 'passengerOrGroup' implicitly has an 'any' type.

598   const analyzeGroupCascadeImpact = (passengerOrGroup, flightId) => {
                                         ~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:598:56 - error TS7006: Parameter 'flightId' implicitly has an 'any' type.

598   const analyzeGroupCascadeImpact = (passengerOrGroup, flightId) => {
                                                           ~~~~~~~~

src/components/PassengerRebooking.tsx:635:41 - error TS7006: Parameter 'passengerOrGroup' implicitly has an 'any' type.

635   const generateGroupRecommendations = (passengerOrGroup, flightId) => {
                                            ~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:635:59 - error TS7006: Parameter 'flightId' implicitly has an 'any' type.

635   const generateGroupRecommendations = (passengerOrGroup, flightId) => {
                                                              ~~~~~~~~

src/components/PassengerRebooking.tsx:799:36 - error TS2345: Argument of type 'any[]' is not assignable to parameter of type 'SetStateAction<never[]>'.
  Type 'any[]' is not assignable to type 'never[]'.
    Type 'any' is not assignable to type 'never'.

799             setGeneratedPassengers(passengers);
                                       ~~~~~~~~~~

src/components/PassengerRebooking.tsx:835:22 - error TS7006: Parameter 'passenger' implicitly has an 'any' type.

835     return base.map((passenger) => {
                         ~~~~~~~~~

src/components/PassengerRebooking.tsx:836:29 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{}'.

836       const rebookingInfo = confirmedRebookings[passenger.id];
                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:837:30 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{}'.

837       const statusOverride = passengerRebookingStatus[passenger.id];
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:857:40 - error TS7006: Parameter 'acc' implicitly has an 'any' type.

857     const grouped = passengers.reduce((acc, passenger) => {
                                           ~~~

src/components/PassengerRebooking.tsx:857:45 - error TS7006: Parameter 'passenger' implicitly has an 'any' type.

857     const grouped = passengers.reduce((acc, passenger) => {
                                                ~~~~~~~~~

src/components/PassengerRebooking.tsx:867:49 - error TS7006: Parameter 'passenger' implicitly has an 'any' type.

867   const filteredPassengers = passengers.filter((passenger) => {
                                                    ~~~~~~~~~

src/components/PassengerRebooking.tsx:884:39 - error TS18046: 'passengersInGroup' is of type 'unknown'.

884       const filteredGroupPassengers = passengersInGroup.filter((passenger) => {
                                          ~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:884:65 - error TS7006: Parameter 'passenger' implicitly has an 'any' type.

884       const filteredGroupPassengers = passengersInGroup.filter((passenger) => {
                                                                    ~~~~~~~~~

src/components/PassengerRebooking.tsx:899:9 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{}'.
  No index signature with a parameter of type 'string' was found on type '{}'.

899         filtered[pnr] = filteredGroupPassengers;
            ~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:910:27 - error TS7006: Parameter 'status' implicitly has an 'any' type.

910   const getStatusColor = (status) => {
                              ~~~~~~

src/components/PassengerRebooking.tsx:925:29 - error TS7006: Parameter 'priority' implicitly has an 'any' type.

925   const getPriorityColor = (priority) => {
                                ~~~~~~~~

src/components/PassengerRebooking.tsx:938:26 - error TS7006: Parameter 'score' implicitly has an 'any' type.

938   const getScoreColor = (score) => {
                             ~~~~~

src/components/PassengerRebooking.tsx:945:25 - error TS7006: Parameter 'score' implicitly has an 'any' type.

945   const getScoreIcon = (score) => {
                            ~~~~~

src/components/PassengerRebooking.tsx:952:36 - error TS7006: Parameter 'severity' implicitly has an 'any' type.

952   const getCascadeSeverityColor = (severity) => {
                                       ~~~~~~~~

src/components/PassengerRebooking.tsx:965:34 - error TS7006: Parameter 'type' implicitly has an 'any' type.

965   const getRecommendationIcon = (type) => {
                                     ~~~~

src/components/PassengerRebooking.tsx:982:27 - error TS7006: Parameter 'amenity' implicitly has an 'any' type.

982   const getAmenityIcon = (amenity) => {
                              ~~~~~~~

src/components/PassengerRebooking.tsx:1007:9 - error TS6133: 'getServiceIcon' is declared but its value is never read.

1007   const getServiceIcon = (serviceKey) => {
             ~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1007:27 - error TS7006: Parameter 'serviceKey' implicitly has an 'any' type.

1007   const getServiceIcon = (serviceKey) => {
                               ~~~~~~~~~~

src/components/PassengerRebooking.tsx:1052:9 - error TS6133: 'reaccommodationType' is declared but its value is never read.

1052   const reaccommodationType = getReaccommodationType();
             ~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1055:33 - error TS7006: Parameter 'flightId' implicitly has an 'any' type.

1055   const handleCabinSelection = (flightId, cabinKey) => {
                                     ~~~~~~~~

src/components/PassengerRebooking.tsx:1055:43 - error TS7006: Parameter 'cabinKey' implicitly has an 'any' type.

1055   const handleCabinSelection = (flightId, cabinKey) => {
                                               ~~~~~~~~

src/components/PassengerRebooking.tsx:1062:29 - error TS7006: Parameter 'flightId' implicitly has an 'any' type.

1062   const getSelectedCabin = (flightId) => {
                                 ~~~~~~~~

src/components/PassengerRebooking.tsx:1063:12 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{}'.

1063     return selectedCabins[flightId] || null;
                ~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1066:37 - error TS7006: Parameter 'flight' implicitly has an 'any' type.

1066   const isCabinAvailableForGroup = (flight, cabinKey, groupSize = 1) => {
                                         ~~~~~~

src/components/PassengerRebooking.tsx:1066:45 - error TS7006: Parameter 'cabinKey' implicitly has an 'any' type.

1066   const isCabinAvailableForGroup = (flight, cabinKey, groupSize = 1) => {
                                                 ~~~~~~~~

src/components/PassengerRebooking.tsx:1071:34 - error TS7006: Parameter 'passenger' implicitly has an 'any' type.

1071   const handleRebookPassenger = (passenger) => {
                                      ~~~~~~~~~

src/components/PassengerRebooking.tsx:1077:33 - error TS7006: Parameter 'pnr' implicitly has an 'any' type.

1077   const handleRebookPnrGroup = (pnr, passengersInGroup) => {
                                     ~~~

src/components/PassengerRebooking.tsx:1077:38 - error TS7006: Parameter 'passengersInGroup' implicitly has an 'any' type.

1077   const handleRebookPnrGroup = (pnr, passengersInGroup) => {
                                          ~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1078:27 - error TS2353: Object literal may only specify known properties, and 'pnr' does not exist in type '(prevState: null) => null'.

1078     setSelectedPnrGroup({ pnr, passengers: passengersInGroup });
                               ~~~

src/components/PassengerRebooking.tsx:1083:31 - error TS7006: Parameter 'passengerOrGroup' implicitly has an 'any' type.

1083   const handleHotelBooking = (passengerOrGroup) => {
                                   ~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1085:45 - error TS2339: Property 'passengers' does not exist on type 'never'.

1085       setSelectedPassenger(selectedPnrGroup.passengers[0]); // Use first passenger for booking
                                                 ~~~~~~~~~~

src/components/PassengerRebooking.tsx:1092:31 - error TS7006: Parameter 'passengerOrGroup' implicitly has an 'any' type.

1092   const handleVoucherIssue = (passengerOrGroup) => {
                                   ~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1094:45 - error TS2339: Property 'passengers' does not exist on type 'never'.

1094       setSelectedPassenger(selectedPnrGroup.passengers[0]);
                                                 ~~~~~~~~~~

src/components/PassengerRebooking.tsx:1101:35 - error TS7006: Parameter 'passengerOrGroup' implicitly has an 'any' type.

1101   const handleTransportArrange = (passengerOrGroup) => {
                                       ~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1103:45 - error TS2339: Property 'passengers' does not exist on type 'never'.

1103       setSelectedPassenger(selectedPnrGroup.passengers[0]);
                                                 ~~~~~~~~~~

src/components/PassengerRebooking.tsx:1110:34 - error TS7006: Parameter 'flight' implicitly has an 'any' type.

1110   const handleFlightSelection = (flight) => {
                                      ~~~~~~

src/components/PassengerRebooking.tsx:1133:42 - error TS7006: Parameter 'serviceKey' implicitly has an 'any' type.

1133   const handleAdditionalServiceChange = (serviceKey, checked) => {
                                              ~~~~~~~~~~

src/components/PassengerRebooking.tsx:1133:54 - error TS7006: Parameter 'checked' implicitly has an 'any' type.

1133   const handleAdditionalServiceChange = (serviceKey, checked) => {
                                                          ~~~~~~~

src/components/PassengerRebooking.tsx:1140:31 - error TS7006: Parameter 'pnr' implicitly has an 'any' type.

1140   const handlePnrSelection = (pnr) => {
                                   ~~~

src/components/PassengerRebooking.tsx:1152:28 - error TS7006: Parameter 'checked' implicitly has an 'any' type.

1152   const handleSelectAll = (checked) => {
                                ~~~~~~~

src/components/PassengerRebooking.tsx:1155:39 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{}'.
  No index signature with a parameter of type 'string' was found on type '{}'.

1155         (pnr) => !isPnrGroupConfirmed(filteredPnrGroups[pnr]),
                                           ~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1163:28 - error TS7006: Parameter 'pnr' implicitly has an 'any' type.

1163   const handleExpandPnr = (pnr) => {
                                ~~~

src/components/PassengerRebooking.tsx:1183:37 - error TS2538: Type 'unknown' cannot be used as an index type.

1183       passengers: filteredPnrGroups[pnr],
                                         ~~~

src/components/PassengerRebooking.tsx:1187:7 - error TS2353: Object literal may only specify known properties, and 'pnr' does not exist in type '(prevState: null) => null'.

1187       pnr: `${selectedPnrs.size} groups`,
           ~~~

src/components/PassengerRebooking.tsx:1215:26 - error TS2339: Property 'passengers' does not exist on type 'never'.

1215       ? selectedPnrGroup.passengers
                              ~~~~~~~~~~

src/components/PassengerRebooking.tsx:1225:33 - error TS7006: Parameter 'passenger' implicitly has an 'any' type.

1225     passengersToUpdate.forEach((passenger) => {
                                     ~~~~~~~~~

src/components/PassengerRebooking.tsx:1226:7 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{}'.

1226       newRebookings[passenger.id] = {
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1227:49 - error TS2339: Property 'flightNumber' does not exist on type 'never'.

1227         flightNumber: selectedFlightForServices.flightNumber,
                                                     ~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1228:42 - error TS2339: Property 'selectedCabin' does not exist on type 'never'.

1228         cabin: selectedFlightForServices.selectedCabin,
                                              ~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1233:7 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{}'.

1233       newStatuses[passenger.id] = "Confirmed";
           ~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1257:59 - error TS2339: Property 'flightNumber' does not exist on type 'never'.

1257         description: `Flight: ${selectedFlightForServices.flightNumber} (${selectedFlightForServices.selectedCabin})`,
                                                               ~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1257:102 - error TS2339: Property 'selectedCabin' does not exist on type 'never'.

1257         description: `Flight: ${selectedFlightForServices.flightNumber} (${selectedFlightForServices.selectedCabin})`,
                                                                                                          ~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1262:32 - error TS7006: Parameter 'hotel' implicitly has an 'any' type.

1262   const confirmHotelBooking = (hotel) => {
                                    ~~~~~

src/components/PassengerRebooking.tsx:1270:25 - error TS7006: Parameter 'amount' implicitly has an 'any' type.

1270   const issueVoucher = (amount, type) => {
                             ~~~~~~

src/components/PassengerRebooking.tsx:1270:33 - error TS7006: Parameter 'type' implicitly has an 'any' type.

1270   const issueVoucher = (amount, type) => {
                                     ~~~~

src/components/PassengerRebooking.tsx:1273:72 - error TS2339: Property 'passengers' does not exist on type 'never'.

1273       description: `AED ${selectedPnrGroup ? amount * selectedPnrGroup.passengers.length : amount} credit`,
                                                                            ~~~~~~~~~~

src/components/PassengerRebooking.tsx:1277:29 - error TS6133: 'type' is declared but its value is never read.

1277   const arrangeTransport = (type, description) => {
                                 ~~~~

src/components/PassengerRebooking.tsx:1277:29 - error TS7006: Parameter 'type' implicitly has an 'any' type.

1277   const arrangeTransport = (type, description) => {
                                 ~~~~

src/components/PassengerRebooking.tsx:1277:35 - error TS7006: Parameter 'description' implicitly has an 'any' type.

1277   const arrangeTransport = (type, description) => {
                                       ~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1285:32 - error TS7006: Parameter 'groupPassengers' implicitly has an 'any' type.

1285   const isPnrGroupConfirmed = (groupPassengers) => {
                                    ~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1286:35 - error TS7006: Parameter 'p' implicitly has an 'any' type.

1286     return groupPassengers.every((p) => {
                                       ~

src/components/PassengerRebooking.tsx:1288:29 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{}'.

1288       const currentStatus = passengerRebookingStatus[p.id] || p.status;
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1294:32 - error TS7006: Parameter 'memberIdentifier' implicitly has an 'any' type.

1294   const handleCrewSelection = (memberIdentifier) => {
                                    ~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1348:37 - error TS2339: Property 'crew' does not exist on type 'never'.

1348         ...(Array.isArray(crewData?.crew) ? crewData.crew : []),
                                         ~~~~

src/components/PassengerRebooking.tsx:1348:54 - error TS2339: Property 'crew' does not exist on type 'never'.

1348         ...(Array.isArray(crewData?.crew) ? crewData.crew : []),
                                                          ~~~~

src/components/PassengerRebooking.tsx:1350:25 - error TS2339: Property 'crew' does not exist on type 'never'.

1350         ...((!crewData?.crew || crewData.crew.length === 0) ? [
                             ~~~~

src/components/PassengerRebooking.tsx:1350:42 - error TS2339: Property 'crew' does not exist on type 'never'.

1350         ...((!crewData?.crew || crewData.crew.length === 0) ? [
                                              ~~~~

src/components/PassengerRebooking.tsx:1401:37 - error TS18046: 'crewName' is of type 'unknown'.

1401           name: crewMember?.name || crewName.split(" (")[0] || crewName,
                                         ~~~~~~~~

src/components/PassengerRebooking.tsx:1419:42 - error TS2339: Property 'name' does not exist on type 'never'.

1419         hotel_name: selectedHotelForCrew.name,
                                              ~~~~

src/components/PassengerRebooking.tsx:1420:49 - error TS2339: Property 'distance' does not exist on type 'never'.

1420         hotel_location: `${selectedHotelForCrew.distance} from Airport`,
                                                     ~~~~~~~~

src/components/PassengerRebooking.tsx:1427:43 - error TS2339: Property 'pricePerNight' does not exist on type 'never'.

1427           parseFloat(selectedHotelForCrew.pricePerNight.replace(/[^\d.]/g, "")) *
                                               ~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1457:90 - error TS2339: Property 'name' does not exist on type 'never'.

1457         `Successfully assigned ${crewList.length} crew members to ${selectedHotelForCrew.name}. Booking reference: ${assignmentId}`,
                                                                                              ~~~~

src/components/PassengerRebooking.tsx:1464:52 - error TS18046: 'error' is of type 'unknown'.

1464         `An error occurred while assigning crew: ${error.message}`,
                                                        ~~~~~

src/components/PassengerRebooking.tsx:1486:52 - error TS7006: Parameter 'p' implicitly has an 'any' type.

1486     const confirmedPassengers = passengers.filter((p) => {
                                                        ~

src/components/PassengerRebooking.tsx:1487:29 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{}'.

1487       const currentStatus = passengerRebookingStatus[p.id] || p.status;
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1488:47 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{}'.

1488       return currentStatus === "Confirmed" && confirmedRebookings[p.id];
                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1541:61 - error TS7006: Parameter 'passenger' implicitly has an 'any' type.

1541           passengerRebookingData = confirmedPassengers.map((passenger) => {
                                                                 ~~~~~~~~~

src/components/PassengerRebooking.tsx:1542:35 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{}'.

1542             const rebookingInfo = confirmedRebookings[passenger.id];
                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1559:18 - error TS7006: Parameter 'service' implicitly has an 'any' type.

1559                 (service) => ({
                      ~~~~~~~

src/components/PassengerRebooking.tsx:1565:17 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{}'.

1565                 filteredPnrGroups[passenger.pnr]?.length || 1,
                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1573:13 - error TS7034: Variable 'crewHotelAssignmentsData' implicitly has type 'any[]' in some locations where its type cannot be determined.

1573         let crewHotelAssignmentsData = [];
                 ~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1578:28 - error TS18046: 'assignment' is of type 'unknown'.

1578               crew_member: assignment.crew_member,
                                ~~~~~~~~~~

src/components/PassengerRebooking.tsx:1579:27 - error TS18046: 'assignment' is of type 'unknown'.

1579               hotel_name: assignment.hotel_name,
                               ~~~~~~~~~~

src/components/PassengerRebooking.tsx:1580:31 - error TS18046: 'assignment' is of type 'unknown'.

1580               hotel_location: assignment.hotel_location,
                                   ~~~~~~~~~~

src/components/PassengerRebooking.tsx:1581:30 - error TS18046: 'assignment' is of type 'unknown'.

1581               check_in_date: assignment.check_in_date,
                                  ~~~~~~~~~~

src/components/PassengerRebooking.tsx:1582:31 - error TS18046: 'assignment' is of type 'unknown'.

1582               check_out_date: assignment.check_out_date,
                                   ~~~~~~~~~~

src/components/PassengerRebooking.tsx:1583:28 - error TS18046: 'assignment' is of type 'unknown'.

1583               room_number: assignment.room_number,
                                ~~~~~~~~~~

src/components/PassengerRebooking.tsx:1584:33 - error TS18046: 'assignment' is of type 'unknown'.

1584               special_requests: assignment.special_requests,
                                     ~~~~~~~~~~

src/components/PassengerRebooking.tsx:1585:34 - error TS18046: 'assignment' is of type 'unknown'.

1585               assignment_status: assignment.assignment_status,
                                      ~~~~~~~~~~

src/components/PassengerRebooking.tsx:1586:27 - error TS18046: 'assignment' is of type 'unknown'.

1586               total_cost: assignment.total_cost,
                               ~~~~~~~~~~

src/components/PassengerRebooking.tsx:1587:34 - error TS18046: 'assignment' is of type 'unknown'.

1587               booking_reference: assignment.booking_reference,
                                      ~~~~~~~~~~

src/components/PassengerRebooking.tsx:1588:34 - error TS18046: 'assignment' is of type 'unknown'.

1588               transport_details: assignment.transport_details,
                                      ~~~~~~~~~~

src/components/PassengerRebooking.tsx:1589:27 - error TS18046: 'assignment' is of type 'unknown'.

1589               created_by: assignment.created_by,
                               ~~~~~~~~~~

src/components/PassengerRebooking.tsx:1613:20 - error TS7006: Parameter 'p' implicitly has an 'any' type.

1613                   (p) => p.connectedFlights && p.connectedFlights.length > 0,
                        ~

src/components/PassengerRebooking.tsx:1631:24 - error TS2339: Property 'passenger_rebooking' does not exist on type '{ disruption_id: any; option_id: any; option_title: any; estimated_cost: any; estimated_delay: any; passenger_impact: { affected: any; reaccommodated: any; compensated: number; missingConnections: any; }; ... 5 more ...; notes: string; }'.

1631           solutionData.passenger_rebooking = passengerRebookingData;
                            ~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1635:24 - error TS2339: Property 'crew_hotel_assignments' does not exist on type '{ disruption_id: any; option_id: any; option_title: any; estimated_cost: any; estimated_delay: any; passenger_impact: { affected: any; reaccommodated: any; compensated: number; missingConnections: any; }; ... 5 more ...; notes: string; }'.

1635           solutionData.crew_hotel_assignments = crewHotelAssignmentsData;
                            ~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1635:49 - error TS7005: Variable 'crewHotelAssignmentsData' implicitly has an 'any[]' type.

1635           solutionData.crew_hotel_assignments = crewHotelAssignmentsData;
                                                     ~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1645:65 - error TS7006: Parameter 'p' implicitly has an 'any' type.

1645             const uniquePnrs = new Set(confirmedPassengers.map((p) => p.pnr)).size;
                                                                     ~

src/components/PassengerRebooking.tsx:1650:54 - error TS18046: 'assignment' is of type 'unknown'.

1650               .reduce((total, assignment) => total + assignment.crew_member.length, 0);
                                                          ~~~~~~~~~~

src/components/PassengerRebooking.tsx:1654:65 - error TS7006: Parameter 'p' implicitly has an 'any' type.

1654             const uniquePnrs = new Set(confirmedPassengers.map((p) => p.pnr)).size;
                                                                     ~

src/components/PassengerRebooking.tsx:1656:54 - error TS18046: 'assignment' is of type 'unknown'.

1656               .reduce((total, assignment) => total + assignment.crew_member.length, 0);
                                                          ~~~~~~~~~~

src/components/PassengerRebooking.tsx:1703:6 - error TS7006: Parameter 'p' implicitly has an 'any' type.

1703     (p) => p.status === "Rebooking Required",
          ~

src/components/PassengerRebooking.tsx:1706:6 - error TS7006: Parameter 'p' implicitly has an 'any' type.

1706     (p) => p.status === "Accommodation Needed",
          ~

src/components/PassengerRebooking.tsx:1708:40 - error TS7006: Parameter 'p' implicitly has an 'any' type.

1708   const confirmed = passengers.filter((p) => p.status === "Confirmed").length;
                                            ~

src/components/PassengerRebooking.tsx:1710:9 - error TS6133: 'displayData' is declared but its value is never read.

1710   const displayData = groupView
             ~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1714:57 - error TS2339: Property 'passengers' does not exist on type 'never'.

1714   const groupSize = selectedPnrGroup ? selectedPnrGroup.passengers.length : 1;
                                                             ~~~~~~~~~~

src/components/PassengerRebooking.tsx:1836:9 - error TS2353: Object literal may only specify known properties, and 'crew' does not exist in type '(prevState: null) => null'.

1836         crew: recoveryOptionData.crewData,
             ~~~~

src/components/PassengerRebooking.tsx:1843:9 - error TS2353: Object literal may only specify known properties, and 'crew' does not exist in type '(prevState: null) => null'.

1843         crew: [],
             ~~~~

src/components/PassengerRebooking.tsx:1880:9 - error TS6133: 'allPnrsConfirmed' is declared but its value is never read.

1880   const allPnrsConfirmed = Object.values(filteredPnrGroups).every((group) =>
             ~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1885:9 - error TS6133: 'canSendForApproval' is declared but its value is never read.

1885   const canSendForApproval =
             ~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:1888:49 - error TS2538: Type 'unknown' cannot be used as an index type.

1888       const groupPassengers = filteredPnrGroups[pnr];
                                                     ~~~

src/components/PassengerRebooking.tsx:1891:32 - error TS7006: Parameter 'p' implicitly has an 'any' type.

1891         groupPassengers.every((p) => {
                                    ~

src/components/PassengerRebooking.tsx:1893:33 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{}'.

1893           const currentStatus = passengerRebookingStatus[p.id] || p.status;
                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:2030:15 - error TS6133: 'shouldShowBoth' is declared but its value is never read.

2030         const shouldShowBoth = showBothTabs || (!hasPassenger && !hasCrew);
                   ~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:2120:52 - error TS7006: Parameter 'p' implicitly has an 'any' type.

2120                               ? passengers.filter((p) => p.priority === "VIP")
                                                        ~

src/components/PassengerRebooking.tsx:2308:41 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{}'.
  No index signature with a parameter of type 'string' was found on type '{}'.

2308                                         filteredPnrGroups[pnr],
                                             ~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:2315:55 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{}'.
  No index signature with a parameter of type 'string' was found on type '{}'.

2315                                   isPnrGroupConfirmed(filteredPnrGroups[pnr]),
                                                           ~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:2360:44 - error TS18046: 'groupPassengers' is of type 'unknown'.

2360                                           {groupPassengers.length} passenger
                                                ~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:2361:44 - error TS18046: 'groupPassengers' is of type 'unknown'.

2361                                           {groupPassengers.length > 1 ? "s" : ""}
                                                ~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:2374:42 - error TS18046: 'groupPassengers' is of type 'unknown'.

2374                                         {groupPassengers[0]?.priority ||
                                              ~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:2419:38 - error TS18046: 'groupPassengers' is of type 'unknown'.

2419                                     {groupPassengers.map((passenger) => (
                                          ~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:2419:59 - error TS7006: Parameter 'passenger' implicitly has an 'any' type.

2419                                     {groupPassengers.map((passenger) => (
                                                               ~~~~~~~~~

src/components/PassengerRebooking.tsx:2494:52 - error TS7006: Parameter 'passenger' implicitly has an 'any' type.

2494                           {filteredPassengers.map((passenger) => (
                                                        ~~~~~~~~~

src/components/PassengerRebooking.tsx:2630:41 - error TS2339: Property 'crew' does not exist on type 'never'.

2630                             {(crewData?.crew && crewData.crew.length > 0
                                             ~~~~

src/components/PassengerRebooking.tsx:2630:58 - error TS2339: Property 'crew' does not exist on type 'never'.

2630                             {(crewData?.crew && crewData.crew.length > 0
                                                              ~~~~

src/components/PassengerRebooking.tsx:2631:42 - error TS2339: Property 'crew' does not exist on type 'never'.

2631                               ? crewData.crew
                                              ~~~~

src/components/PassengerRebooking.tsx:2671:36 - error TS7006: Parameter 'crewMember' implicitly has an 'any' type.

2671                             ).map((crewMember, index) => {
                                        ~~~~~~~~~~

src/components/PassengerRebooking.tsx:2671:48 - error TS7006: Parameter 'index' implicitly has an 'any' type.

2671                             ).map((crewMember, index) => {
                                                    ~~~~~

src/components/PassengerRebooking.tsx:2679:33 - error TS18046: 'assignment' is of type 'unknown'.

2679                                 assignment.crew_member.some(
                                     ~~~~~~~~~~

src/components/PassengerRebooking.tsx:2680:36 - error TS7006: Parameter 'cm' implicitly has an 'any' type.

2680                                   (cm) =>
                                        ~~

src/components/PassengerRebooking.tsx:2756:51 - error TS2339: Property 'id' does not exist on type 'never'.

2756                             selectedHotelForCrew?.id === hotel.id
                                                       ~~

src/components/PassengerRebooking.tsx:2964:50 - error TS7006: Parameter 'p' implicitly has an 'any' type.

2964                             ? passengers.filter((p) => p.priority === "VIP")
                                                      ~

src/components/PassengerRebooking.tsx:3152:39 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{}'.
  No index signature with a parameter of type 'string' was found on type '{}'.

3152                                       filteredPnrGroups[pnr],
                                           ~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:3159:53 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{}'.
  No index signature with a parameter of type 'string' was found on type '{}'.

3159                                 isPnrGroupConfirmed(filteredPnrGroups[pnr]),
                                                         ~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:3200:42 - error TS18046: 'groupPassengers' is of type 'unknown'.

3200                                         {groupPassengers.length} passenger
                                              ~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:3201:42 - error TS18046: 'groupPassengers' is of type 'unknown'.

3201                                         {groupPassengers.length > 1 ? "s" : ""}
                                              ~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:3212:40 - error TS18046: 'groupPassengers' is of type 'unknown'.

3212                                       {groupPassengers[0]?.priority ||
                                            ~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:3254:36 - error TS18046: 'groupPassengers' is of type 'unknown'.

3254                                   {groupPassengers.map((passenger) => (
                                        ~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:3254:57 - error TS7006: Parameter 'passenger' implicitly has an 'any' type.

3254                                   {groupPassengers.map((passenger) => (
                                                             ~~~~~~~~~

src/components/PassengerRebooking.tsx:3329:50 - error TS7006: Parameter 'passenger' implicitly has an 'any' type.

3329                         {filteredPassengers.map((passenger) => (
                                                      ~~~~~~~~~

src/components/PassengerRebooking.tsx:3454:39 - error TS2339: Property 'crew' does not exist on type 'never'.

3454                           {(crewData?.crew && crewData.crew.length > 0
                                           ~~~~

src/components/PassengerRebooking.tsx:3454:56 - error TS2339: Property 'crew' does not exist on type 'never'.

3454                           {(crewData?.crew && crewData.crew.length > 0
                                                            ~~~~

src/components/PassengerRebooking.tsx:3455:40 - error TS2339: Property 'crew' does not exist on type 'never'.

3455                             ? crewData.crew
                                            ~~~~

src/components/PassengerRebooking.tsx:3495:34 - error TS7006: Parameter 'crewMember' implicitly has an 'any' type.

3495                           ).map((crewMember, index) => {
                                      ~~~~~~~~~~

src/components/PassengerRebooking.tsx:3495:46 - error TS7006: Parameter 'index' implicitly has an 'any' type.

3495                           ).map((crewMember, index) => {
                                                  ~~~~~

src/components/PassengerRebooking.tsx:3498:31 - error TS18046: 'assignment' is of type 'unknown'.

3498                               assignment.crew_member.some(
                                   ~~~~~~~~~~

src/components/PassengerRebooking.tsx:3499:34 - error TS7006: Parameter 'cm' implicitly has an 'any' type.

3499                                 (cm) =>
                                      ~~

src/components/PassengerRebooking.tsx:3629:59 - error TS2339: Property 'id' does not exist on type 'never'.

3629                                     selectedHotelForCrew?.id === hotel.id
                                                               ~~

src/components/PassengerRebooking.tsx:3633:63 - error TS2345: Argument of type '{ id: string; name: string; category: string; distance: string; pricePerNight: string; rating: number; amenities: string[]; availability: string; image: string; description: string; }' is not assignable to parameter of type 'SetStateAction<null>'.
  Type '{ id: string; name: string; category: string; distance: string; pricePerNight: string; rating: number; amenities: string[]; availability: string; image: string; description: string; }' provides no match for the signature '(prevState: null): null'.

3633                                       setSelectedHotelForCrew(hotel);
                                                                   ~~~~~

src/components/PassengerRebooking.tsx:3709:40 - error TS18046: 'assignment' is of type 'unknown'.

3709                                       {assignment.hotel_name}
                                            ~~~~~~~~~~

src/components/PassengerRebooking.tsx:3712:49 - error TS18046: 'assignment' is of type 'unknown'.

3712                                       Booking: {assignment.booking_reference}
                                                     ~~~~~~~~~~

src/components/PassengerRebooking.tsx:3716:38 - error TS18046: 'assignment' is of type 'unknown'.

3716                                     {assignment.assignment_status}
                                          ~~~~~~~~~~

src/components/PassengerRebooking.tsx:3721:36 - error TS18046: 'assignment' is of type 'unknown'.

3721                                   {assignment.crew_member
                                        ~~~~~~~~~~

src/components/PassengerRebooking.tsx:3722:43 - error TS7006: Parameter 'c' implicitly has an 'any' type.

3722                                     .map((c) => c.name)
                                               ~

src/components/PassengerRebooking.tsx:3728:37 - error TS18046: 'assignment' is of type 'unknown'.

3728                                     assignment.check_in_date,
                                         ~~~~~~~~~~

src/components/PassengerRebooking.tsx:3730:48 - error TS18046: 'assignment' is of type 'unknown'.

3730                                   | Cost: AED {assignment.total_cost}
                                                    ~~~~~~~~~~

src/components/PassengerRebooking.tsx:3786:68 - error TS7006: Parameter 'p' implicitly has an 'any' type.

3786                     const confirmedPassengers = passengers.filter((p) => {
                                                                        ~

src/components/PassengerRebooking.tsx:3787:45 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{}'.

3787                       const currentStatus = passengerRebookingStatus[p.id] || p.status;
                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:3788:63 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{}'.

3788                       return currentStatus === "Confirmed" && confirmedRebookings[p.id];
                                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:3829:33 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(predicate: (value: unknown, index: number, array: unknown[]) => value is unknown, thisArg?: any): unknown[]', gave the following error.
    Argument of type '([pnr]: [any]) => boolean' is not assignable to parameter of type '(value: unknown, index: number, array: unknown[]) => value is unknown'.
      Types of parameters '__0' and 'value' are incompatible.
        Type 'unknown' is not assignable to type '[any]'.
  Overload 2 of 2, '(predicate: (value: unknown, index: number, array: unknown[]) => unknown, thisArg?: any): unknown[]', gave the following error.
    Argument of type '([pnr]: [any]) => boolean' is not assignable to parameter of type '(value: unknown, index: number, array: unknown[]) => unknown'.
      Types of parameters '__0' and 'value' are incompatible.
        Type 'unknown' is not assignable to type '[any]'.

3829                         .filter(([pnr]) => selectedPnrs.has(pnr))
                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


src/components/PassengerRebooking.tsx:3832:63 - error TS2339: Property 'pnr' does not exist on type 'never'.

3832                   : `Group Rebooking - PNR ${selectedPnrGroup.pnr} (${selectedPnrGroup.passengers.length} passengers)`
                                                                   ~~~

src/components/PassengerRebooking.tsx:3832:88 - error TS2339: Property 'passengers' does not exist on type 'never'.

3832                   : `Group Rebooking - PNR ${selectedPnrGroup.pnr} (${selectedPnrGroup.passengers.length} passengers)`
                                                                                            ~~~~~~~~~~

src/components/PassengerRebooking.tsx:3833:62 - error TS2339: Property 'name' does not exist on type 'never'.

3833                 : `Passenger Services - ${selectedPassenger?.name}`}
                                                                  ~~~~

src/components/PassengerRebooking.tsx:3839:80 - error TS2339: Property 'pnr' does not exist on type 'never'.

3839                   : `Manage rebooking and services for PNR: ${selectedPnrGroup.pnr}`
                                                                                    ~~~

src/components/PassengerRebooking.tsx:3840:80 - error TS2339: Property 'pnr' does not exist on type 'never'.

3840                 : `Manage rebooking and services for PNR: ${selectedPassenger?.pnr}`}
                                                                                    ~~~

src/components/PassengerRebooking.tsx:3855:52 - error TS2339: Property 'flightNumber' does not exist on type 'never'.

3855                         {selectedFlightForServices.flightNumber}
                                                        ~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:3858:52 - error TS2339: Property 'route' does not exist on type 'never'.

3858                         {selectedFlightForServices.route} •{" "}
                                                        ~~~~~

src/components/PassengerRebooking.tsx:3859:52 - error TS2339: Property 'departure' does not exist on type 'never'.

3859                         {selectedFlightForServices.departure} →{" "}
                                                        ~~~~~~~~~

src/components/PassengerRebooking.tsx:3860:52 - error TS2339: Property 'arrival' does not exist on type 'never'.

3860                         {selectedFlightForServices.arrival}
                                                        ~~~~~~~

src/components/PassengerRebooking.tsx:3871:61 - error TS2339: Property 'selectedCabin' does not exist on type 'never'.

3871                                   selectedFlightForServices.selectedCabin,
                                                                 ~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:3882:57 - error TS2339: Property 'selectedCabinDetails' does not exist on type 'never'.

3882                               selectedFlightForServices.selectedCabinDetails
                                                             ~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:3892:56 - error TS2339: Property 'suitabilityScore' does not exist on type 'never'.

3892                             {selectedFlightForServices.suitabilityScore}%
                                                            ~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:3920:29 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ hotel: boolean; mealVoucher: boolean; transport: boolean; specialAssistance: boolean; priorityBaggageHandling: boolean; loungeAccess: boolean; }'.
  No index signature with a parameter of type 'string' was found on type '{ hotel: boolean; mealVoucher: boolean; transport: boolean; specialAssistance: boolean; priorityBaggageHandling: boolean; loungeAccess: boolean; }'.

3920                             selectedAdditionalServices[service.key];
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:4061:73 - error TS2339: Property 'pnr' does not exist on type 'never'.

4061                               Group Information - PNR {selectedPnrGroup.pnr}
                                                                             ~~~

src/components/PassengerRebooking.tsx:4066:49 - error TS2339: Property 'passengers' does not exist on type 'never'.

4066                               {selectedPnrGroup.passengers.map(
                                                     ~~~~~~~~~~

src/components/PassengerRebooking.tsx:4067:34 - error TS7006: Parameter 'passenger' implicitly has an 'any' type.

4067                                 (passenger, index) => (
                                      ~~~~~~~~~

src/components/PassengerRebooking.tsx:4067:45 - error TS7006: Parameter 'index' implicitly has an 'any' type.

4067                                 (passenger, index) => (
                                                 ~~~~~

src/components/PassengerRebooking.tsx:4161:39 - error TS18047: 'selectedPassenger' is possibly 'null'.

4161                                 <div>{selectedPassenger.name}</div>
                                           ~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:4167:39 - error TS18047: 'selectedPassenger' is possibly 'null'.

4167                                 <div>{selectedPassenger.pnr}</div>
                                           ~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:4175:37 - error TS18047: 'selectedPassenger' is possibly 'null'.

4175                                     selectedPassenger.priority,
                                         ~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:4178:36 - error TS18047: 'selectedPassenger' is possibly 'null'.

4178                                   {selectedPassenger.priority}
                                        ~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:4187:37 - error TS18047: 'selectedPassenger' is possibly 'null'.

4187                                     selectedPassenger.status,
                                         ~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:4190:36 - error TS18047: 'selectedPassenger' is possibly 'null'.

4190                                   {selectedPassenger.status}
                                        ~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:4197:39 - error TS18047: 'selectedPassenger' is possibly 'null'.

4197                                 <div>{selectedPassenger.seat}</div>
                                           ~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:4204:36 - error TS18047: 'selectedPassenger' is possibly 'null'.

4204                                   {selectedPassenger.contactInfo}
                                        ~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:4208:30 - error TS18047: 'selectedPassenger' is possibly 'null'.

4208                             {selectedPassenger.specialRequirements && (
                                  ~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:4214:36 - error TS18047: 'selectedPassenger' is possibly 'null'.

4214                                   {selectedPassenger.specialRequirements}
                                        ~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:4234:36 - error TS18047: 'selectedPassenger' is possibly 'null'.

4234                                   {selectedPassenger.preferences
                                        ~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:4243:36 - error TS18047: 'selectedPassenger' is possibly 'null'.

4243                                   {selectedPassenger.preferences
                                        ~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:4252:36 - error TS18047: 'selectedPassenger' is possibly 'null'.

4252                                   {selectedPassenger.preferences
                                        ~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:4261:36 - error TS18047: 'selectedPassenger' is possibly 'null'.

4261                                   {selectedPassenger.preferences?.loyaltyTier ||
                                        ~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:4266:30 - error TS18047: 'selectedPassenger' is possibly 'null'.

4266                             {selectedPassenger.connectedFlights &&
                                  ~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:4267:31 - error TS18047: 'selectedPassenger' is possibly 'null'.

4267                               selectedPassenger.connectedFlights.length > 0 && (
                                   ~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:4273:38 - error TS18047: 'selectedPassenger' is possibly 'null'.

4273                                     {selectedPassenger.connectedFlights.map(
                                          ~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:4274:40 - error TS7006: Parameter 'flight' implicitly has an 'any' type.

4274                                       (flight, idx) => (
                                            ~~~~~~

src/components/PassengerRebooking.tsx:4274:48 - error TS7006: Parameter 'idx' implicitly has an 'any' type.

4274                                       (flight, idx) => (
                                                    ~~~

src/components/PassengerRebooking.tsx:4296:43 - error TS2339: Property 'passengers' does not exist on type 'never'.

4296                         selectedPnrGroup?.passengers || selectedPassenger,
                                               ~~~~~~~~~~

src/components/PassengerRebooking.tsx:4355:55 - error TS2339: Property 'passengers' does not exist on type 'never'.

4355                                     {selectedPnrGroup.passengers.length}{" "}
                                                           ~~~~~~~~~~

src/components/PassengerRebooking.tsx:4370:39 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{}'.
  No index signature with a parameter of type 'string' was found on type '{}'.

4370                                       flight.availableSeats[cabinOption.key];
                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PassengerRebooking.tsx:4596:59 - error TS2339: Property 'passengers' does not exist on type 'never'.

4596                             `(Group of ${selectedPnrGroup.passengers.length})`}
                                                               ~~~~~~~~~~

src/components/PassengerRebooking.tsx:4608:76 - error TS2339: Property 'passengers' does not exist on type 'never'.

4608                                   ? `Overnight stay for ${selectedPnrGroup.passengers.length} passengers`
                                                                                ~~~~~~~~~~

src/components/PassengerRebooking.tsx:4630:66 - error TS2339: Property 'passengers' does not exist on type 'never'.

4630                                   ? `AED ${50 * selectedPnrGroup.passengers.length} total for group`
                                                                      ~~~~~~~~~~

src/components/PassengerRebooking.tsx:4654:77 - error TS2339: Property 'passengers' does not exist on type 'never'.

4654                                   ? `Group transport for ${selectedPnrGroup.passengers.length} passengers`
                                                                                 ~~~~~~~~~~

src/components/PassengerRebooking.tsx:4701:51 - error TS2339: Property 'name' does not exist on type 'never'.

4701               Hotel Booking - {selectedPassenger?.name}
                                                       ~~~~

src/components/PassengerRebooking.tsx:4703:48 - error TS2339: Property 'passengers' does not exist on type 'never'.

4703                 ` (Group of ${selectedPnrGroup.passengers.length})`}
                                                    ~~~~~~~~~~

src/components/PassengerRebooking.tsx:4707:35 - error TS2339: Property 'pnr' does not exist on type 'never'.

4707               {selectedPassenger?.pnr}
                                       ~~~

src/components/PassengerRebooking.tsx:4719:75 - error TS2339: Property 'name' does not exist on type 'never'.

4719                   Hotel reservation has been made for {selectedPassenger?.name}
                                                                               ~~~~

src/components/PassengerRebooking.tsx:4721:46 - error TS2339: Property 'passengers' does not exist on type 'never'.

4721                     ` and ${selectedPnrGroup.passengers.length - 1} other passenger(s)`}
                                                  ~~~~~~~~~~

src/components/PassengerRebooking.tsx:4725:37 - error TS2339: Property 'name' does not exist on type 'never'.

4725                     {selectedHotel?.name}
                                         ~~~~

src/components/PassengerRebooking.tsx:4728:63 - error TS2339: Property 'contactInfo' does not exist on type 'never'.

4728                     Confirmation sent to: {selectedPassenger?.contactInfo}
                                                                   ~~~~~~~~~~~

src/components/PassengerRebooking.tsx:4771:54 - error TS2339: Property 'passengers' does not exist on type 'never'.

4771                                   x{selectedPnrGroup.passengers.length} rooms
                                                          ~~~~~~~~~~

src/components/PassengerRebooking.tsx:4832:61 - error TS2339: Property 'name' does not exist on type 'never'.

4832               Generate meal voucher for {selectedPassenger?.name}
                                                                 ~~~~

src/components/PassengerRebooking.tsx:4834:49 - error TS2339: Property 'passengers' does not exist on type 'never'.

4834                 ` and group (${selectedPnrGroup.passengers.length} passengers)`}
                                                     ~~~~~~~~~~

src/components/PassengerRebooking.tsx:4853:44 - error TS2339: Property 'passengers' does not exist on type 'never'.

4853                       `+${selectedPnrGroup.passengers.length - 1}`}
                                                ~~~~~~~~~~

src/components/PassengerRebooking.tsx:4858:39 - error TS2339: Property 'contactInfo' does not exist on type 'never'.

4858                   {selectedPassenger?.contactInfo}
                                           ~~~~~~~~~~~

src/components/PassengerRebooking.tsx:4879:49 - error TS2339: Property 'passengers' does not exist on type 'never'.

4879                         ? 50 * selectedPnrGroup.passengers.length
                                                     ~~~~~~~~~~

src/components/PassengerRebooking.tsx:4899:49 - error TS2339: Property 'passengers' does not exist on type 'never'.

4899                         ? 75 * selectedPnrGroup.passengers.length
                                                     ~~~~~~~~~~

src/components/PassengerRebooking.tsx:4919:50 - error TS2339: Property 'passengers' does not exist on type 'never'.

4919                         ? 100 * selectedPnrGroup.passengers.length
                                                      ~~~~~~~~~~

src/components/PassengerRebooking.tsx:4939:61 - error TS2339: Property 'name' does not exist on type 'never'.

4939               Book ground transport for {selectedPassenger?.name}
                                                                 ~~~~

src/components/PassengerRebooking.tsx:4941:49 - error TS2339: Property 'passengers' does not exist on type 'never'.

4941                 ` and group (${selectedPnrGroup.passengers.length} passengers)`}
                                                     ~~~~~~~~~~

src/components/PassengerRebooking.tsx:4961:58 - error TS2339: Property 'contactInfo' does not exist on type 'never'.

4961                     Details sent to: {selectedPassenger?.contactInfo}
                                                              ~~~~~~~~~~~

src/components/PassengerRebooking.tsx:4980:68 - error TS2339: Property 'passengers' does not exist on type 'never'.

4980                           ? `Multiple taxis for ${selectedPnrGroup.passengers.length} passengers`
                                                                        ~~~~~~~~~~

src/components/PassengerRebooking.tsx:4987:59 - error TS2339: Property 'passengers' does not exist on type 'never'.

4987                         ? 80 * Math.ceil(selectedPnrGroup.passengers.length / 4)
                                                               ~~~~~~~~~~

src/components/PassengerRebooking.tsx:5011:49 - error TS2339: Property 'passengers' does not exist on type 'never'.

5011                         ? 40 * selectedPnrGroup.passengers.length
                                                     ~~~~~~~~~~

src/components/PassengerRebooking.tsx:5036:54 - error TS2339: Property 'passengers' does not exist on type 'never'.

5036                           Math.ceil(selectedPnrGroup.passengers.length / 3)
                                                          ~~~~~~~~~~

src/components/PastRecoveryLogs.tsx:1:8 - error TS6133: 'React' is declared but its value is never read.

1 import React, { useState, useEffect } from "react";
         ~~~~~

src/components/PastRecoveryLogs.tsx:17:3 - error TS6133: 'Search' is declared but its value is never read.

17   Search,
     ~~~~~~

src/components/PastRecoveryLogs.tsx:19:3 - error TS6133: 'Calendar' is declared but its value is never read.

19   Calendar,
     ~~~~~~~~

src/components/PastRecoveryLogs.tsx:853:27 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{}'.
  No index signature with a parameter of type 'string' was found on type '{}'.

853                           categoryCount[category] =
                              ~~~~~~~~~~~~~~~~~~~~~~~

src/components/PastRecoveryLogs.tsx:854:30 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{}'.
  No index signature with a parameter of type 'string' was found on type '{}'.

854                             (categoryCount[category] || 0) + 1;
                                 ~~~~~~~~~~~~~~~~~~~~~~~

src/components/PastRecoveryLogs.tsx:872:35 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ weather: string; crew: string; aog: string; aircraft: string; airport: string; diversion: string; security: string; other: string; }'.
  No index signature with a parameter of type 'string' was found on type '{ weather: string; crew: string; aog: string; aircraft: string; airport: string; diversion: string; security: string; other: string; }'.

872                             fill: colorMap[category] || colorMap.other,
                                      ~~~~~~~~~~~~~~~~~~

src/components/PastRecoveryLogs.tsx:927:23 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{}'.
  No index signature with a parameter of type 'string' was found on type '{}'.

927                       categoryCount[category] =
                          ~~~~~~~~~~~~~~~~~~~~~~~

src/components/PastRecoveryLogs.tsx:928:26 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{}'.
  No index signature with a parameter of type 'string' was found on type '{}'.

928                         (categoryCount[category] || 0) + 1;
                             ~~~~~~~~~~~~~~~~~~~~~~~

src/components/PastRecoveryLogs.tsx:945:33 - error TS18046: 'count' is of type 'unknown'.

945                             ? ((count / totalLogs) * 100).toFixed(1)
                                    ~~~~~

src/components/PastRecoveryLogs.tsx:953:66 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ Weather: string; Crew: string; AOG: string; Aircraft: string; Airport: string; Security: string; Other: string; }'.
  No index signature with a parameter of type 'string' was found on type '{ Weather: string; Crew: string; AOG: string; Aircraft: string; Airport: string; Security: string; Other: string; }'.

953                               className={`w-3 h-3 rounded-full ${colorMap[category] || colorMap.Other}`}
                                                                     ~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3:8 - error TS6133: 'React' is declared but its value is never read.

3 import React, { useState, useEffect } from "react";
         ~~~~~

src/components/PendingSolutions.tsx:19:1 - error TS6192: All imports in import declaration are unused.

 19 import {
    ~~~~~~~~
 20   Table,
    ~~~~~~~~
... 
 25   TableRow,
    ~~~~~~~~~~~
 26 } from "./ui/table";
    ~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:34:3 - error TS6133: 'DialogTrigger' is declared but its value is never read.

34   DialogTrigger,
     ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:47:3 - error TS6133: 'MessageSquare' is declared but its value is never read.

47   MessageSquare,
     ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:48:3 - error TS6133: 'Calendar' is declared but its value is never read.

48   Calendar,
     ~~~~~~~~

src/components/PendingSolutions.tsx:49:3 - error TS6133: 'MapPin' is declared but its value is never read.

49   MapPin,
     ~~~~~~

src/components/PendingSolutions.tsx:55:3 - error TS6133: 'Send' is declared but its value is never read.

55   Send,
     ~~~~

src/components/PendingSolutions.tsx:57:3 - error TS6133: 'Award' is declared but its value is never read.

57   Award,
     ~~~~~

src/components/PendingSolutions.tsx:58:3 - error TS6133: 'Timer' is declared but its value is never read.

58   Timer,
     ~~~~~

src/components/PendingSolutions.tsx:60:3 - error TS6133: 'Zap' is declared but its value is never read.

60   Zap,
     ~~~

src/components/PendingSolutions.tsx:62:3 - error TS6133: 'TrendingDown' is declared but its value is never read.

62   TrendingDown,
     ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:66:3 - error TS6133: 'Star' is declared but its value is never read.

66   Star,
     ~~~~

src/components/PendingSolutions.tsx:67:3 - error TS6133: 'Shield' is declared but its value is never read.

67   Shield,
     ~~~~~~

src/components/PendingSolutions.tsx:68:3 - error TS6133: 'Phone' is declared but its value is never read.

68   Phone,
     ~~~~~

src/components/PendingSolutions.tsx:69:3 - error TS6133: 'Mail' is declared but its value is never read.

69   Mail,
     ~~~~

src/components/PendingSolutions.tsx:70:3 - error TS6133: 'Clock3' is declared but its value is never read.

70   Clock3,
     ~~~~~~

src/components/PendingSolutions.tsx:71:3 - error TS6133: 'Lightbulb' is declared but its value is never read.

71   Lightbulb,
     ~~~~~~~~~

src/components/PendingSolutions.tsx:75:3 - error TS6133: 'PhoneCall' is declared but its value is never read.

75   PhoneCall,
     ~~~~~~~~~

src/components/PendingSolutions.tsx:81:1 - error TS6133: 'Console' is declared but its value is never read.

81 import { Console } from "console";
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:145:11 - error TS18046: 'plan' is of type 'unknown'.

145           plan.id ||
              ~~~~

src/components/PendingSolutions.tsx:146:52 - error TS18046: 'plan' is of type 'unknown'.

146           `RP-${new Date().getFullYear()}-${String(plan.id || Math.floor(Math.random() * 1000)).padStart(3, "0")}`,
                                                       ~~~~

src/components/PendingSolutions.tsx:147:16 - error TS18046: 'plan' is of type 'unknown'.

147         title: plan.option_title || plan.title || "Recovery Plan",
                   ~~~~

src/components/PendingSolutions.tsx:147:37 - error TS18046: 'plan' is of type 'unknown'.

147         title: plan.option_title || plan.title || "Recovery Plan",
                                        ~~~~

src/components/PendingSolutions.tsx:148:23 - error TS18046: 'plan' is of type 'unknown'.

148         flightNumber: plan.flight_number || "N/A",
                          ~~~~

src/components/PendingSolutions.tsx:149:16 - error TS18046: 'plan' is of type 'unknown'.

149         route: plan.route || "N/A",
                   ~~~~

src/components/PendingSolutions.tsx:150:19 - error TS18046: 'plan' is of type 'unknown'.

150         aircraft: plan.aircraft || "N/A",
                      ~~~~

src/components/PendingSolutions.tsx:151:22 - error TS18046: 'plan' is of type 'unknown'.

151         submittedAt: plan.submitted_at || new Date().toISOString(),
                         ~~~~

src/components/PendingSolutions.tsx:152:22 - error TS18046: 'plan' is of type 'unknown'.

152         submittedBy: plan.submitted_by || "system",
                         ~~~~

src/components/PendingSolutions.tsx:154:11 - error TS18046: 'plan' is of type 'unknown'.

154           plan.operations_user || plan.submitted_by || "AERON System",
              ~~~~

src/components/PendingSolutions.tsx:154:35 - error TS18046: 'plan' is of type 'unknown'.

154           plan.operations_user || plan.submitted_by || "AERON System",
                                      ~~~~

src/components/PendingSolutions.tsx:155:19 - error TS18046: 'plan' is of type 'unknown'.

155         priority: plan.severity || "Medium",
                      ~~~~

src/components/PendingSolutions.tsx:156:17 - error TS18046: 'plan' is of type 'unknown'.

156         status: plan.status || "Pending Approval",
                    ~~~~

src/components/PendingSolutions.tsx:158:22 - error TS18046: 'plan' is of type 'unknown'.

158           if (typeof plan.estimated_cost === "string") {
                         ~~~~

src/components/PendingSolutions.tsx:160:15 - error TS18046: 'plan' is of type 'unknown'.

160               plan.estimated_cost.replace(/[^0-9]/g, ""),
                  ~~~~

src/components/PendingSolutions.tsx:164:22 - error TS18046: 'plan' is of type 'unknown'.

164           if (typeof plan.cost === "string") {
                         ~~~~

src/components/PendingSolutions.tsx:165:43 - error TS18046: 'plan' is of type 'unknown'.

165             const numericValue = parseInt(plan.cost.replace(/[^0-9]/g, ""));
                                              ~~~~

src/components/PendingSolutions.tsx:168:18 - error TS18046: 'plan' is of type 'unknown'.

168           return plan.estimated_cost || plan.cost || 0;
                     ~~~~

src/components/PendingSolutions.tsx:168:41 - error TS18046: 'plan' is of type 'unknown'.

168           return plan.estimated_cost || plan.cost || 0;
                                            ~~~~

src/components/PendingSolutions.tsx:171:11 - error TS18046: 'plan' is of type 'unknown'.

171           plan.delay_minutes ||
              ~~~~

src/components/PendingSolutions.tsx:172:20 - error TS18046: 'plan' is of type 'unknown'.

172           parseInt(plan.timeline?.replace(/[^0-9]/g, "") || "0") ||
                       ~~~~

src/components/PendingSolutions.tsx:174:29 - error TS18046: 'plan' is of type 'unknown'.

174         affectedPassengers: plan.passengers || plan.affected_passengers || 0,
                                ~~~~

src/components/PendingSolutions.tsx:174:48 - error TS18046: 'plan' is of type 'unknown'.

174         affectedPassengers: plan.passengers || plan.affected_passengers || 0,
                                                   ~~~~

src/components/PendingSolutions.tsx:175:21 - error TS18046: 'plan' is of type 'unknown'.

175         confidence: plan.confidence || 80,
                        ~~~~

src/components/PendingSolutions.tsx:176:27 - error TS18046: 'plan' is of type 'unknown'.

176         disruptionReason: plan.disruption_reason || "N/A",
                              ~~~~

src/components/PendingSolutions.tsx:177:19 - error TS18046: 'plan' is of type 'unknown'.

177         timeline: plan.timeline || "TBD",
                      ~~~~

src/components/PendingSolutions.tsx:178:27 - error TS18046: 'plan' is of type 'unknown'.

178         approvalRequired: plan.approval_required || "Operations Manager",
                              ~~~~

src/components/PendingSolutions.tsx:183:31 - error TS18046: 'plan' is of type 'unknown'.

183           successProbability: plan.confidence || 80,
                                  ~~~~

src/components/PendingSolutions.tsx:188:24 - error TS18046: 'plan' is of type 'unknown'.

188         flightDetails: plan.full_details || {},
                           ~~~~

src/components/PendingSolutions.tsx:190:11 - error TS18046: 'plan' is of type 'unknown'.

190           plan.cost_analysis?.breakdown ||
              ~~~~

src/components/PendingSolutions.tsx:191:11 - error TS18046: 'plan' is of type 'unknown'.

191           plan.full_details?.costBreakdown ||
              ~~~~

src/components/PendingSolutions.tsx:194:11 - error TS18046: 'plan' is of type 'unknown'.

194           plan.recovery_steps || plan.full_details?.recoverySteps || [],
              ~~~~

src/components/PendingSolutions.tsx:194:34 - error TS18046: 'plan' is of type 'unknown'.

194           plan.recovery_steps || plan.full_details?.recoverySteps || [],
                                     ~~~~

src/components/PendingSolutions.tsx:196:11 - error TS18046: 'plan' is of type 'unknown'.

196           plan.crew_information || plan.full_details?.assignedCrew || [],
              ~~~~

src/components/PendingSolutions.tsx:196:36 - error TS18046: 'plan' is of type 'unknown'.

196           plan.crew_information || plan.full_details?.assignedCrew || [],
                                       ~~~~

src/components/PendingSolutions.tsx:197:31 - error TS18046: 'plan' is of type 'unknown'.

197         passengerInformation: plan.passenger_information || [],
                                  ~~~~

src/components/PendingSolutions.tsx:198:25 - error TS18046: 'plan' is of type 'unknown'.

198         operationsUser: plan.operations_user || "Operations Manager",
                            ~~~~

src/components/PendingSolutions.tsx:199:23 - error TS18046: 'plan' is of type 'unknown'.

199         costAnalysis: plan.cost_analysis || {},
                          ~~~~

src/components/PendingSolutions.tsx:200:23 - error TS18046: 'plan' is of type 'unknown'.

200         disruptionId: plan.disruption_id,
                          ~~~~

src/components/PendingSolutions.tsx:201:19 - error TS18046: 'plan' is of type 'unknown'.

201         optionId: plan.option_id,
                      ~~~~

src/components/PendingSolutions.tsx:202:17 - error TS18046: 'plan' is of type 'unknown'.

202         impact: plan.impact || "Moderate", // Added for recovery options
                    ~~~~

src/components/PendingSolutions.tsx:205:16 - error TS2345: Argument of type '{ id: any; title: any; flightNumber: any; route: any; aircraft: any; submittedAt: any; submittedBy: any; submitterName: any; priority: any; status: any; estimatedCost: any; estimatedDelay: any; affectedPassengers: any; ... 17 more ...; impact: any; }[]' is not assignable to parameter of type 'SetStateAction<never[]>'.
  Type '{ id: any; title: any; flightNumber: any; route: any; aircraft: any; submittedAt: any; submittedBy: any; submitterName: any; priority: any; status: any; estimatedCost: any; estimatedDelay: any; affectedPassengers: any; ... 17 more ...; impact: any; }[]' is not assignable to type 'never[]'.
    Type '{ id: any; title: any; flightNumber: any; route: any; aircraft: any; submittedAt: any; submittedBy: any; submitterName: any; priority: any; status: any; estimatedCost: any; estimatedDelay: any; affectedPassengers: any; ... 17 more ...; impact: any; }' is not assignable to type 'never'.

205       setPlans(transformedPlans);
                   ~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:228:13 - error TS2339: Property 'priority' does not exist on type 'never'.

228       (plan.priority && plan.priority.toLowerCase() === filters.priority);
                ~~~~~~~~

src/components/PendingSolutions.tsx:228:30 - error TS2339: Property 'priority' does not exist on type 'never'.

228       (plan.priority && plan.priority.toLowerCase() === filters.priority);
                                 ~~~~~~~~

src/components/PendingSolutions.tsx:231:13 - error TS2339: Property 'submittedBy' does not exist on type 'never'.

231       (plan.submittedBy &&
                ~~~~~~~~~~~

src/components/PendingSolutions.tsx:232:14 - error TS2339: Property 'submittedBy' does not exist on type 'never'.

232         plan.submittedBy
                 ~~~~~~~~~~~

src/components/PendingSolutions.tsx:237:13 - error TS2339: Property 'flightNumber' does not exist on type 'never'.

237       (plan.flightNumber &&
                ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:238:14 - error TS2339: Property 'flightNumber' does not exist on type 'never'.

238         plan.flightNumber
                 ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:243:13 - error TS2339: Property 'id' does not exist on type 'never'.

243       (plan.id && plan.id.toLowerCase().includes(filters.planId.toLowerCase()));
                ~~

src/components/PendingSolutions.tsx:243:24 - error TS2339: Property 'id' does not exist on type 'never'.

243       (plan.id && plan.id.toLowerCase().includes(filters.planId.toLowerCase()));
                           ~~

src/components/PendingSolutions.tsx:246:35 - error TS2339: Property 'status' does not exist on type 'never'.

246     const normalizedStatus = plan.status
                                      ~~~~~~

src/components/PendingSolutions.tsx:247:14 - error TS2339: Property 'status' does not exist on type 'never'.

247       ? plan.status.trim().toLowerCase()
                 ~~~~~~

src/components/PendingSolutions.tsx:259:15 - error TS2339: Property 'priority' does not exist on type 'never'.

259         (plan.priority === "Critical" || plan.priority === "High"));
                  ~~~~~~~~

src/components/PendingSolutions.tsx:259:47 - error TS2339: Property 'priority' does not exist on type 'never'.

259         (plan.priority === "Critical" || plan.priority === "High"));
                                                  ~~~~~~~~

src/components/PendingSolutions.tsx:277:29 - error TS2339: Property 'submittedAt' does not exist on type 'never'.

277         aValue = new Date(a.submittedAt || 0);
                                ~~~~~~~~~~~

src/components/PendingSolutions.tsx:278:29 - error TS2339: Property 'submittedAt' does not exist on type 'never'.

278         bValue = new Date(b.submittedAt || 0);
                                ~~~~~~~~~~~

src/components/PendingSolutions.tsx:282:18 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ Critical: number; High: number; Medium: number; Low: number; }'.

282         aValue = priorityOrder[a.priority] || 0;
                     ~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:282:34 - error TS2339: Property 'priority' does not exist on type 'never'.

282         aValue = priorityOrder[a.priority] || 0;
                                     ~~~~~~~~

src/components/PendingSolutions.tsx:283:18 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ Critical: number; High: number; Medium: number; Low: number; }'.

283         bValue = priorityOrder[b.priority] || 0;
                     ~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:283:34 - error TS2339: Property 'priority' does not exist on type 'never'.

283         bValue = priorityOrder[b.priority] || 0;
                                     ~~~~~~~~

src/components/PendingSolutions.tsx:286:20 - error TS2339: Property 'estimatedCost' does not exist on type 'never'.

286         aValue = a.estimatedCost || 0;
                       ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:287:20 - error TS2339: Property 'estimatedCost' does not exist on type 'never'.

287         bValue = b.estimatedCost || 0;
                       ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:290:20 - error TS2339: Property 'confidence' does not exist on type 'never'.

290         aValue = a.confidence || 0;
                       ~~~~~~~~~~

src/components/PendingSolutions.tsx:291:20 - error TS2339: Property 'confidence' does not exist on type 'never'.

291         bValue = b.confidence || 0;
                       ~~~~~~~~~~

src/components/PendingSolutions.tsx:294:20 - error TS2339: Property 'submittedAt' does not exist on type 'never'.

294         aValue = a.submittedAt || 0;
                       ~~~~~~~~~~~

src/components/PendingSolutions.tsx:295:20 - error TS2339: Property 'submittedAt' does not exist on type 'never'.

295         bValue = b.submittedAt || 0;
                       ~~~~~~~~~~~

src/components/PendingSolutions.tsx:305:27 - error TS7006: Parameter 'status' implicitly has an 'any' type.

305   const getStatusColor = (status) => {
                              ~~~~~~

src/components/PendingSolutions.tsx:322:29 - error TS7006: Parameter 'priority' implicitly has an 'any' type.

322   const getPriorityColor = (priority) => {
                                ~~~~~~~~

src/components/PendingSolutions.tsx:337:34 - error TS7006: Parameter 'timeRemaining' implicitly has an 'any' type.

337   const getTimeRemainingColor = (timeRemaining) => {
                                     ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:343:9 - error TS6133: 'getCrewStatusColor' is declared but its value is never read.

343   const getCrewStatusColor = (status) => {
            ~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:343:31 - error TS7006: Parameter 'status' implicitly has an 'any' type.

343   const getCrewStatusColor = (status) => {
                                  ~~~~~~

src/components/PendingSolutions.tsx:361:26 - error TS2339: Property 'status' does not exist on type 'never'.

361         const status = p.status ? p.status.trim().toLowerCase() : "pending";
                             ~~~~~~

src/components/PendingSolutions.tsx:361:37 - error TS2339: Property 'status' does not exist on type 'never'.

361         const status = p.status ? p.status.trim().toLowerCase() : "pending";
                                        ~~~~~~

src/components/PendingSolutions.tsx:366:26 - error TS2339: Property 'status' does not exist on type 'never'.

366         const status = p.status ? p.status.trim().toLowerCase() : "";
                             ~~~~~~

src/components/PendingSolutions.tsx:366:37 - error TS2339: Property 'status' does not exist on type 'never'.

366         const status = p.status ? p.status.trim().toLowerCase() : "";
                                        ~~~~~~

src/components/PendingSolutions.tsx:371:26 - error TS2339: Property 'status' does not exist on type 'never'.

371         const status = p.status ? p.status.trim().toLowerCase() : "";
                             ~~~~~~

src/components/PendingSolutions.tsx:371:37 - error TS2339: Property 'status' does not exist on type 'never'.

371         const status = p.status ? p.status.trim().toLowerCase() : "";
                                        ~~~~~~

src/components/PendingSolutions.tsx:376:18 - error TS2339: Property 'priority' does not exist on type 'never'.

376         return p.priority && ["Critical", "High"].includes(p.priority);
                     ~~~~~~~~

src/components/PendingSolutions.tsx:376:62 - error TS2339: Property 'priority' does not exist on type 'never'.

376         return p.priority && ["Critical", "High"].includes(p.priority);
                                                                 ~~~~~~~~

src/components/PendingSolutions.tsx:383:32 - error TS7006: Parameter 'planId' implicitly has an 'any' type.

383   const handleApprove = async (planId) => {
                                   ~~~~~~

src/components/PendingSolutions.tsx:388:40 - error TS2339: Property 'id' does not exist on type 'never'.

388       const plan = plans.find((p) => p.id === planId);
                                           ~~

src/components/PendingSolutions.tsx:411:16 - error TS2339: Property 'disruptionId' does not exist on type 'never'.

411       if (plan.disruptionId) {
                   ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:413:16 - error TS2339: Property 'disruptionId' does not exist on type 'never'.

413           plan.disruptionId,
                   ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:419:16 - error TS2345: Argument of type '(prevPlans: never[]) => any[]' is not assignable to parameter of type 'SetStateAction<never[]>'.
  Type '(prevPlans: never[]) => any[]' is not assignable to type '(prevState: never[]) => never[]'.
    Type 'any[]' is not assignable to type 'never[]'.
      Type 'any' is not assignable to type 'never'.

419       setPlans((prevPlans) =>
                   ~~~~~~~~~~~~~~
420         prevPlans.map((p) =>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
421           p.id === planId ? { ...p, status: "Approved" } : p,
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
422         ),
    ~~~~~~~~~

src/components/PendingSolutions.tsx:421:13 - error TS2339: Property 'id' does not exist on type 'never'.

421           p.id === planId ? { ...p, status: "Approved" } : p,
                ~~

src/components/PendingSolutions.tsx:421:31 - error TS2698: Spread types may only be created from object types.

421           p.id === planId ? { ...p, status: "Approved" } : p,
                                  ~~~~

src/components/PendingSolutions.tsx:433:31 - error TS7006: Parameter 'planId' implicitly has an 'any' type.

433   const handleReject = async (planId) => {
                                  ~~~~~~

src/components/PendingSolutions.tsx:438:40 - error TS2339: Property 'id' does not exist on type 'never'.

438       const plan = plans.find((p) => p.id === planId);
                                           ~~

src/components/PendingSolutions.tsx:461:16 - error TS2339: Property 'disruptionId' does not exist on type 'never'.

461       if (plan.disruptionId) {
                   ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:463:16 - error TS2339: Property 'disruptionId' does not exist on type 'never'.

463           plan.disruptionId,
                   ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:469:16 - error TS2345: Argument of type '(prevPlans: never[]) => any[]' is not assignable to parameter of type 'SetStateAction<never[]>'.
  Type '(prevPlans: never[]) => any[]' is not assignable to type '(prevState: never[]) => never[]'.
    Type 'any[]' is not assignable to type 'never[]'.
      Type 'any' is not assignable to type 'never'.

469       setPlans((prevPlans) =>
                   ~~~~~~~~~~~~~~
470         prevPlans.map((p) =>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
471           p.id === planId ? { ...p, status: "Rejected" } : p,
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
472         ),
    ~~~~~~~~~

src/components/PendingSolutions.tsx:471:13 - error TS2339: Property 'id' does not exist on type 'never'.

471           p.id === planId ? { ...p, status: "Rejected" } : p,
                ~~

src/components/PendingSolutions.tsx:471:31 - error TS2698: Spread types may only be created from object types.

471           p.id === planId ? { ...p, status: "Rejected" } : p,
                                  ~~~~

src/components/PendingSolutions.tsx:483:9 - error TS6133: 'handleExecute' is declared but its value is never read.

483   const handleExecute = async (plan) => {
            ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:483:32 - error TS7006: Parameter 'plan' implicitly has an 'any' type.

483   const handleExecute = async (plan) => {
                                   ~~~~

src/components/PendingSolutions.tsx:495:9 - error TS2345: Argument of type 'any[]' is not assignable to parameter of type 'SetStateAction<never[]>'.
  Type 'any[]' is not assignable to type 'never[]'.
    Type 'any' is not assignable to type 'never'.

495         plans.map((p) => (p.id === plan.id ? { ...p, status: "Pending" } : p)),
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:495:29 - error TS2339: Property 'id' does not exist on type 'never'.

495         plans.map((p) => (p.id === plan.id ? { ...p, status: "Pending" } : p)),
                                ~~

src/components/PendingSolutions.tsx:495:48 - error TS2698: Spread types may only be created from object types.

495         plans.map((p) => (p.id === plan.id ? { ...p, status: "Pending" } : p)),
                                                   ~~~~

src/components/PendingSolutions.tsx:503:36 - error TS7006: Parameter 'plan' implicitly has an 'any' type.

503   const handleViewDetails = async (plan) => {
                                       ~~~~

src/components/PendingSolutions.tsx:581:14 - error TS7006: Parameter 'opt' implicitly has an 'any' type.

581             (opt) =>
                 ~~~

src/components/PendingSolutions.tsx:735:52 - error TS7006: Parameter 'opt' implicitly has an 'any' type.

735           transformedPlan.recoveryOptions.forEach((opt, idx) => {
                                                       ~~~

src/components/PendingSolutions.tsx:735:57 - error TS7006: Parameter 'idx' implicitly has an 'any' type.

735           transformedPlan.recoveryOptions.forEach((opt, idx) => {
                                                            ~~~

src/components/PendingSolutions.tsx:762:36 - error TS7006: Parameter 'option' implicitly has an 'any' type.

762   const handleViewOptionDetails = (option, plan) => {
                                       ~~~~~~

src/components/PendingSolutions.tsx:762:44 - error TS7006: Parameter 'plan' implicitly has an 'any' type.

762   const handleViewOptionDetails = (option, plan) => {
                                               ~~~~

src/components/PendingSolutions.tsx:810:22 - error TS7006: Parameter 'dateString' implicitly has an 'any' type.

810   const formatIST = (dateString) => {
                         ~~~~~~~~~~

src/components/PendingSolutions.tsx:824:9 - error TS6133: 'DetailedRecoveryOptionView' is declared but its value is never read.

824   const DetailedRecoveryOptionView = ({ plan }) => {
            ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:824:41 - error TS7031: Binding element 'plan' implicitly has an 'any' type.

824   const DetailedRecoveryOptionView = ({ plan }) => {
                                            ~~~~

src/components/PendingSolutions.tsx:877:18 - error TS7006: Parameter 'opt' implicitly has an 'any' type.

877                 (opt) =>
                     ~~~

src/components/PendingSolutions.tsx:902:28 - error TS2339: Property 'full_details' does not exist on type 'never'.

902       pendingSolutionData?.full_details?.crew_hotel_assignments ||
                               ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:903:28 - error TS2339: Property 'crew_hotel_assignments' does not exist on type 'never'.

903       pendingSolutionData?.crew_hotel_assignments ||
                               ~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:904:27 - error TS2339: Property 'crew_hotel_assignments' does not exist on type 'never'.

904       recoveryOptionData?.crew_hotel_assignments ||
                              ~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:909:28 - error TS2339: Property 'full_details' does not exist on type 'never'.

909       pendingSolutionData?.full_details?.passenger_rebooking ||
                               ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:910:28 - error TS2339: Property 'passenger_rebooking' does not exist on type 'never'.

910       pendingSolutionData?.passenger_rebooking ||
                               ~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:911:27 - error TS2339: Property 'passenger_rebooking' does not exist on type 'never'.

911       recoveryOptionData?.passenger_rebooking ||
                              ~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:912:27 - error TS2339: Property 'passenger_information' does not exist on type 'never'.

912       recoveryOptionData?.passenger_information ||
                              ~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:913:27 - error TS2339: Property 'passenger_reaccommodation' does not exist on type 'never'.

913       recoveryOptionData?.passenger_reaccommodation ||
                              ~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:918:11 - error TS6133: 'hasCrewData' is declared but its value is never read.

918     const hasCrewData =
              ~~~~~~~~~~~

src/components/PendingSolutions.tsx:970:45 - error TS2339: Property 'option_title' does not exist on type 'never'.

970                       {pendingSolutionData?.option_title ||
                                                ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:971:45 - error TS2339: Property 'title' does not exist on type 'never'.

971                         recoveryOptionData?.title ||
                                                ~~~~~

src/components/PendingSolutions.tsx:980:45 - error TS2339: Property 'cost' does not exist on type 'never'.

980                       {pendingSolutionData?.cost ||
                                                ~~~~

src/components/PendingSolutions.tsx:981:45 - error TS2339: Property 'cost' does not exist on type 'never'.

981                         recoveryOptionData?.cost ||
                                                ~~~~

src/components/PendingSolutions.tsx:990:45 - error TS2339: Property 'timeline' does not exist on type 'never'.

990                       {pendingSolutionData?.timeline ||
                                                ~~~~~~~~

src/components/PendingSolutions.tsx:991:45 - error TS2339: Property 'timeline' does not exist on type 'never'.

991                         recoveryOptionData?.timeline ||
                                                ~~~~~~~~

src/components/PendingSolutions.tsx:1002:48 - error TS2339: Property 'confidence' does not exist on type 'never'.

1002                           pendingSolutionData?.confidence ||
                                                    ~~~~~~~~~~

src/components/PendingSolutions.tsx:1003:47 - error TS2339: Property 'confidence' does not exist on type 'never'.

1003                           recoveryOptionData?.confidence ||
                                                   ~~~~~~~~~~

src/components/PendingSolutions.tsx:1010:47 - error TS2339: Property 'confidence' does not exist on type 'never'.

1010                         {pendingSolutionData?.confidence ||
                                                   ~~~~~~~~~~

src/components/PendingSolutions.tsx:1011:47 - error TS2339: Property 'confidence' does not exist on type 'never'.

1011                           recoveryOptionData?.confidence ||
                                                   ~~~~~~~~~~

src/components/PendingSolutions.tsx:1026:45 - error TS2339: Property 'option_description' does not exist on type 'never'.

1026                       {pendingSolutionData?.option_description ||
                                                 ~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1027:45 - error TS2339: Property 'description' does not exist on type 'never'.

1027                         recoveryOptionData?.description ||
                                                 ~~~~~~~~~~~

src/components/PendingSolutions.tsx:1035:42 - error TS2339: Property 'advantages' does not exist on type 'never'.

1035                     {recoveryOptionData?.advantages &&
                                              ~~~~~~~~~~

src/components/PendingSolutions.tsx:1036:54 - error TS2339: Property 'advantages' does not exist on type 'never'.

1036                     Array.isArray(recoveryOptionData.advantages) ? (
                                                          ~~~~~~~~~~

src/components/PendingSolutions.tsx:1038:45 - error TS2339: Property 'advantages' does not exist on type 'never'.

1038                         {recoveryOptionData.advantages.map(
                                                 ~~~~~~~~~~

src/components/PendingSolutions.tsx:1039:28 - error TS7006: Parameter 'advantage' implicitly has an 'any' type.

1039                           (advantage, index) => (
                                ~~~~~~~~~

src/components/PendingSolutions.tsx:1039:39 - error TS7006: Parameter 'index' implicitly has an 'any' type.

1039                           (advantage, index) => (
                                           ~~~~~

src/components/PendingSolutions.tsx:1054:40 - error TS2339: Property 'considerations' does not exist on type 'never'.

1054                   {recoveryOptionData?.considerations &&
                                            ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1055:54 - error TS2339: Property 'considerations' does not exist on type 'never'.

1055                     Array.isArray(recoveryOptionData.considerations) && (
                                                          ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1061:47 - error TS2339: Property 'considerations' does not exist on type 'never'.

1061                           {recoveryOptionData.considerations.map(
                                                   ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1062:30 - error TS7006: Parameter 'consideration' implicitly has an 'any' type.

1062                             (consideration, index) => (
                                  ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1062:45 - error TS7006: Parameter 'index' implicitly has an 'any' type.

1062                             (consideration, index) => (
                                                 ~~~~~

src/components/PendingSolutions.tsx:1090:43 - error TS2339: Property 'timeline_details' does not exist on type 'never'.

1090                       recoveryOptionData?.timeline_details?.timelineSteps ||
                                               ~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1091:44 - error TS2339: Property 'timeline_details' does not exist on type 'never'.

1091                       pendingSolutionData?.timeline_details ||
                                                ~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1136:39 - error TS7006: Parameter 'step' implicitly has an 'any' type.

1136                     return steps.map((step, index) => (
                                           ~~~~

src/components/PendingSolutions.tsx:1136:45 - error TS7006: Parameter 'index' implicitly has an 'any' type.

1136                     return steps.map((step, index) => (
                                                 ~~~~~

src/components/PendingSolutions.tsx:1209:50 - error TS2339: Property 'full_details' does not exist on type 'never'.

1209                             pendingSolutionData?.full_details?.passenger_impact
                                                      ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1220:49 - error TS2339: Property 'full_details' does not exist on type 'never'.

1220                           {pendingSolutionData?.full_details?.passenger_impact
                                                     ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1253:49 - error TS2339: Property 'full_details' does not exist on type 'never'.

1253                           {pendingSolutionData?.full_details?.passenger_impact
                                                     ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1283:55 - error TS2339: Property 'pending_recovery_solutions' does not exist on type 'never'.

1283                             selectedOptionForDetails?.pending_recovery_solutions
                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1285:55 - error TS2339: Property 'pending_recovery_solutions' does not exist on type 'never'.

1285                             selectedOptionForDetails?.pending_recovery_solutions
                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1290:30 - error TS7006: Parameter 'acc' implicitly has an 'any' type.

1290                             (acc, passenger) => {
                                  ~~~

src/components/PendingSolutions.tsx:1290:35 - error TS7006: Parameter 'passenger' implicitly has an 'any' type.

1290                             (acc, passenger) => {
                                       ~~~~~~~~~

src/components/PendingSolutions.tsx:1319:42 - error TS18046: 'passengers' is of type 'unknown'.

1319                                         {passengers.length} passenger
                                              ~~~~~~~~~~

src/components/PendingSolutions.tsx:1320:42 - error TS18046: 'passengers' is of type 'unknown'.

1320                                         {passengers.length > 1 ? "s" : ""}
                                              ~~~~~~~~~~

src/components/PendingSolutions.tsx:1329:36 - error TS18046: 'passengers' is of type 'unknown'.

1329                                   {passengers.map(
                                        ~~~~~~~~~~

src/components/PendingSolutions.tsx:1330:38 - error TS7006: Parameter 'passenger' implicitly has an 'any' type.

1330                                     (passenger, passengerIndex) => (
                                          ~~~~~~~~~

src/components/PendingSolutions.tsx:1330:49 - error TS7006: Parameter 'passengerIndex' implicitly has an 'any' type.

1330                                     (passenger, passengerIndex) => (
                                                     ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1404:54 - error TS7006: Parameter 'service' implicitly has an 'any' type.

1404                                                     (service, serviceIndex) => (
                                                          ~~~~~~~

src/components/PendingSolutions.tsx:1404:63 - error TS7006: Parameter 'serviceIndex' implicitly has an 'any' type.

1404                                                     (service, serviceIndex) => (
                                                                   ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1433:55 - error TS2339: Property 'pending_recovery_solutions' does not exist on type 'never'.

1433                             selectedOptionForDetails?.pending_recovery_solutions
                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1435:55 - error TS2339: Property 'pending_recovery_solutions' does not exist on type 'never'.

1435                             selectedOptionForDetails?.pending_recovery_solutions
                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1575:54 - error TS2339: Property 'matchingOption' does not exist on type 'never'.

1575                           {selectedOptionForDetails?.matchingOption?.resource_requirements
                                                          ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1578:56 - error TS2339: Property 'matchingOption' does not exist on type 'never'.

1578                               selectedOptionForDetails.matchingOption.resource_requirements.aircraft,
                                                            ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1584:39 - error TS2322: Type 'unknown' is not assignable to type 'ReactNode'.

1584                                 <span>{value}</span>
                                           ~~~~~~~

  node_modules/@types/react/index.d.ts:2398:9
    2398         children?: ReactNode | undefined;
                 ~~~~~~~~
    The expected type comes from property 'children' which is declared here on type 'DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>'

src/components/PendingSolutions.tsx:1620:54 - error TS2339: Property 'matchingOption' does not exist on type 'never'.

1620                           {selectedOptionForDetails?.matchingOption?.resource_requirements
                                                          ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1623:56 - error TS2339: Property 'matchingOption' does not exist on type 'never'.

1623                               selectedOptionForDetails.matchingOption.resource_requirements.ground,
                                                            ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1629:39 - error TS2322: Type 'unknown' is not assignable to type 'ReactNode'.

1629                                 <span>{value}</span>
                                           ~~~~~~~

  node_modules/@types/react/index.d.ts:2398:9
    2398         children?: ReactNode | undefined;
                 ~~~~~~~~
    The expected type comes from property 'children' which is declared here on type 'DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>'

src/components/PendingSolutions.tsx:1666:50 - error TS2339: Property 'matchingOption' does not exist on type 'never'.

1666                       {selectedOptionForDetails?.matchingOption?.resource_requirements?.personnel
                                                      ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1667:52 - error TS2339: Property 'matchingOption' does not exist on type 'never'.

1667                         ? selectedOptionForDetails.matchingOption.resource_requirements.personnel.map(
                                                        ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1668:30 - error TS7006: Parameter 'resource' implicitly has an 'any' type.

1668                             (resource, index) => (
                                  ~~~~~~~~

src/components/PendingSolutions.tsx:1668:40 - error TS7006: Parameter 'index' implicitly has an 'any' type.

1668                             (resource, index) => (
                                            ~~~~~

src/components/PendingSolutions.tsx:1764:55 - error TS2339: Property 'matchingOption' does not exist on type 'never'.

1764                             selectedOptionForDetails?.matchingOption?.cost_breakdown ||
                                                           ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1765:55 - error TS2339: Property 'pending_recovery_solutions' does not exist on type 'never'.

1765                             selectedOptionForDetails?.pending_recovery_solutions?.cost_analysis?.breakdown ||
                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1766:29 - error TS18047: 'selectedPlan' is possibly 'null'.

1766                             selectedPlan.costBreakdown;
                                 ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1769:55 - error TS2339: Property 'matchingOption' does not exist on type 'never'.

1769                             selectedOptionForDetails?.matchingOption?.cost_breakdown?.total ||
                                                           ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1770:55 - error TS2339: Property 'pending_recovery_solutions' does not exist on type 'never'.

1770                             selectedOptionForDetails?.pending_recovery_solutions?.cost_analysis?.total;
                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1786:51 - error TS18047: 'selectedPlan' is possibly 'null'.

1786                                           `AED ${(selectedPlan.estimatedCost || 0).toLocaleString()}`}
                                                       ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:1853:62 - error TS2339: Property 'amount' does not exist on type 'object'.

1853                                                 typeof value.amount === "number"
                                                                  ~~~~~~

src/components/PendingSolutions.tsx:1854:66 - error TS2339: Property 'amount' does not exist on type 'object'.

1854                                                   ? `AED ${value.amount.toLocaleString()}`
                                                                      ~~~~~~

src/components/PendingSolutions.tsx:1874:31 - error TS18047: 'selectedPlan' is possibly 'null'.

1874                               selectedPlan.estimatedCost || 50000;
                                   ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2181:29 - error TS2339: Property 'id' does not exist on type 'never'.

2181                   key={plan.id}
                                 ~~

src/components/PendingSolutions.tsx:2189:35 - error TS2339: Property 'title' does not exist on type 'never'.

2189                             {plan.title}
                                       ~~~~~

src/components/PendingSolutions.tsx:2191:65 - error TS2339: Property 'status' does not exist on type 'never'.

2191                           <Badge className={getStatusColor(plan.status)}>
                                                                     ~~~~~~

src/components/PendingSolutions.tsx:2192:35 - error TS2339: Property 'status' does not exist on type 'never'.

2192                             {plan.status}
                                       ~~~~~~

src/components/PendingSolutions.tsx:2194:67 - error TS2339: Property 'priority' does not exist on type 'never'.

2194                           <Badge className={getPriorityColor(plan.priority)}>
                                                                       ~~~~~~~~

src/components/PendingSolutions.tsx:2195:35 - error TS2339: Property 'priority' does not exist on type 'never'.

2195                             {plan.priority} Priority
                                       ~~~~~~~~

src/components/PendingSolutions.tsx:2197:33 - error TS2339: Property 'timeRemaining' does not exist on type 'never'.

2197                           {plan.timeRemaining === "OVERDUE" && (
                                     ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2211:37 - error TS2339: Property 'flightNumber' does not exist on type 'never'.

2211                               {plan.flightNumber} • {plan.route}
                                         ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2211:59 - error TS2339: Property 'route' does not exist on type 'never'.

2211                               {plan.flightNumber} • {plan.route}
                                                               ~~~~~

src/components/PendingSolutions.tsx:2214:37 - error TS2339: Property 'aircraft' does not exist on type 'never'.

2214                               {plan.aircraft}
                                         ~~~~~~~~

src/components/PendingSolutions.tsx:2222:47 - error TS2339: Property 'submittedAt' does not exist on type 'never'.

2222                               {formatIST(plan.submittedAt)}
                                                   ~~~~~~~~~~~

src/components/PendingSolutions.tsx:2225:40 - error TS2339: Property 'submitterName' does not exist on type 'never'.

2225                               by {plan.submitterName}
                                            ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2233:42 - error TS2339: Property 'estimatedCost' does not exist on type 'never'.

2233                               AED {(plan.estimatedCost / 1000).toFixed(0)}K •{" "}
                                              ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2234:37 - error TS2339: Property 'estimatedDelay' does not exist on type 'never'.

2234                               {plan.estimatedDelay}m delay
                                         ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2237:37 - error TS2339: Property 'affectedPassengers' does not exist on type 'never'.

2237                               {plan.affectedPassengers} passengers
                                         ~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2245:37 - error TS2339: Property 'confidence' does not exist on type 'never'.

2245                               {plan.confidence}% • {plan.timeline}
                                         ~~~~~~~~~~

src/components/PendingSolutions.tsx:2245:58 - error TS2339: Property 'timeline' does not exist on type 'never'.

2245                               {plan.confidence}% • {plan.timeline}
                                                              ~~~~~~~~

src/components/PendingSolutions.tsx:2248:80 - error TS2339: Property 'timeRemaining' does not exist on type 'never'.

2248                               className={`text-sm ${getTimeRemainingColor(plan.timeRemaining)}`}
                                                                                    ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2257:37 - error TS2339: Property 'recoverySteps' does not exist on type 'never'.

2257                               {plan.recoverySteps.length} steps
                                         ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2263:46 - error TS2339: Property 'approvalRequired' does not exist on type 'never'.

2263                               Requires {plan.approvalRequired}
                                                  ~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2269:37 - error TS2339: Property 'disruptionReason' does not exist on type 'never'.

2269                               {plan.disruptionReason}
                                         ~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2275:33 - error TS2339: Property 'tags' does not exist on type 'never'.

2275                           {plan.tags.map((tag, index) => (
                                     ~~~~

src/components/PendingSolutions.tsx:2275:43 - error TS7006: Parameter 'tag' implicitly has an 'any' type.

2275                           {plan.tags.map((tag, index) => (
                                               ~~~

src/components/PendingSolutions.tsx:2275:48 - error TS7006: Parameter 'index' implicitly has an 'any' type.

2275                           {plan.tags.map((tag, index) => (
                                                    ~~~~~

src/components/PendingSolutions.tsx:2286:31 - error TS2339: Property 'rejectionReason' does not exist on type 'never'.

2286                         {plan.rejectionReason && (
                                   ~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2291:37 - error TS2339: Property 'rejectionReason' does not exist on type 'never'.

2291                               {plan.rejectionReason}
                                         ~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2302:61 - error TS2339: Property 'id' does not exist on type 'never'.

2302                           disabled={loadingDetails === plan.id}
                                                                 ~~

src/components/PendingSolutions.tsx:2305:52 - error TS2339: Property 'id' does not exist on type 'never'.

2305                           {loadingDetails === plan.id ? (
                                                        ~~

src/components/PendingSolutions.tsx:2310:52 - error TS2339: Property 'id' does not exist on type 'never'.

2310                           {loadingDetails === plan.id
                                                        ~~

src/components/PendingSolutions.tsx:2320:41 - error TS2339: Property 'status' does not exist on type 'never'.

2320                         ].includes(plan.status) && (
                                             ~~~~~~

src/components/PendingSolutions.tsx:2324:65 - error TS2339: Property 'id' does not exist on type 'never'.

2324                               onClick={() => handleApprove(plan.id)}
                                                                     ~~

src/components/PendingSolutions.tsx:2333:64 - error TS2339: Property 'id' does not exist on type 'never'.

2333                               onClick={() => handleReject(plan.id)}
                                                                    ~~

src/components/PendingSolutions.tsx:2374:31 - error TS2339: Property 'flightNumber' does not exist on type 'never'.

2374                 {selectedPlan.flightNumber} • {selectedPlan.route}
                                   ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2374:61 - error TS2339: Property 'route' does not exist on type 'never'.

2374                 {selectedPlan.flightNumber} • {selectedPlan.route}
                                                                 ~~~~~

src/components/PendingSolutions.tsx:2381:33 - error TS2339: Property 'hasCrewData' does not exist on type 'never'.

2381                   selectedPlan?.hasCrewData && selectedPlan?.hasPassengerData
                                     ~~~~~~~~~~~

src/components/PendingSolutions.tsx:2381:62 - error TS2339: Property 'hasPassengerData' does not exist on type 'never'.

2381                   selectedPlan?.hasCrewData && selectedPlan?.hasPassengerData
                                                                  ~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2383:37 - error TS2339: Property 'hasCrewData' does not exist on type 'never'.

2383                     : selectedPlan?.hasCrewData ||
                                         ~~~~~~~~~~~

src/components/PendingSolutions.tsx:2384:39 - error TS2339: Property 'hasPassengerData' does not exist on type 'never'.

2384                         selectedPlan?.hasPassengerData
                                           ~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2394:32 - error TS2339: Property 'hasCrewData' does not exist on type 'never'.

2394                 {selectedPlan?.hasCrewData && (
                                    ~~~~~~~~~~~

src/components/PendingSolutions.tsx:2397:32 - error TS2339: Property 'hasPassengerData' does not exist on type 'never'.

2397                 {selectedPlan?.hasPassengerData && (
                                    ~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2412:68 - error TS2339: Property 'flightNumber' does not exist on type 'never'.

2412                       Available recovery options for {selectedPlan.flightNumber}{" "}
                                                                        ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2413:39 - error TS2339: Property 'route' does not exist on type 'never'.

2413                       • {selectedPlan.route}
                                           ~~~~~

src/components/PendingSolutions.tsx:2417:35 - error TS2339: Property 'matchingOption' does not exist on type 'never'.

2417                     {selectedPlan.matchingOption && (
                                       ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2424:43 - error TS2339: Property 'matchingOption' does not exist on type 'never'.

2424                             {selectedPlan.matchingOption.title}
                                               ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2428:41 - error TS2339: Property 'matchingOption' does not exist on type 'never'.

2428                           {selectedPlan.matchingOption.description ||
                                             ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2436:39 - error TS2339: Property 'recoveryOptions' does not exist on type 'never'.

2436                         {selectedPlan.recoveryOptions &&
                                           ~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2437:38 - error TS2339: Property 'recoveryOptions' does not exist on type 'never'.

2437                         selectedPlan.recoveryOptions.length > 0 ? (
                                          ~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2438:40 - error TS2339: Property 'recoveryOptions' does not exist on type 'never'.

2438                           selectedPlan.recoveryOptions.map((option, index) => {
                                            ~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2438:61 - error TS7006: Parameter 'option' implicitly has an 'any' type.

2438                           selectedPlan.recoveryOptions.map((option, index) => {
                                                                 ~~~~~~

src/components/PendingSolutions.tsx:2438:69 - error TS7006: Parameter 'index' implicitly has an 'any' type.

2438                           selectedPlan.recoveryOptions.map((option, index) => {
                                                                         ~~~~~

src/components/PendingSolutions.tsx:2441:44 - error TS2339: Property 'optionId' does not exist on type 'never'.

2441                               selectedPlan.optionId &&
                                                ~~~~~~~~

src/components/PendingSolutions.tsx:2442:59 - error TS2339: Property 'optionId' does not exist on type 'never'.

2442                               (option.id === selectedPlan.optionId ||
                                                               ~~~~~~~~

src/components/PendingSolutions.tsx:2443:67 - error TS2339: Property 'optionId' does not exist on type 'never'.

2443                                 option.option_id === selectedPlan.optionId ||
                                                                       ~~~~~~~~

src/components/PendingSolutions.tsx:2445:55 - error TS2339: Property 'optionId' does not exist on type 'never'.

2445                                   String(selectedPlan.optionId) ||
                                                           ~~~~~~~~

src/components/PendingSolutions.tsx:2447:55 - error TS2339: Property 'optionId' does not exist on type 'never'.

2447                                   String(selectedPlan.optionId));
                                                           ~~~~~~~~

src/components/PendingSolutions.tsx:2604:43 - error TS2339: Property 'flightNumber' does not exist on type 'never'.

2604                             {selectedPlan.flightNumber || "N/A"}
                                               ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2610:43 - error TS2339: Property 'route' does not exist on type 'never'.

2610                             {selectedPlan.route || "N/A"}
                                               ~~~~~

src/components/PendingSolutions.tsx:2616:43 - error TS2339: Property 'aircraft' does not exist on type 'never'.

2616                             {selectedPlan.aircraft || "N/A"}
                                               ~~~~~~~~

src/components/PendingSolutions.tsx:2624:43 - error TS2339: Property 'flightDetails' does not exist on type 'never'.

2624                             {selectedPlan.flightDetails?.scheduled_departure
                                               ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2626:48 - error TS2339: Property 'flightDetails' does not exist on type 'never'.

2626                                   selectedPlan.flightDetails
                                                    ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2637:43 - error TS2339: Property 'flightDetails' does not exist on type 'never'.

2637                             {selectedPlan.flightDetails?.estimated_departure
                                               ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2639:48 - error TS2339: Property 'flightDetails' does not exist on type 'never'.

2639                                   selectedPlan.flightDetails
                                                    ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2648:43 - error TS2339: Property 'flightDetails' does not exist on type 'never'.

2648                             {selectedPlan.flightDetails?.gate || "TBD"}
                                               ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2654:43 - error TS2339: Property 'flightDetails' does not exist on type 'never'.

2654                             {selectedPlan.flightDetails?.terminal || "TBD"}
                                               ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2660:43 - error TS2339: Property 'estimatedDelay' does not exist on type 'never'.

2660                             {selectedPlan.estimatedDelay || 0} minutes
                                               ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2676:43 - error TS2339: Property 'disruptionReason' does not exist on type 'never'.

2676                             {selectedPlan.disruptionReason || "Technical Issue"}
                                               ~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2684:46 - error TS2339: Property 'priority' does not exist on type 'never'.

2684                                 selectedPlan.priority || "Medium",
                                                  ~~~~~~~~

src/components/PendingSolutions.tsx:2687:45 - error TS2339: Property 'priority' does not exist on type 'never'.

2687                               {selectedPlan.priority || "Medium"}
                                                 ~~~~~~~~

src/components/PendingSolutions.tsx:2696:43 - error TS2339: Property 'affectedPassengers' does not exist on type 'never'.

2696                             {selectedPlan.affectedPassengers || "N/A"}
                                               ~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2702:43 - error TS2339: Property 'flightDetails' does not exist on type 'never'.

2702                             {selectedPlan.flightDetails?.crew ||
                                               ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2703:44 - error TS2339: Property 'assignedCrew' does not exist on type 'never'.

2703                               selectedPlan.assignedCrew?.length ||
                                                ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2710:43 - error TS2339: Property 'submitterName' does not exist on type 'never'.

2710                             {selectedPlan.submitterName ||
                                               ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2711:44 - error TS2339: Property 'operationsUser' does not exist on type 'never'.

2711                               selectedPlan.operationsUser ||
                                                ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2718:53 - error TS2339: Property 'submittedAt' does not exist on type 'never'.

2718                             {formatIST(selectedPlan.submittedAt)}
                                                         ~~~~~~~~~~~

src/components/PendingSolutions.tsx:2725:70 - error TS2339: Property 'status' does not exist on type 'never'.

2725                               className={getStatusColor(selectedPlan.status)}
                                                                          ~~~~~~

src/components/PendingSolutions.tsx:2727:45 - error TS2339: Property 'status' does not exist on type 'never'.

2727                               {selectedPlan.status}
                                                 ~~~~~~

src/components/PendingSolutions.tsx:2734:43 - error TS2339: Property 'id' does not exist on type 'never'.

2734                             {selectedPlan.id}
                                               ~~

src/components/PendingSolutions.tsx:2777:41 - error TS2339: Property 'recoveryOptions' does not exist on type 'never'.

2777                           {selectedPlan.recoveryOptions &&
                                             ~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2778:40 - error TS2339: Property 'recoveryOptions' does not exist on type 'never'.

2778                           selectedPlan.recoveryOptions.length > 0 ? (
                                            ~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2779:42 - error TS2339: Property 'recoveryOptions' does not exist on type 'never'.

2779                             selectedPlan.recoveryOptions.map(
                                              ~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2780:32 - error TS7006: Parameter 'option' implicitly has an 'any' type.

2780                               (option, index) => {
                                    ~~~~~~

src/components/PendingSolutions.tsx:2780:40 - error TS7006: Parameter 'index' implicitly has an 'any' type.

2780                               (option, index) => {
                                            ~~~~~

src/components/PendingSolutions.tsx:2782:48 - error TS2339: Property 'optionId' does not exist on type 'never'.

2782                                   selectedPlan.optionId &&
                                                    ~~~~~~~~

src/components/PendingSolutions.tsx:2783:63 - error TS2339: Property 'optionId' does not exist on type 'never'.

2783                                   (option.id === selectedPlan.optionId ||
                                                                   ~~~~~~~~

src/components/PendingSolutions.tsx:2785:52 - error TS2339: Property 'optionId' does not exist on type 'never'.

2785                                       selectedPlan.optionId ||
                                                        ~~~~~~~~

src/components/PendingSolutions.tsx:2787:59 - error TS2339: Property 'optionId' does not exist on type 'never'.

2787                                       String(selectedPlan.optionId) ||
                                                               ~~~~~~~~

src/components/PendingSolutions.tsx:2789:59 - error TS2339: Property 'optionId' does not exist on type 'never'.

2789                                       String(selectedPlan.optionId));
                                                               ~~~~~~~~

src/components/PendingSolutions.tsx:2852:32 - error TS2339: Property 'hasPassengerData' does not exist on type 'never'.

2852                 {selectedPlan?.hasPassengerData && (
                                    ~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2870:37 - error TS2339: Property 'pending_recovery_solutions' does not exist on type 'never'.

2870                                   ?.pending_recovery_solutions?.full_details
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2882:37 - error TS2339: Property 'pending_recovery_solutions' does not exist on type 'never'.

2882                                   ?.pending_recovery_solutions?.full_details
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2926:41 - error TS2339: Property 'pending_recovery_solutions' does not exist on type 'never'.

2926                                       ?.pending_recovery_solutions?.full_details
                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2934:37 - error TS18047: 'selectedOptionForDetails' is possibly 'null'.

2934                                     selectedOptionForDetails
                                         ~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2972:42 - error TS2339: Property 'costAnalysis' does not exist on type 'never'.

2972                             selectedPlan.costAnalysis?.breakdown ||
                                              ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2973:42 - error TS2339: Property 'costBreakdown' does not exist on type 'never'.

2973                             selectedPlan.costBreakdown?.breakdown ||
                                              ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2974:42 - error TS2339: Property 'matchingOption' does not exist on type 'never'.

2974                             selectedPlan.matchingOption?.cost_breakdown
                                              ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2976:42 - error TS2339: Property 'fullDetails' does not exist on type 'never'.

2976                             selectedPlan.fullDetails?.cost_breakdown?.breakdown;
                                              ~~~~~~~~~~~

src/components/PendingSolutions.tsx:2979:42 - error TS2339: Property 'costAnalysis' does not exist on type 'never'.

2979                             selectedPlan.costAnalysis?.total ||
                                              ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2980:42 - error TS2339: Property 'costBreakdown' does not exist on type 'never'.

2980                             selectedPlan.costBreakdown?.total ||
                                              ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2981:42 - error TS2339: Property 'matchingOption' does not exist on type 'never'.

2981                             selectedPlan.matchingOption?.cost_breakdown?.total;
                                              ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:2999:64 - error TS2339: Property 'estimatedCost' does not exist on type 'never'.

2999                                           `AED ${(selectedPlan.estimatedCost || 0).toLocaleString()}`}
                                                                    ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3067:62 - error TS2339: Property 'amount' does not exist on type 'object'.

3067                                                 typeof value.amount === "number"
                                                                  ~~~~~~

src/components/PendingSolutions.tsx:3068:66 - error TS2339: Property 'amount' does not exist on type 'object'.

3068                                                   ? `AED ${value.amount.toLocaleString()}`
                                                                      ~~~~~~

src/components/PendingSolutions.tsx:3077:78 - error TS2339: Property 'estimatedCost' does not exist on type 'never'.

3077                                                       : `AED ${(selectedPlan.estimatedCost || 0).toLocaleString()}`}
                                                                                  ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3087:42 - error TS2339: Property 'costBreakdown' does not exist on type 'never'.

3087                             selectedPlan.costBreakdown &&
                                              ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3088:54 - error TS2339: Property 'costBreakdown' does not exist on type 'never'.

3088                             Object.keys(selectedPlan.costBreakdown).length > 0
                                                          ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3093:62 - error TS2339: Property 'costBreakdown' does not exist on type 'never'.

3093                                 {Object.entries(selectedPlan.costBreakdown).map(
                                                                  ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3102:47 - error TS2339: Property 'amount' does not exist on type 'object'.

3102                                         value.amount
                                                   ~~~~~~

src/components/PendingSolutions.tsx:3103:51 - error TS2339: Property 'amount' does not exist on type 'object'.

3103                                           ? value.amount
                                                       ~~~~~~

src/components/PendingSolutions.tsx:3109:70 - error TS2339: Property 'estimatedCost' does not exist on type 'never'.

3109                                               : `AED ${(selectedPlan.estimatedCost || 0).toLocaleString()}`}
                                                                          ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3127:53 - error TS2339: Property 'estimatedCost' does not exist on type 'never'.

3127                                       (selectedPlan.estimatedCost || 50000) *
                                                         ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3139:53 - error TS2339: Property 'estimatedCost' does not exist on type 'never'.

3139                                       (selectedPlan.estimatedCost || 50000) *
                                                         ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3151:53 - error TS2339: Property 'estimatedCost' does not exist on type 'never'.

3151                                       (selectedPlan.estimatedCost || 50000) *
                                                         ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3163:53 - error TS2339: Property 'estimatedCost' does not exist on type 'never'.

3163                                       (selectedPlan.estimatedCost || 50000) *
                                                         ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3181:46 - error TS2339: Property 'costAnalysis' does not exist on type 'never'.

3181                                 selectedPlan.costAnalysis?.total ||
                                                  ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3182:46 - error TS2339: Property 'costBreakdown' does not exist on type 'never'.

3182                                 selectedPlan.costBreakdown?.total ||
                                                  ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3183:46 - error TS2339: Property 'matchingOption' does not exist on type 'never'.

3183                                 selectedPlan.matchingOption?.cost_breakdown
                                                  ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3189:59 - error TS2339: Property 'estimatedCost' does not exist on type 'never'.

3189                               return `AED ${(selectedPlan.estimatedCost || 50000).toLocaleString()}`;
                                                               ~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3212:45 - error TS2339: Property 'estimatedDelay' does not exist on type 'never'.

3212                               {selectedPlan.estimatedDelay || 0} minute delay
                                                 ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3225:45 - error TS2339: Property 'affectedPassengers' does not exist on type 'never'.

3225                               {selectedPlan.affectedPassengers || "N/A"}{" "}
                                                 ~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3238:45 - error TS2339: Property 'confidence' does not exist on type 'never'.

3238                               {selectedPlan.confidence || 80}% confidence in
                                                 ~~~~~~~~~~

src/components/PendingSolutions.tsx:3251:45 - error TS2339: Property 'rotationImpact' does not exist on type 'never'.

3251                               {selectedPlan.rotationImpact?.networkImpact ||
                                                 ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3252:46 - error TS2339: Property 'matchingOption' does not exist on type 'never'.

3252                                 selectedPlan.matchingOption?.rotation_plan
                                                  ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3270:30 - error TS2339: Property 'status' does not exist on type 'never'.

3270                 selectedPlan.status &&
                                  ~~~~~~

src/components/PendingSolutions.tsx:3272:32 - error TS2339: Property 'status' does not exist on type 'never'.

3272                   selectedPlan.status,
                                    ~~~~~~

src/components/PendingSolutions.tsx:3277:58 - error TS2339: Property 'id' does not exist on type 'never'.

3277                         if (selectedPlan && selectedPlan.id) {
                                                              ~~

src/components/PendingSolutions.tsx:3278:60 - error TS2339: Property 'id' does not exist on type 'never'.

3278                           await handleApprove(selectedPlan.id);
                                                                ~~

src/components/PendingSolutions.tsx:3290:58 - error TS2339: Property 'id' does not exist on type 'never'.

3290                         if (selectedPlan && selectedPlan.id) {
                                                              ~~

src/components/PendingSolutions.tsx:3291:59 - error TS2339: Property 'id' does not exist on type 'never'.

3291                           await handleReject(selectedPlan.id);
                                                               ~~

src/components/PendingSolutions.tsx:3318:64 - error TS2339: Property 'title' does not exist on type 'never'.

3318               Comprehensive view of {selectedOptionForDetails?.title} •{" "}
                                                                    ~~~~~

src/components/PendingSolutions.tsx:3319:42 - error TS2339: Property 'id' does not exist on type 'never'.

3319               {selectedOptionForDetails?.id || "A321-007"} for{" "}
                                              ~~

src/components/PendingSolutions.tsx:3320:42 - error TS2339: Property 'flightNumber' does not exist on type 'never'.

3320               {selectedOptionForDetails?.flightNumber}
                                              ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3328:33 - error TS2339: Property 'hasCrewData' does not exist on type 'never'.

3328                   selectedPlan?.hasCrewData && selectedPlan?.hasPassengerData
                                     ~~~~~~~~~~~

src/components/PendingSolutions.tsx:3328:62 - error TS2339: Property 'hasPassengerData' does not exist on type 'never'.

3328                   selectedPlan?.hasCrewData && selectedPlan?.hasPassengerData
                                                                  ~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3330:37 - error TS2339: Property 'hasCrewData' does not exist on type 'never'.

3330                     : selectedPlan?.hasCrewData ||
                                         ~~~~~~~~~~~

src/components/PendingSolutions.tsx:3331:39 - error TS2339: Property 'hasPassengerData' does not exist on type 'never'.

3331                         selectedPlan?.hasPassengerData
                                           ~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3338:45 - error TS2339: Property 'pending_recovery_solutions' does not exist on type 'never'.

3338                   selectedOptionForDetails?.pending_recovery_solutions ?? {},
                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3340:45 - error TS2339: Property 'pending_recovery_solutions' does not exist on type 'never'.

3340                   selectedOptionForDetails?.pending_recovery_solutions
                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3346:45 - error TS2339: Property 'pending_recovery_solutions' does not exist on type 'never'.

3346                   selectedOptionForDetails?.pending_recovery_solutions ?? {},
                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3348:45 - error TS2339: Property 'pending_recovery_solutions' does not exist on type 'never'.

3348                   selectedOptionForDetails?.pending_recovery_solutions
                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3372:55 - error TS2339: Property 'title' does not exist on type 'never'.

3372                             {selectedOptionForDetails.title}
                                                           ~~~~~

src/components/PendingSolutions.tsx:3375:55 - error TS2339: Property 'description' does not exist on type 'never'.

3375                             {selectedOptionForDetails.description}
                                                           ~~~~~~~~~~~

src/components/PendingSolutions.tsx:3383:59 - error TS2339: Property 'cost' does not exist on type 'never'.

3383                                 {selectedOptionForDetails.cost}
                                                               ~~~~

src/components/PendingSolutions.tsx:3391:59 - error TS2339: Property 'timeline' does not exist on type 'never'.

3391                                 {selectedOptionForDetails.timeline}
                                                               ~~~~~~~~

src/components/PendingSolutions.tsx:3399:59 - error TS2339: Property 'confidence' does not exist on type 'never'.

3399                                 {selectedOptionForDetails.confidence}%
                                                               ~~~~~~~~~~

src/components/PendingSolutions.tsx:3407:59 - error TS2339: Property 'impact' does not exist on type 'never'.

3407                                 {selectedOptionForDetails.impact}
                                                               ~~~~~~

src/components/PendingSolutions.tsx:3421:61 - error TS2339: Property 'confidence' does not exist on type 'never'.

3421                                   {selectedOptionForDetails.confidence}%
                                                                 ~~~~~~~~~~

src/components/PendingSolutions.tsx:3425:65 - error TS2339: Property 'confidence' does not exist on type 'never'.

3425                                 value={selectedOptionForDetails.confidence}
                                                                     ~~~~~~~~~~

src/components/PendingSolutions.tsx:3474:51 - error TS2339: Property 'pending_recovery_solutions' does not exist on type 'never'.

3474                         selectedOptionForDetails?.pending_recovery_solutions
                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3491:58 - error TS2339: Property 'id' does not exist on type 'never'.

3491                               {selectedOptionForDetails?.id || "A321-007"}
                                                              ~~

src/components/PendingSolutions.tsx:3499:42 - error TS7006: Parameter 'assignment' implicitly has an 'any' type.

3499                           {crewData.map((assignment, index) => (
                                              ~~~~~~~~~~

src/components/PendingSolutions.tsx:3499:54 - error TS7006: Parameter 'index' implicitly has an 'any' type.

3499                           {crewData.map((assignment, index) => (
                                                          ~~~~~

src/components/PendingSolutions.tsx:3548:42 - error TS7006: Parameter 'crew' implicitly has an 'any' type.

3548                                         (crew, crewIndex) => (
                                              ~~~~

src/components/PendingSolutions.tsx:3548:48 - error TS7006: Parameter 'crewIndex' implicitly has an 'any' type.

3548                                         (crew, crewIndex) => (
                                                    ~~~~~~~~~

src/components/PendingSolutions.tsx:3644:33 - error TS2339: Property 'pending_recovery_solutions' does not exist on type 'never'.

3644                               ?.pending_recovery_solutions?.full_details
                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3655:55 - error TS2339: Property 'pending_recovery_solutions' does not exist on type 'never'.

3655                             selectedOptionForDetails?.pending_recovery_solutions
                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3697:37 - error TS2339: Property 'pending_recovery_solutions' does not exist on type 'never'.

3697                                   ?.pending_recovery_solutions?.full_details
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3706:36 - error TS2339: Property 'pending_recovery_solutions' does not exist on type 'never'.

3706                                   .pending_recovery_solutions?.full_details
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3738:55 - error TS2339: Property 'pending_recovery_solutions' does not exist on type 'never'.

3738                             selectedOptionForDetails?.pending_recovery_solutions
                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3740:55 - error TS2339: Property 'pending_recovery_solutions' does not exist on type 'never'.

3740                             selectedOptionForDetails?.pending_recovery_solutions
                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3745:30 - error TS7006: Parameter 'acc' implicitly has an 'any' type.

3745                             (acc, passenger) => {
                                  ~~~

src/components/PendingSolutions.tsx:3745:35 - error TS7006: Parameter 'passenger' implicitly has an 'any' type.

3745                             (acc, passenger) => {
                                       ~~~~~~~~~

src/components/PendingSolutions.tsx:3774:42 - error TS18046: 'passengers' is of type 'unknown'.

3774                                         {passengers.length} passenger
                                              ~~~~~~~~~~

src/components/PendingSolutions.tsx:3775:42 - error TS18046: 'passengers' is of type 'unknown'.

3775                                         {passengers.length > 1 ? "s" : ""}
                                              ~~~~~~~~~~

src/components/PendingSolutions.tsx:3784:36 - error TS18046: 'passengers' is of type 'unknown'.

3784                                   {passengers.map(
                                        ~~~~~~~~~~

src/components/PendingSolutions.tsx:3785:38 - error TS7006: Parameter 'passenger' implicitly has an 'any' type.

3785                                     (passenger, passengerIndex) => (
                                          ~~~~~~~~~

src/components/PendingSolutions.tsx:3785:49 - error TS7006: Parameter 'passengerIndex' implicitly has an 'any' type.

3785                                     (passenger, passengerIndex) => (
                                                     ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3817:49 - error TS2552: Cannot find name 'plan'. Did you mean 'plans'?

3817                                                 plan.flightNumber}
                                                     ~~~~

  src/components/PendingSolutions.tsx:100:10
    100   const [plans, setPlans] = useState([]);
                 ~~~~~
    'plans' is declared here.

src/components/PendingSolutions.tsx:3859:54 - error TS7006: Parameter 'service' implicitly has an 'any' type.

3859                                                     (service, serviceIndex) => (
                                                          ~~~~~~~

src/components/PendingSolutions.tsx:3859:63 - error TS7006: Parameter 'serviceIndex' implicitly has an 'any' type.

3859                                                     (service, serviceIndex) => (
                                                                   ~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3888:55 - error TS2339: Property 'pending_recovery_solutions' does not exist on type 'never'.

3888                             selectedOptionForDetails?.pending_recovery_solutions
                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3890:55 - error TS2339: Property 'pending_recovery_solutions' does not exist on type 'never'.

3890                             selectedOptionForDetails?.pending_recovery_solutions
                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3934:51 - error TS2339: Property 'matchingOption' does not exist on type 'never'.

3934                         selectedOptionForDetails?.matchingOption?.rotation_plan ||
                                                       ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3935:51 - error TS2339: Property 'rotationImpact' does not exist on type 'never'.

3935                         selectedOptionForDetails?.rotationImpact ||
                                                       ~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3936:51 - error TS2339: Property 'pending_recovery_solutions' does not exist on type 'never'.

3936                         selectedOptionForDetails?.pending_recovery_solutions?.rotation_impact ||
                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PendingSolutions.tsx:3969:55 - error TS7006: Parameter 'flight' implicitly has an 'any' type.

3969                           {detailedFlightImpacts.map((flight, index) => (
                                                           ~~~~~~

src/components/PendingSolutions.tsx:3969:63 - error TS7006: Parameter 'index' implicitly has an 'any' type.

3969                           {detailedFlightImpacts.map((flight, index) => (
                                                                   ~~~~~

src/components/PendingSolutions.tsx:4030:55 - error TS7006: Parameter 'crew' implicitly has an 'any' type.

4030                                     {crewImpacts.map((crew, index) => (
                                                           ~~~~

src/components/PendingSolutions.tsx:4030:61 - error TS7006: Parameter 'index' implicitly has an 'any' type.

4030                                     {crewImpacts.map((crew, index) => (
                                                                 ~~~~~

src/components/PendingSolutions.tsx:4174:28 - error TS2339: Property 'status' does not exist on type 'never'.

4174               selectedPlan.status &&
                                ~~~~~~

src/components/PendingSolutions.tsx:4176:30 - error TS2339: Property 'status' does not exist on type 'never'.

4176                 selectedPlan.status,
                                  ~~~~~~

src/components/PendingSolutions.tsx:4181:56 - error TS2339: Property 'id' does not exist on type 'never'.

4181                       if (selectedPlan && selectedPlan.id) {
                                                            ~~

src/components/PendingSolutions.tsx:4182:58 - error TS2339: Property 'id' does not exist on type 'never'.

4182                         await handleApprove(selectedPlan.id);
                                                              ~~

src/components/PendingSolutions.tsx:4194:56 - error TS2339: Property 'id' does not exist on type 'never'.

4194                       if (selectedPlan && selectedPlan.id) {
                                                            ~~

src/components/PendingSolutions.tsx:4195:57 - error TS2339: Property 'id' does not exist on type 'never'.

4195                         await handleReject(selectedPlan.id);
                                                             ~~

src/components/PredictionAnalytics.tsx:3:8 - error TS6133: 'React' is declared but its value is never read.

3 import React, { useState } from 'react'
         ~~~~~

src/components/PredictionAnalytics.tsx:6:1 - error TS6133: 'Badge' is declared but its value is never read.

6 import { Badge } from './ui/badge'
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/PredictionAnalytics.tsx:13:3 - error TS6133: 'BarChart3' is declared but its value is never read.

13   BarChart3,
     ~~~~~~~~~

src/components/PredictionAnalytics.tsx:25:10 - error TS6133: 'modelType' is declared but its value is never read.

25   const [modelType, setModelType] = useState('all')
            ~~~~~~~~~

src/components/PredictionAnalytics.tsx:25:21 - error TS6133: 'setModelType' is declared but its value is never read.

25   const [modelType, setModelType] = useState('all')
                       ~~~~~~~~~~~~

src/components/PredictionAnalytics.tsx:81:27 - error TS7006: Parameter 'impact' implicitly has an 'any' type.

81   const getImpactColor = (impact) => {
                             ~~~~~~

src/components/PredictionAnalytics.tsx:91:30 - error TS7006: Parameter 'trend' implicitly has an 'any' type.

91   const getTrendIndicator = (trend) => {
                                ~~~~~

src/components/RecoveryOptionsGenerator.tsx:44:3 - error TS6133: 'Wrench' is declared but its value is never read.

44   Wrench,
     ~~~~~~

src/components/RecoveryOptionsGenerator.tsx:46:3 - error TS6133: 'ArrowRight' is declared but its value is never read.

46   ArrowRight,
     ~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:50:3 - error TS6133: 'RotateCw' is declared but its value is never read.

50   RotateCw,
     ~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:55:3 - error TS6133: 'PhoneCall' is declared but its value is never read.

55   PhoneCall,
     ~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:57:3 - error TS6133: 'Zap' is declared but its value is never read.

57   Zap,
     ~~~

src/components/RecoveryOptionsGenerator.tsx:58:3 - error TS6133: 'TrendingUp' is declared but its value is never read.

58   TrendingUp,
     ~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:62:3 - error TS6133: 'CloudRain' is declared but its value is never read.

62   CloudRain,
     ~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:63:3 - error TS6133: 'Wind' is declared but its value is never read.

63   Wind,
     ~~~~

src/components/RecoveryOptionsGenerator.tsx:64:3 - error TS6133: 'Navigation' is declared but its value is never read.

64   Navigation,
     ~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:66:3 - error TS6133: 'Gauge' is declared but its value is never read.

66   Gauge,
     ~~~~~

src/components/RecoveryOptionsGenerator.tsx:67:3 - error TS6133: 'CheckSquare' is declared but its value is never read.

67   CheckSquare,
     ~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:70:3 - error TS6133: 'Network' is declared but its value is never read.

70   Network,
     ~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:73:3 - error TS6133: 'Bell' is declared but its value is never read.

73   Bell,
     ~~~~

src/components/RecoveryOptionsGenerator.tsx:74:3 - error TS6133: 'Upload' is declared but its value is never read.

74   Upload,
     ~~~~~~

src/components/RecoveryOptionsGenerator.tsx:75:3 - error TS6133: 'Download' is declared but its value is never read.

75   Download,
     ~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:76:3 - error TS6133: 'Share' is declared but its value is never read.

76   Share,
     ~~~~~

src/components/RecoveryOptionsGenerator.tsx:78:3 - error TS6133: 'Car' is declared but its value is never read.

78   Car,
     ~~~

src/components/RecoveryOptionsGenerator.tsx:79:3 - error TS6133: 'UserX' is declared but its value is never read.

79   UserX,
     ~~~~~

src/components/RecoveryOptionsGenerator.tsx:82:3 - error TS6133: 'Calculator' is declared but its value is never read.

82   Calculator,
     ~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:83:3 - error TS6133: 'TrendingDown' is declared but its value is never read.

83   TrendingDown,
     ~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:84:3 - error TS6133: 'Lightbulb' is declared but its value is never read.

84   Lightbulb,
     ~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:85:3 - error TS6133: 'History' is declared but its value is never read.

85   History,
     ~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:87:3 - error TS6133: 'ThumbsUp' is declared but its value is never read.

87   ThumbsUp,
     ~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:88:3 - error TS6133: 'ThumbsDown' is declared but its value is never read.

88   ThumbsDown,
     ~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:93:3 - error TS6133: 'Copy' is declared but its value is never read.

93   Copy,
     ~~~~

src/components/RecoveryOptionsGenerator.tsx:94:3 - error TS6133: 'Layers' is declared but its value is never read.

94   Layers,
     ~~~~~~

src/components/RecoveryOptionsGenerator.tsx:95:3 - error TS6133: 'Filter' is declared but its value is never read.

95   Filter,
     ~~~~~~

src/components/RecoveryOptionsGenerator.tsx:97:3 - error TS6133: 'BarChart2' is declared but its value is never read.

97   BarChart2,
     ~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:107:1 - error TS6192: All imports in import declaration are unused.

107 import {
    ~~~~~~~~
108   getDetailedDescription,
    ~~~~~~~~~~~~~~~~~~~~~~~~~
... 
118   getWhatIfScenarios,
    ~~~~~~~~~~~~~~~~~~~~~
119 } from "./recovery-option-helpers";
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:128:3 - error TS7031: Binding element 'selectedFlight' implicitly has an 'any' type.

128   selectedFlight,
      ~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:129:3 - error TS7031: Binding element 'onSelectPlan' implicitly has an 'any' type.

129   onSelectPlan,
      ~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:130:3 - error TS7031: Binding element 'onCompare' implicitly has an 'any' type.

130   onCompare,
      ~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:131:3 - error TS7031: Binding element 'onPassengerServices' implicitly has an 'any' type.

131   onPassengerServices,
      ~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:132:3 - error TS7031: Binding element 'onNavigateToPendingSolutions' implicitly has an 'any' type.

132   onNavigateToPendingSolutions,
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:134:10 - error TS6133: 'isMounted' is declared but its value is never read.

134   const [isMounted, setIsMounted] = useState(true);
             ~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:146:10 - error TS6133: 'showDetails' is declared but its value is never read.

146   const [showDetails, setShowDetails] = useState(false);
             ~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:146:23 - error TS6133: 'setShowDetails' is declared but its value is never read.

146   const [showDetails, setShowDetails] = useState(false);
                          ~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:147:10 - error TS6133: 'currentStep' is declared but its value is never read.

147   const [currentStep, setCurrentStep] = useState(0);
             ~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:147:23 - error TS6133: 'setCurrentStep' is declared but its value is never read.

147   const [currentStep, setCurrentStep] = useState(0);
                          ~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:151:10 - error TS6133: 'scheduleImpactData' is declared but its value is never read.

151   const [scheduleImpactData, setScheduleImpactData] = useState(null);
             ~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:158:10 - error TS6133: 'showWhatIfSimulation' is declared but its value is never read.

158   const [showWhatIfSimulation, setShowWhatIfSimulation] = useState(false);
             ~~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:160:10 - error TS6133: 'simulationScenarios' is declared but its value is never read.

160   const [simulationScenarios, setSimulationScenarios] = useState([]);
             ~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:160:31 - error TS6133: 'setSimulationScenarios' is declared but its value is never read.

160   const [simulationScenarios, setSimulationScenarios] = useState([]);
                                  ~~~~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:161:10 - error TS6133: 'activeSimulation' is declared but its value is never read.

161   const [activeSimulation, setActiveSimulation] = useState(null);
             ~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:262:13 - error TS18046: 'error' is of type 'unknown'.

262             error.message,
                ~~~~~

src/components/RecoveryOptionsGenerator.tsx:274:13 - error TS18046: 'error' is of type 'unknown'.

274             error.message,
                ~~~~~

src/components/RecoveryOptionsGenerator.tsx:283:15 - error TS18046: 'stepError' is of type 'unknown'.

283               stepError.message,
                  ~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:300:15 - error TS18046: 'error' is of type 'unknown'.

300               error.message,
                  ~~~~~

src/components/RecoveryOptionsGenerator.tsx:327:21 - error TS18046: 'fetchError' is of type 'unknown'.

327                     fetchError.message,
                        ~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:337:23 - error TS18046: 'standardError' is of type 'unknown'.

337                       standardError.message,
                          ~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:355:17 - error TS18046: 'generateError' is of type 'unknown'.

355                 generateError.message,
                    ~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:358:17 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'SetStateAction<null>'.

358                 "Failed to generate recovery options: " + generateError.message,
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:358:59 - error TS18046: 'generateError' is of type 'unknown'.

358                 "Failed to generate recovery options: " + generateError.message,
                                                              ~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:369:35 - error TS7006: Parameter 'field' implicitly has an 'any' type.

369           const parseJsonField = (field, fallback = []) => {
                                      ~~~~~

src/components/RecoveryOptionsGenerator.tsx:382:36 - error TS7006: Parameter 'field' implicitly has an 'any' type.

382           const parseJsonObject = (field, fallback = {}) => {
                                       ~~~~~

src/components/RecoveryOptionsGenerator.tsx:994:15 - error TS2322: Type 'string' is not assignable to type 'never'.

994               "Effective recovery solution",
                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:995:15 - error TS2322: Type 'string' is not assignable to type 'never'.

995               "Minimizes operational disruption",
                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:996:15 - error TS2322: Type 'string' is not assignable to type 'never'.

996               "Cost-efficient approach",
                  ~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:999:15 - error TS2322: Type 'string' is not assignable to type 'never'.

999               "Requires coordination with multiple teams",
                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1000:15 - error TS2322: Type 'string' is not assignable to type 'never'.

1000               "Timeline dependent on external factors",
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1001:15 - error TS2322: Type 'string' is not assignable to type 'never'.

1001               "May impact downstream operations",
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1013:17 - error TS2322: Type '{ category: string; amount: any; percentage: number; description: string; }' is not assignable to type 'never'.

1013                 {
                     ~
1014                   category: "Operations Cost",
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ... 
1018                     "Direct operational costs including crew and resources",
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1019                 },
     ~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1020:17 - error TS2322: Type '{ category: string; amount: string; percentage: number; description: string; }' is not assignable to type 'never'.

1020                 {
                     ~
1021                   category: "Passenger Services",
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ... 
1024                   description: "Passenger accommodation and compensation",
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1025                 },
     ~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1026:17 - error TS2322: Type '{ category: string; amount: string; percentage: number; description: string; }' is not assignable to type 'never'.

1026                 {
                     ~
1027                   category: "Administrative",
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ... 
1030                   description: "Documentation and regulatory compliance",
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1031                 },
     ~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1097:28 - error TS2345: Argument of type '{ id: any; title: any; description: any; cost: any; timeline: any; confidence: any; impact: any; status: any; category: any; categoryCode: any; advantages: any; considerations: any; metrics: any; resourceRequirements: any; ... 10 more ...; historicalData: { ...; }; }[]' is not assignable to parameter of type 'SetStateAction<never[]>'.
  Type '{ id: any; title: any; description: any; cost: any; timeline: any; confidence: any; impact: any; status: any; category: any; categoryCode: any; advantages: any; considerations: any; metrics: any; resourceRequirements: any; ... 10 more ...; historicalData: { ...; }; }[]' is not assignable to type 'never[]'.
    Type '{ id: any; title: any; description: any; cost: any; timeline: any; confidence: any; impact: any; status: any; category: any; categoryCode: any; advantages: any; considerations: any; metrics: any; resourceRequirements: any; ... 10 more ...; historicalData: { ...; }; }' is not assignable to type 'never'.

1097         setRecoveryOptions(transformedOptions);
                                ~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1098:26 - error TS2345: Argument of type '{ step: any; title: any; status: any; timestamp: any; system: any; details: any; data: any; }[]' is not assignable to parameter of type 'SetStateAction<never[]>'.
  Type '{ step: any; title: any; status: any; timestamp: any; system: any; details: any; data: any; }[]' is not assignable to type 'never[]'.
    Type '{ step: any; title: any; status: any; timestamp: any; system: any; details: any; data: any; }' is not assignable to type 'never'.

1098         setRecoverySteps(transformedSteps);
                              ~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1102:13 - error TS2345: Argument of type '"No recovery options available for this disruption categorization"' is not assignable to parameter of type 'SetStateAction<null>'.

1102             "No recovery options available for this disruption categorization",
                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1110:25 - error TS18046: 'error' is of type 'unknown'.

1110         setLoadingError(error.message || "Failed to load recovery options");
                             ~~~~~

src/components/RecoveryOptionsGenerator.tsx:1222:34 - error TS7006: Parameter 'paramName' implicitly has an 'any' type.

1222   const handleParameterChange = (paramName, newValue) => {
                                      ~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1222:45 - error TS7006: Parameter 'newValue' implicitly has an 'any' type.

1222   const handleParameterChange = (paramName, newValue) => {
                                                 ~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1224:7 - error TS2698: Spread types may only be created from object types.

1224       ...prev,
           ~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1226:18 - error TS2339: Property 'editedParameters' does not exist on type 'never'.

1226         ...prev?.editedParameters,
                      ~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1233:9 - error TS6133: 'runWhatIfSimulation' is declared but its value is never read.

1233   const runWhatIfSimulation = (scenario) => {
             ~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1233:32 - error TS7006: Parameter 'scenario' implicitly has an 'any' type.

1233   const runWhatIfSimulation = (scenario) => {
                                    ~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1235:40 - error TS2339: Property 'editedParameters' does not exist on type 'never'.

1235     const editedParams = editedOption?.editedParameters || {};
                                            ~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1239:7 - error TS2353: Object literal may only specify known properties, and 'scenario' does not exist in type '(prevState: null) => null'.

1239       scenario,
           ~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1255:27 - error TS7006: Parameter 'status' implicitly has an 'any' type.

1255   const getStatusColor = (status) => {
                               ~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1268:26 - error TS7006: Parameter 'status' implicitly has an 'any' type.

1268   const getStatusIcon = (status) => {
                              ~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1281:30 - error TS7006: Parameter 'status' implicitly has an 'any' type.

1281   const getStepStatusIcon = (status) => {
                                  ~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1294:25 - error TS7006: Parameter 'probability' implicitly has an 'any' type.

1294   const getRiskColor = (probability) => {
                             ~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1308:32 - error TS7006: Parameter 'option' implicitly has an 'any' type.

1308   const handleExecuteOption = (option) => {
                                    ~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1321:14 - error TS18047: 'optionToExecute' is possibly 'null'.

1321       title: optionToExecute.title,
                  ~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1328:17 - error TS18047: 'optionToExecute' is possibly 'null'.

1328       priority: optionToExecute.status === "recommended" ? "High" : "Medium",
                     ~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1330:31 - error TS18047: 'optionToExecute' is possibly 'null'.

1330       estimatedCost: parseInt(optionToExecute.cost.replace(/[^0-9]/g, "")) || 0,
                                   ~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1332:18 - error TS18047: 'optionToExecute' is possibly 'null'.

1332         parseInt(optionToExecute.timeline.replace(/[^0-9]/g, "")) || 0,
                      ~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1334:19 - error TS18047: 'optionToExecute' is possibly 'null'.

1334       confidence: optionToExecute.confidence,
                       ~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1337:17 - error TS18047: 'optionToExecute' is possibly 'null'.

1337       timeline: optionToExecute.timeline,
                     ~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1345:9 - error TS18047: 'optionToExecute' is possibly 'null'.

1345         optionToExecute.status === "recommended"
             ~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1351:29 - error TS18047: 'optionToExecute' is possibly 'null'.

1351         successProbability: optionToExecute.confidence,
                                 ~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1364:38 - error TS2698: Spread types may only be created from object types.

1364       onSelectPlan && onSelectPlan({ ...optionToExecute, flight: flight });
                                          ~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1373:41 - error TS7006: Parameter 'option' implicitly has an 'any' type.

1373   const handleViewRotationPlan = async (option) => {
                                             ~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1401:29 - error TS2345: Argument of type '{ analysisType: string; primaryFocus: string; selectedOption: { id: any; title: any; description: any; cost: any; timeline: any; confidence: any; impact: any; status: any; }; scheduleChanges: { originalPlan: any; newPlan: any; totalFlightsAffected: any; scheduleImpactSummary: string; }; ... 7 more ...; costBenefitAn...' is not assignable to parameter of type 'SetStateAction<null>'.
  Type '{ analysisType: string; primaryFocus: string; selectedOption: { id: any; title: any; description: any; cost: any; timeline: any; confidence: any; impact: any; status: any; }; scheduleChanges: { originalPlan: any; newPlan: any; totalFlightsAffected: any; scheduleImpactSummary: string; }; ... 7 more ...; costBenefitAn...' provides no match for the signature '(prevState: null): null'.

1401       setScheduleImpactData(scheduleImpact);
                                 ~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1413:29 - error TS2345: Argument of type '{ analysisType: string; primaryFocus: string; selectedOption: { id: any; title: any; description: any; cost: any; timeline: any; confidence: any; impact: any; status: any; }; scheduleChanges: { originalPlan: any; newPlan: any; totalFlightsAffected: any; scheduleImpactSummary: string; }; ... 7 more ...; costBenefitAn...' is not assignable to parameter of type 'SetStateAction<null>'.
  Type '{ analysisType: string; primaryFocus: string; selectedOption: { id: any; title: any; description: any; cost: any; timeline: any; confidence: any; impact: any; status: any; }; scheduleChanges: { originalPlan: any; newPlan: any; totalFlightsAffected: any; scheduleImpactSummary: string; }; ... 7 more ...; costBenefitAn...' provides no match for the signature '(prevState: null): null'.

1413       setScheduleImpactData(scheduleImpact);
                                 ~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1421:37 - error TS7006: Parameter 'option' implicitly has an 'any' type.

1421   const generateRotationPlanData = (option, flight) => {
                                         ~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1421:45 - error TS7006: Parameter 'flight' implicitly has an 'any' type.

1421   const generateRotationPlanData = (option, flight) => {
                                                 ~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1482:11 - error TS6133: 'isWeatherIssue' is declared but its value is never read.

1482     const isWeatherIssue =
               ~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1781:43 - error TS7006: Parameter 'option' implicitly has an 'any' type.

1781   const handleViewRecoveryOption = async (option) => {
                                               ~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1859:46 - error TS7006: Parameter 'option' implicitly has an 'any' type.

1859   const handlePassengerServicesNavigation = (option) => {
                                                  ~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1904:38 - error TS2339: Property 'title' does not exist on type 'never'.

1904                     {optionToExecute.title}
                                          ~~~~~

src/components/RecoveryOptionsGenerator.tsx:1907:38 - error TS2339: Property 'description' does not exist on type 'never'.

1907                     {optionToExecute.description}
                                          ~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1927:44 - error TS2339: Property 'cost' does not exist on type 'never'.

1927                           {optionToExecute.cost}
                                                ~~~~

src/components/RecoveryOptionsGenerator.tsx:1934:44 - error TS2339: Property 'timeline' does not exist on type 'never'.

1934                           {optionToExecute.timeline}
                                                ~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1950:44 - error TS2339: Property 'confidence' does not exist on type 'never'.

1950                           {optionToExecute.confidence}%
                                                ~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:1957:44 - error TS2339: Property 'impact' does not exist on type 'never'.

1957                           {optionToExecute.impact}
                                                ~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2081:38 - error TS2339: Property 'status' does not exist on type 'never'.

2081                         (opt) => opt.status === "recommended",
                                          ~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2139:27 - error TS2339: Property 'step' does not exist on type 'never'.

2139                     {step.step}
                               ~~~~

src/components/RecoveryOptionsGenerator.tsx:2147:45 - error TS2339: Property 'status' does not exist on type 'never'.

2147                     {getStepStatusIcon(step.status)}
                                                 ~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2148:55 - error TS2339: Property 'title' does not exist on type 'never'.

2148                     <h4 className="font-medium">{step.title}</h4>
                                                           ~~~~~

src/components/RecoveryOptionsGenerator.tsx:2150:29 - error TS2339: Property 'timestamp' does not exist on type 'never'.

2150                       {step.timestamp}
                                 ~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2154:27 - error TS2339: Property 'details' does not exist on type 'never'.

2154                     {step.details}
                               ~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2157:35 - error TS2339: Property 'system' does not exist on type 'never'.

2157                     System: {step.system}
                                       ~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2159:25 - error TS2339: Property 'data' does not exist on type 'never'.

2159                   {step.data && (
                             ~~~~

src/components/RecoveryOptionsGenerator.tsx:2161:44 - error TS2339: Property 'data' does not exist on type 'never'.

2161                       {Object.entries(step.data).map(([key, value]) => (
                                                ~~~~

src/components/RecoveryOptionsGenerator.tsx:2169:57 - error TS2322: Type 'unknown' is not assignable to type 'ReactNode'.

2169                           <span className="font-medium">{value}</span>
                                                             ~~~~~~~

  node_modules/@types/react/index.d.ts:2398:9
    2398         children?: ReactNode | undefined;
                 ~~~~~~~~
    The expected type comes from property 'children' which is declared here on type 'DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>'

src/components/RecoveryOptionsGenerator.tsx:2275:50 - error TS6133: 'index' is declared but its value is never read.

2275               {scenarioData.options.map((option, index) => (
                                                      ~~~~~

src/components/RecoveryOptionsGenerator.tsx:2277:31 - error TS2339: Property 'id' does not exist on type 'never'.

2277                   key={option.id}
                                   ~~

src/components/RecoveryOptionsGenerator.tsx:2278:80 - error TS2339: Property 'id' does not exist on type 'never'.

2278                   className={`transition-all hover:shadow-md ${selectedOption?.id === option.id ? "border-flydubai-blue bg-blue-50" : ""}`}
                                                                                    ~~

src/components/RecoveryOptionsGenerator.tsx:2278:94 - error TS2339: Property 'id' does not exist on type 'never'.

2278                   className={`transition-all hover:shadow-md ${selectedOption?.id === option.id ? "border-flydubai-blue bg-blue-50" : ""}`}
                                                                                                  ~~

src/components/RecoveryOptionsGenerator.tsx:2284:49 - error TS2339: Property 'status' does not exist on type 'never'.

2284                           {getStatusIcon(option.status)}
                                                     ~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2286:37 - error TS2339: Property 'confidence' does not exist on type 'never'.

2286                             {option.confidence}%
                                         ~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2291:37 - error TS2339: Property 'title' does not exist on type 'never'.

2291                             {option.title}
                                         ~~~~~

src/components/RecoveryOptionsGenerator.tsx:2294:37 - error TS2339: Property 'description' does not exist on type 'never'.

2294                             {option.description}
                                         ~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2299:45 - error TS2339: Property 'cost' does not exist on type 'never'.

2299                               <span>{option.cost}</span>
                                                 ~~~~

src/components/RecoveryOptionsGenerator.tsx:2303:45 - error TS2339: Property 'timeline' does not exist on type 'never'.

2303                               <span>{option.timeline}</span>
                                                 ~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2307:45 - error TS2339: Property 'impact' does not exist on type 'never'.

2307                               <span>{option.impact}</span>
                                                 ~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2309:37 - error TS2339: Property 'category' does not exist on type 'never'.

2309                             {option.category && (
                                         ~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2313:43 - error TS2339: Property 'category' does not exist on type 'never'.

2313                                   {option.category}
                                               ~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2335:65 - error TS2339: Property 'status' does not exist on type 'never'.

2335                         <Badge className={getStatusColor(option.status)}>
                                                                     ~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2336:35 - error TS2339: Property 'status' does not exist on type 'never'.

2336                           {option.status.toUpperCase()}
                                       ~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2340:37 - error TS2339: Property 'confidence' does not exist on type 'never'.

2340                             {option.confidence}%
                                         ~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2355:34 - error TS2339: Property 'status' does not exist on type 'never'.

2355                           option.status === "recommended"
                                      ~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2360:57 - error TS2339: Property 'id' does not exist on type 'never'.

2360                         {isExecuting && selectedOption?.id === option.id ? (
                                                             ~~

src/components/RecoveryOptionsGenerator.tsx:2360:71 - error TS2339: Property 'id' does not exist on type 'never'.

2360                         {isExecuting && selectedOption?.id === option.id ? (
                                                                           ~~

src/components/RecoveryOptionsGenerator.tsx:2376:68 - error TS2339: Property 'id' does not exist on type 'never'.

2376                         disabled={loadingRecoveryOption === option.id}
                                                                        ~~

src/components/RecoveryOptionsGenerator.tsx:2379:59 - error TS2339: Property 'id' does not exist on type 'never'.

2379                         {loadingRecoveryOption === option.id ? (
                                                               ~~

src/components/RecoveryOptionsGenerator.tsx:2395:66 - error TS2339: Property 'id' does not exist on type 'never'.

2395                         disabled={loadingRotationPlan === option.id}
                                                                      ~~

src/components/RecoveryOptionsGenerator.tsx:2398:57 - error TS2339: Property 'id' does not exist on type 'never'.

2398                         {loadingRotationPlan === option.id ? (
                                                             ~~

src/components/RecoveryOptionsGenerator.tsx:2445:73 - error TS2339: Property 'title' does not exist on type 'never'.

2445                   Recovery Option Analysis - {selectedOptionForDetails?.title}
                                                                             ~~~~~

src/components/RecoveryOptionsGenerator.tsx:2488:50 - error TS2339: Property 'editableParameters' does not exist on type 'never'.

2488                       {(selectedOptionForDetails.editableParameters || [])?.map(
                                                      ~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2489:26 - error TS7006: Parameter 'param' implicitly has an 'any' type.

2489                         (param, index) => (
                              ~~~~~

src/components/RecoveryOptionsGenerator.tsx:2489:33 - error TS7006: Parameter 'index' implicitly has an 'any' type.

2489                         (param, index) => (
                                     ~~~~~

src/components/RecoveryOptionsGenerator.tsx:2501:49 - error TS2339: Property 'editedParameters' does not exist on type 'never'.

2501                                   editedOption?.editedParameters?.[
                                                     ~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2513:63 - error TS7006: Parameter 'option' implicitly has an 'any' type.

2513                                   {(param.options || []).map((option) => (
                                                                   ~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2526:51 - error TS2339: Property 'editedParameters' does not exist on type 'never'.

2526                                     editedOption?.editedParameters?.[
                                                       ~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2539:50 - error TS2339: Property 'editedParameters' does not exist on type 'never'.

2539                                   {editedOption?.editedParameters?.[
                                                      ~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2550:49 - error TS2339: Property 'editedParameters' does not exist on type 'never'.

2550                                   editedOption?.editedParameters?.[
                                                     ~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2609:53 - error TS2339: Property 'detailedDescription' does not exist on type 'never'.

2609                           {selectedOptionForDetails.detailedDescription ||
                                                         ~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2662:63 - error TS2339: Property 'confidence' does not exist on type 'never'.

2662                               value={selectedOptionForDetails.confidence || 0}
                                                                   ~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2666:57 - error TS2339: Property 'confidence' does not exist on type 'never'.

2666                               {selectedOptionForDetails.confidence || 0}%
                                                             ~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2675:55 - error TS2339: Property 'totalCost' does not exist on type 'never'.

2675                             {selectedOptionForDetails.totalCost
                                                           ~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2676:65 - error TS2339: Property 'totalCost' does not exist on type 'never'.

2676                               ? `AED ${selectedOptionForDetails.totalCost.toLocaleString()}`
                                                                     ~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2677:58 - error TS2339: Property 'cost' does not exist on type 'never'.

2677                               : selectedOptionForDetails.cost || "TBD"}
                                                              ~~~~

src/components/RecoveryOptionsGenerator.tsx:2685:55 - error TS2339: Property 'timeline' does not exist on type 'never'.

2685                             {selectedOptionForDetails.timeline || "TBD"}
                                                           ~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2694:56 - error TS2339: Property 'status' does not exist on type 'never'.

2694                               selectedOptionForDetails.status,
                                                            ~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2697:55 - error TS2339: Property 'impact' does not exist on type 'never'.

2697                             {selectedOptionForDetails.impact}
                                                           ~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2706:56 - error TS2339: Property 'historicalData' does not exist on type 'never'.

2706                               selectedOptionForDetails.historicalData
                                                            ~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2727:52 - error TS2339: Property 'costBreakdown' does not exist on type 'never'.

2727                         {(selectedOptionForDetails.costBreakdown || []).map(
                                                        ~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2728:28 - error TS7006: Parameter 'item' implicitly has an 'any' type.

2728                           (item, index) => (
                                ~~~~

src/components/RecoveryOptionsGenerator.tsx:2728:34 - error TS7006: Parameter 'index' implicitly has an 'any' type.

2728                           (item, index) => (
                                      ~~~~~

src/components/RecoveryOptionsGenerator.tsx:2770:53 - error TS2339: Property 'totalCost' does not exist on type 'never'.

2770                           {selectedOptionForDetails.totalCost
                                                         ~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2771:63 - error TS2339: Property 'totalCost' does not exist on type 'never'.

2771                             ? `AED ${selectedOptionForDetails.totalCost.toLocaleString()}`
                                                                   ~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2772:56 - error TS2339: Property 'cost' does not exist on type 'never'.

2772                             : selectedOptionForDetails.cost || 'TBD'}
                                                            ~~~~

src/components/RecoveryOptionsGenerator.tsx:2788:49 - error TS2339: Property 'timelineDetails' does not exist on type 'never'.

2788                       {selectedOptionForDetails.timelineDetails &&
                                                     ~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2789:48 - error TS2339: Property 'timelineDetails' does not exist on type 'never'.

2789                       selectedOptionForDetails.timelineDetails.length > 0 ? (
                                                    ~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2791:53 - error TS2339: Property 'timelineDetails' does not exist on type 'never'.

2791                           {selectedOptionForDetails.timelineDetails.map(
                                                         ~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2792:30 - error TS7006: Parameter 'step' implicitly has an 'any' type.

2792                             (step, index) => (
                                  ~~~~

src/components/RecoveryOptionsGenerator.tsx:2792:36 - error TS7006: Parameter 'index' implicitly has an 'any' type.

2792                             (step, index) => (
                                        ~~~~~

src/components/RecoveryOptionsGenerator.tsx:2810:62 - error TS2339: Property 'timelineDetails' does not exist on type 'never'.

2810                                     selectedOptionForDetails.timelineDetails
                                                                  ~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2869:49 - error TS2339: Property 'resourceRequirements' does not exist on type 'never'.

2869                       {selectedOptionForDetails.resourceRequirements &&
                                                     ~~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2870:48 - error TS2339: Property 'resourceRequirements' does not exist on type 'never'.

2870                       selectedOptionForDetails.resourceRequirements.length >
                                                    ~~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2873:53 - error TS2339: Property 'resourceRequirements' does not exist on type 'never'.

2873                           {selectedOptionForDetails.resourceRequirements.map(
                                                         ~~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2874:30 - error TS7006: Parameter 'resource' implicitly has an 'any' type.

2874                             (resource, index) => (
                                  ~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2874:40 - error TS7006: Parameter 'index' implicitly has an 'any' type.

2874                             (resource, index) => (
                                            ~~~~~

src/components/RecoveryOptionsGenerator.tsx:2951:49 - error TS2339: Property 'riskAssessment' does not exist on type 'never'.

2951                       {selectedOptionForDetails.riskAssessment &&
                                                     ~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2952:48 - error TS2339: Property 'riskAssessment' does not exist on type 'never'.

2952                       selectedOptionForDetails.riskAssessment.length > 0 ? (
                                                    ~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2954:53 - error TS2339: Property 'riskAssessment' does not exist on type 'never'.

2954                           {selectedOptionForDetails.riskAssessment.map(
                                                         ~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2955:30 - error TS7006: Parameter 'riskItem' implicitly has an 'any' type.

2955                             (riskItem, index) => (
                                  ~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:2955:40 - error TS7006: Parameter 'index' implicitly has an 'any' type.

2955                             (riskItem, index) => (
                                            ~~~~~

src/components/RecoveryOptionsGenerator.tsx:3025:49 - error TS2339: Property 'technicalSpecs' does not exist on type 'never'.

3025                       {selectedOptionForDetails.technicalSpecs &&
                                                     ~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:3026:60 - error TS2339: Property 'technicalSpecs' does not exist on type 'never'.

3026                       Object.keys(selectedOptionForDetails.technicalSpecs)
                                                                ~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:3030:54 - error TS2339: Property 'technicalSpecs' does not exist on type 'never'.

3030                             selectedOptionForDetails.technicalSpecs,
                                                          ~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:3051:70 - error TS2322: Type 'unknown' is not assignable to type 'ReactNode'.

3051                                 <p className="text-sm text-gray-700">{value}</p>
                                                                          ~~~~~~~

  node_modules/@types/react/index.d.ts:2398:9
    2398         children?: ReactNode | undefined;
                 ~~~~~~~~
    The expected type comes from property 'children' which is declared here on type 'DetailedHTMLProps<HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>'

src/components/RecoveryOptionsGenerator.tsx:3139:75 - error TS2339: Property 'title' does not exist on type 'never'.

3139                       Available Aircraft Options - {selectedRotationData?.title}
                                                                               ~~~~~

src/components/RecoveryOptionsGenerator.tsx:3160:53 - error TS2339: Property 'databaseRotationPlan' does not exist on type 'never'.

3160                           if (selectedRotationData?.databaseRotationPlan) {
                                                         ~~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:3163:54 - error TS2339: Property 'databaseRotationPlan' does not exist on type 'never'.

3163                                 selectedRotationData.databaseRotationPlan
                                                          ~~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:3166:54 - error TS2339: Property 'databaseRotationPlan' does not exist on type 'never'.

3166                                 selectedRotationData.databaseRotationPlan
                                                          ~~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:3169:54 - error TS2339: Property 'databaseRotationPlan' does not exist on type 'never'.

3169                                 selectedRotationData.databaseRotationPlan
                                                          ~~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:3172:54 - error TS2339: Property 'databaseRotationPlan' does not exist on type 'never'.

3172                                 selectedRotationData.databaseRotationPlan
                                                          ~~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:3175:54 - error TS2339: Property 'databaseRotationPlan' does not exist on type 'never'.

3175                                 selectedRotationData.databaseRotationPlan
                                                          ~~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:3178:54 - error TS2339: Property 'databaseRotationPlan' does not exist on type 'never'.

3178                                 selectedRotationData.databaseRotationPlan
                                                          ~~~~~~~~~~~~~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:3202:30 - error TS7006: Parameter 'aircraft' implicitly has an 'any' type.

3202                             (aircraft, index) => (
                                  ~~~~~~~~

src/components/RecoveryOptionsGenerator.tsx:3202:40 - error TS7006: Parameter 'index' implicitly has an 'any' type.

3202                             (aircraft, index) => (
                                            ~~~~~

src/components/RecoveryOptionsGenerator.tsx:3302:72 - error TS2339: Property 'title' does not exist on type 'never'.

3302                         Assigned/Standby Crew - {selectedRotationData?.title}
                                                                            ~~~~~

src/components/RecoveryOptionsGenerator.tsx:3435:72 - error TS2339: Property 'title' does not exist on type 'never'.

3435                         Next 3 Sectors Impact - {selectedRotationData?.title}
                                                                            ~~~~~

src/components/RecoveryOptionsGenerator.tsx:3695:63 - error TS18046: 'error' is of type 'unknown'.

3695                           <p className="text-xs mt-1">Error: {error.message}</p>
                                                                   ~~~~~

src/components/RiskAssessment.tsx:3:8 - error TS6133: 'React' is declared but its value is never read.

3 import React, { useState } from 'react'
         ~~~~~

src/components/RiskAssessment.tsx:16:3 - error TS6133: 'Activity' is declared but its value is never read.

16   Activity,
     ~~~~~~~~

src/components/RiskAssessment.tsx:21:3 - error TS6133: 'Plane' is declared but its value is never read.

21   Plane,
     ~~~~~

src/components/RiskAssessment.tsx:24:3 - error TS6133: 'Thermometer' is declared but its value is never read.

24   Thermometer,
     ~~~~~~~~~~~

src/components/RiskAssessment.tsx:25:3 - error TS6133: 'Wind' is declared but its value is never read.

25   Wind,
     ~~~~

src/components/RiskAssessment.tsx:29:3 - error TS6133: 'ArrowUp' is declared but its value is never read.

29   ArrowUp,
     ~~~~~~~

src/components/RiskAssessment.tsx:30:3 - error TS6133: 'ArrowDown' is declared but its value is never read.

30   ArrowDown,
     ~~~~~~~~~

src/components/RiskAssessment.tsx:36:10 - error TS6133: 'riskCategory' is declared but its value is never read.

36   const [riskCategory, setRiskCategory] = useState('all')
            ~~~~~~~~~~~~

src/components/RiskAssessment.tsx:36:24 - error TS6133: 'setRiskCategory' is declared but its value is never read.

36   const [riskCategory, setRiskCategory] = useState('all')
                          ~~~~~~~~~~~~~~~

src/components/RiskAssessment.tsx:211:29 - error TS7006: Parameter 'severity' implicitly has an 'any' type.

211   const getSeverityColor = (severity) => {
                                ~~~~~~~~

src/components/RiskAssessment.tsx:221:25 - error TS7006: Parameter 'trend' implicitly has an 'any' type.

221   const getTrendIcon = (trend) => {
                            ~~~~~

src/components/RiskAssessment.tsx:229:28 - error TS7006: Parameter 'category' implicitly has an 'any' type.

229   const getCategoryIcon = (category) => {
                               ~~~~~~~~

src/components/RiskAssessment.tsx:240:27 - error TS7006: Parameter 'status' implicitly has an 'any' type.

240   const getStatusColor = (status) => {
                              ~~~~~~

src/components/RulesAssistantChatbot.tsx:10:18 - error TS2305: Module '"./ui/avatar"' has no exported member 'AvatarContent'.

10 import { Avatar, AvatarContent, AvatarFallback } from './ui/avatar'
                    ~~~~~~~~~~~~~

src/components/RulesAssistantChatbot.tsx:10:18 - error TS6133: 'AvatarContent' is declared but its value is never read.

10 import { Avatar, AvatarContent, AvatarFallback } from './ui/avatar'
                    ~~~~~~~~~~~~~

src/components/RulesAssistantChatbot.tsx:15:3 - error TS6133: 'Lightbulb' is declared but its value is never read.

15   Lightbulb,
     ~~~~~~~~~

src/components/RulesAssistantChatbot.tsx:17:3 - error TS6133: 'AlertTriangle' is declared but its value is never read.

17   AlertTriangle,
     ~~~~~~~~~~~~~

src/components/RulesAssistantChatbot.tsx:18:3 - error TS6133: 'Clock' is declared but its value is never read.

18   Clock,
     ~~~~~

src/components/RulesAssistantChatbot.tsx:19:3 - error TS6133: 'Plane' is declared but its value is never read.

19   Plane,
     ~~~~~

src/components/RulesAssistantChatbot.tsx:23:3 - error TS6133: 'Trash2' is declared but its value is never read.

23   Trash2,
     ~~~~~~

src/components/RulesAssistantChatbot.tsx:24:3 - error TS6133: 'Edit' is declared but its value is never read.

24   Edit,
     ~~~~

src/components/RulesAssistantChatbot.tsx:26:3 - error TS6133: 'MessageSquare' is declared but its value is never read.

26   MessageSquare,
     ~~~~~~~~~~~~~

src/components/RulesAssistantChatbot.tsx:28:3 - error TS6133: 'Code' is declared but its value is never read.

28   Code,
     ~~~~

src/components/RulesAssistantChatbot.tsx:29:3 - error TS6133: 'FileText' is declared but its value is never read.

29   FileText,
     ~~~~~~~~

src/components/RulesAssistantChatbot.tsx:50:7 - error TS6133: 'ruleTemplates' is declared but its value is never read.

50 const ruleTemplates: RuleTemplate[] = [
         ~~~~~~~~~~~~~

src/components/RulesAssistantChatbot.tsx:122:10 - error TS6133: 'selectedTemplate' is declared but its value is never read.

122   const [selectedTemplate, setSelectedTemplate] = useState<RuleTemplate | null>(null)
             ~~~~~~~~~~~~~~~~

src/components/RulesAssistantChatbot.tsx:122:28 - error TS6133: 'setSelectedTemplate' is declared but its value is never read.

122   const [selectedTemplate, setSelectedTemplate] = useState<RuleTemplate | null>(null)
                               ~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:3:8 - error TS6133: 'React' is declared but its value is never read.

3 import React, { useState, useEffect } from "react";
         ~~~~~

src/components/SettingsPanel.tsx:42:3 - error TS6133: 'Palette' is declared but its value is never read.

42   Palette,
     ~~~~~~~

src/components/SettingsPanel.tsx:64:3 - error TS6133: 'RefreshCw' is declared but its value is never read.

64   RefreshCw,
     ~~~~~~~~~

src/components/SettingsPanel.tsx:66:3 - error TS6133: 'Sliders' is declared but its value is never read.

66   Sliders,
     ~~~~~~~

src/components/SettingsPanel.tsx:74:3 - error TS6133: 'Network' is declared but its value is never read.

74   Network,
     ~~~~~~~

src/components/SettingsPanel.tsx:75:3 - error TS6133: 'Workflow' is declared but its value is never read.

75   Workflow,
     ~~~~~~~~

src/components/SettingsPanel.tsx:76:3 - error TS6133: 'Building' is declared but its value is never read.

76   Building,
     ~~~~~~~~

src/components/SettingsPanel.tsx:78:3 - error TS6133: 'Timer' is declared but its value is never read.

78   Timer,
     ~~~~~

src/components/SettingsPanel.tsx:80:3 - error TS6133: 'Wind' is declared but its value is never read.

80   Wind,
     ~~~~

src/components/SettingsPanel.tsx:82:3 - error TS6133: 'Navigation' is declared but its value is never read.

82   Navigation,
     ~~~~~~~~~~

src/components/SettingsPanel.tsx:84:3 - error TS6133: 'BarChart' is declared but its value is never read.

84   BarChart,
     ~~~~~~~~

src/components/SettingsPanel.tsx:85:3 - error TS6133: 'TrendingDown' is declared but its value is never read.

85   TrendingDown,
     ~~~~~~~~~~~~

src/components/SettingsPanel.tsx:87:3 - error TS6133: 'Wifi' is declared but its value is never read.

87   Wifi,
     ~~~~

src/components/SettingsPanel.tsx:88:3 - error TS6133: 'Dumbbell' is declared but its value is never read.

88   Dumbbell,
     ~~~~~~~~

src/components/SettingsPanel.tsx:90:3 - error TS6133: 'AlertTriangle' is declared but its value is never read.

90   AlertTriangle,
     ~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:99:33 - error TS7031: Binding element 'screenSettings' implicitly has an 'any' type.

99 export function SettingsPanel({ screenSettings, onScreenSettingsChange }) {
                                   ~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:99:49 - error TS7031: Binding element 'onScreenSettingsChange' implicitly has an 'any' type.

99 export function SettingsPanel({ screenSettings, onScreenSettingsChange }) {
                                                   ~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:105:10 - error TS6133: 'isDatabaseConnected' is declared but its value is never read.

105   const [isDatabaseConnected, setIsDatabaseConnected] = useState(false);
             ~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:413:21 - error TS2339: Property 'length' does not exist on type 'Promise<SettingsData[]>'.

413         allSettings.length,
                        ~~~~~~

  src/components/SettingsPanel.tsx:413:21
    413         allSettings.length,
                            ~~~~~~
    Did you forget to use 'await'?

src/components/SettingsPanel.tsx:418:19 - error TS2339: Property 'forEach' does not exist on type 'Promise<SettingsData[]>'.

418       allSettings.forEach((setting) => {
                      ~~~~~~~

  src/components/SettingsPanel.tsx:418:19
    418       allSettings.forEach((setting) => {
                          ~~~~~~~
    Did you forget to use 'await'?

src/components/SettingsPanel.tsx:418:28 - error TS7006: Parameter 'setting' implicitly has an 'any' type.

418       allSettings.forEach((setting) => {
                               ~~~~~~~

src/components/SettingsPanel.tsx:423:17 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ enabled: boolean; language: string; confidence: number; autoApply: boolean; }'.

423                 newNlpSettings[setting.key] = setting.value;
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:429:17 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ maxDelayThreshold: number; minConnectionTime: number; maxOverbooking: number; priorityRebookingTime: number; hotacTriggerDelay: number; }'.

429                 newRuleConfig.operationalRules[setting.key] = setting.value;
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:437:17 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ maxAircraftSwaps: number; crewDutyTimeLimits: boolean; maintenanceSlotProtection: boolean; slotCoordinationRequired: boolean; curfewCompliance: boolean; }'.

437                 newRuleConfig.recoveryConstraints[setting.key] = setting.value;
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:445:17 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ autoApproveThreshold: number; requireManagerApproval: boolean; enablePredictiveActions: boolean; autoNotifyPassengers: boolean; autoBookHotac: boolean; }'.

445                 newRuleConfig.automationSettings[setting.key] = setting.value;
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:455:17 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ costWeight: number; timeWeight: number; passengerImpactWeight: number; operationalComplexityWeight: number; reputationWeight: number; customParameters: never[]; }'.

455                 newRecoveryConfig.recoveryOptionsRanking[setting.key] =
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:466:17 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ maintenanceStatus: number; fuelEfficiency: number; routeSuitability: number; passengerCapacity: number; availabilityWindow: number; customParameters: never[]; }'.

466                 newRecoveryConfig.aircraftSelectionCriteria[setting.key] =
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:477:17 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ dutyTimeRemaining: number; qualifications: number; baseLocation: number; restRequirements: number; languageSkills: number; customParameters: never[]; }'.

477                 newRecoveryConfig.crewAssignmentCriteria[setting.key] =
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:488:17 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ loyaltyTier: number; ticketClass: number; specialNeeds: number; groupSize: number; connectionRisk: number; }'.

488                 newPriorityConfig.passengerPrioritization[setting.key] =
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:499:17 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ airlinePreference: number; onTimePerformance: number; aircraftType: number; departureTime: number; connectionBuffer: number; }'.

499                 newPriorityConfig.flightPrioritization[setting.key] =
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:506:17 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ baseScore: number; priorityBonus: number; airlineBonus: number; specialReqBonus: number; loyaltyBonus: number; groupBonus: number; }'.

506                 newPriorityConfig.flightScoring[setting.key] = setting.value;
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:514:17 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ vipWeight: number; loyaltyWeight: number; specialNeedsWeight: number; revenueWeight: number; }'.

514                 newPriorityConfig.passengerScoring[setting.key] = setting.value;
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:520:17 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ email: boolean; sms: boolean; push: boolean; desktop: boolean; recoveryAlerts: boolean; passengerUpdates: boolean; systemAlerts: boolean; }'.

520                 newNotificationSettings[setting.key] = setting.value;
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:567:31 - error TS7006: Parameter 'screenId' implicitly has an 'any' type.

567   const handleScreenToggle = (screenId) => {
                                  ~~~~~~~~

src/components/SettingsPanel.tsx:568:49 - error TS7006: Parameter 'screen' implicitly has an 'any' type.

568     const updatedSettings = screenSettings.map((screen) => {
                                                    ~~~~~~

src/components/SettingsPanel.tsx:577:28 - error TS7006: Parameter 'setting' implicitly has an 'any' type.

577   const handleNlpToggle = (setting) => {
                               ~~~~~~~

src/components/SettingsPanel.tsx:578:23 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ enabled: boolean; language: string; confidence: number; autoApply: boolean; }'.

578     const newValue = !nlpSettings[setting];
                          ~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:580:47 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ enabled: boolean; language: string; confidence: number; autoApply: boolean; }'.

580       `Toggling NLP setting ${setting} from ${nlpSettings[setting]} to ${newValue}`,
                                                  ~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:604:28 - error TS7006: Parameter 'setting' implicitly has an 'any' type.

604   const handleNlpChange = (setting, value) => {
                               ~~~~~~~

src/components/SettingsPanel.tsx:604:37 - error TS7006: Parameter 'value' implicitly has an 'any' type.

604   const handleNlpChange = (setting, value) => {
                                        ~~~~~

src/components/SettingsPanel.tsx:628:37 - error TS7006: Parameter 'setting' implicitly has an 'any' type.

628   const handleNotificationToggle = (setting) => {
                                        ~~~~~~~

src/components/SettingsPanel.tsx:629:23 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ email: boolean; sms: boolean; push: boolean; desktop: boolean; recoveryAlerts: boolean; passengerUpdates: boolean; systemAlerts: boolean; }'.

629     const newValue = !notificationSettings[setting];
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:631:56 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ email: boolean; sms: boolean; push: boolean; desktop: boolean; recoveryAlerts: boolean; passengerUpdates: boolean; systemAlerts: boolean; }'.

631       `Toggling notification setting ${setting} from ${notificationSettings[setting]} to ${newValue}`,
                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:658:35 - error TS7006: Parameter 'category' implicitly has an 'any' type.

658   const handleRuleConfigChange = (category, parameter, value) => {
                                      ~~~~~~~~

src/components/SettingsPanel.tsx:658:45 - error TS7006: Parameter 'parameter' implicitly has an 'any' type.

658   const handleRuleConfigChange = (category, parameter, value) => {
                                                ~~~~~~~~~

src/components/SettingsPanel.tsx:658:56 - error TS7006: Parameter 'value' implicitly has an 'any' type.

658   const handleRuleConfigChange = (category, parameter, value) => {
                                                           ~~~~~

src/components/SettingsPanel.tsx:667:12 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ operationalRules: { maxDelayThreshold: number; minConnectionTime: number; maxOverbooking: number; priorityRebookingTime: number; hotacTriggerDelay: number; }; recoveryConstraints: { maxAircraftSwaps: number; crewDutyTimeLimits: boolean; maintenanceSlotProtection: boolean; slotCoordinationRequired: boolean; curfewC...'.

667         ...prev[category],
               ~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:693:29 - error TS7006: Parameter 'category' implicitly has an 'any' type.

693   const handleRuleToggle = (category, parameter) => {
                                ~~~~~~~~

src/components/SettingsPanel.tsx:693:39 - error TS7006: Parameter 'parameter' implicitly has an 'any' type.

693   const handleRuleToggle = (category, parameter) => {
                                          ~~~~~~~~~

src/components/SettingsPanel.tsx:694:22 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ operationalRules: { maxDelayThreshold: number; minConnectionTime: number; maxOverbooking: number; priorityRebookingTime: number; hotacTriggerDelay: number; }; recoveryConstraints: { maxAircraftSwaps: number; crewDutyTimeLimits: boolean; maintenanceSlotProtection: boolean; slotCoordinationRequired: boolean; curfewC...'.

694     const oldValue = ruleConfiguration[category][parameter];
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:703:12 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ operationalRules: { maxDelayThreshold: number; minConnectionTime: number; maxOverbooking: number; priorityRebookingTime: number; hotacTriggerDelay: number; }; recoveryConstraints: { maxAircraftSwaps: number; crewDutyTimeLimits: boolean; maintenanceSlotProtection: boolean; slotCoordinationRequired: boolean; curfewC...'.

703         ...prev[category],
               ~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:754:27 - error TS7006: Parameter 'rule' implicitly has an 'any' type.

754   const handleEditRule = (rule) => {
                              ~~~~

src/components/SettingsPanel.tsx:764:35 - error TS2339: Property 'id' does not exist on type 'never'.

764           rule.id === editingRule.id ? { ...rule, ...newRule } : rule,
                                      ~~

src/components/SettingsPanel.tsx:782:29 - error TS7006: Parameter 'ruleId' implicitly has an 'any' type.

782   const handleDeleteRule = (ruleId) => {
                                ~~~~~~

src/components/SettingsPanel.tsx:786:35 - error TS7006: Parameter 'ruleId' implicitly has an 'any' type.

786   const handleToggleRuleStatus = (ruleId) => {
                                      ~~~~~~

src/components/SettingsPanel.tsx:799:31 - error TS7006: Parameter 'ruleId' implicitly has an 'any' type.

799   const handleMovePriority = (ruleId, direction) => {
                                  ~~~~~~

src/components/SettingsPanel.tsx:799:39 - error TS7006: Parameter 'direction' implicitly has an 'any' type.

799   const handleMovePriority = (ruleId, direction) => {
                                          ~~~~~~~~~

src/components/SettingsPanel.tsx:832:39 - error TS7006: Parameter 'section' implicitly has an 'any' type.

832   const handleRecoveryConfigChange = (section, parameter, value) => {
                                          ~~~~~~~

src/components/SettingsPanel.tsx:832:48 - error TS7006: Parameter 'parameter' implicitly has an 'any' type.

832   const handleRecoveryConfigChange = (section, parameter, value) => {
                                                   ~~~~~~~~~

src/components/SettingsPanel.tsx:832:59 - error TS7006: Parameter 'value' implicitly has an 'any' type.

832   const handleRecoveryConfigChange = (section, parameter, value) => {
                                                              ~~~~~

src/components/SettingsPanel.tsx:841:12 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ recoveryOptionsRanking: { costWeight: number; timeWeight: number; passengerImpactWeight: number; operationalComplexityWeight: number; reputationWeight: number; customParameters: never[]; }; aircraftSelectionCriteria: { ...; }; crewAssignmentCriteria: { ...; }; }'.

841         ...prev[section],
               ~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:868:39 - error TS7006: Parameter 'category' implicitly has an 'any' type.

868   const handlePriorityConfigChange = (category, parameter, value) => {
                                          ~~~~~~~~

src/components/SettingsPanel.tsx:868:49 - error TS7006: Parameter 'parameter' implicitly has an 'any' type.

868   const handlePriorityConfigChange = (category, parameter, value) => {
                                                    ~~~~~~~~~

src/components/SettingsPanel.tsx:868:60 - error TS7006: Parameter 'value' implicitly has an 'any' type.

868   const handlePriorityConfigChange = (category, parameter, value) => {
                                                               ~~~~~

src/components/SettingsPanel.tsx:877:12 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ passengerPrioritization: { loyaltyTier: number; ticketClass: number; specialNeeds: number; groupSize: number; connectionRisk: number; }; flightPrioritization: { airlinePreference: number; onTimePerformance: number; aircraftType: number; departureTime: number; connectionBuffer: number; }; flightScoring: { ...; }; p...'.

877         ...prev[category],
               ~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:915:14 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ recoveryOptionsRanking: { costWeight: number; timeWeight: number; passengerImpactWeight: number; operationalComplexityWeight: number; reputationWeight: number; customParameters: never[]; }; aircraftSelectionCriteria: { ...; }; crewAssignmentCriteria: { ...; }; }'.
  No index signature with a parameter of type 'string' was found on type '{ recoveryOptionsRanking: { costWeight: number; timeWeight: number; passengerImpactWeight: number; operationalComplexityWeight: number; reputationWeight: number; customParameters: never[]; }; aircraftSelectionCriteria: { ...; }; crewAssignmentCriteria: { ...; }; }'.

915           ...prev[newParameter.category],
                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:917:16 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ recoveryOptionsRanking: { costWeight: number; timeWeight: number; passengerImpactWeight: number; operationalComplexityWeight: number; reputationWeight: number; customParameters: never[]; }; aircraftSelectionCriteria: { ...; }; crewAssignmentCriteria: { ...; }; }'.
  No index signature with a parameter of type 'string' was found on type '{ recoveryOptionsRanking: { costWeight: number; timeWeight: number; passengerImpactWeight: number; operationalComplexityWeight: number; reputationWeight: number; customParameters: never[]; }; aircraftSelectionCriteria: { ...; }; crewAssignmentCriteria: { ...; }; }'.

917             ...prev[newParameter.category].customParameters,
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:923:27 - error TS2345: Argument of type '(prev: never[]) => { isCustom: boolean; name: string; category: string; weight: number; description: string; id: string; }[]' is not assignable to parameter of type 'SetStateAction<never[]>'.
  Type '(prev: never[]) => { isCustom: boolean; name: string; category: string; weight: number; description: string; id: string; }[]' is not assignable to type '(prevState: never[]) => never[]'.
    Type '{ isCustom: boolean; name: string; category: string; weight: number; description: string; id: string; }[]' is not assignable to type 'never[]'.
      Type '{ isCustom: boolean; name: string; category: string; weight: number; description: string; id: string; }' is not assignable to type 'never'.

923       setCustomParameters((prev) => [...prev, parameter]);
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:933:40 - error TS7006: Parameter 'id' implicitly has an 'any' type.

933   const handleRemoveCustomParameter = (id, category) => {
                                           ~~

src/components/SettingsPanel.tsx:933:44 - error TS7006: Parameter 'category' implicitly has an 'any' type.

933   const handleRemoveCustomParameter = (id, category) => {
                                               ~~~~~~~~

src/components/SettingsPanel.tsx:937:12 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ recoveryOptionsRanking: { costWeight: number; timeWeight: number; passengerImpactWeight: number; operationalComplexityWeight: number; reputationWeight: number; customParameters: never[]; }; aircraftSelectionCriteria: { ...; }; crewAssignmentCriteria: { ...; }; }'.

937         ...prev[category],
               ~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:938:27 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ recoveryOptionsRanking: { costWeight: number; timeWeight: number; passengerImpactWeight: number; operationalComplexityWeight: number; reputationWeight: number; customParameters: never[]; }; aircraftSelectionCriteria: { ...; }; crewAssignmentCriteria: { ...; }; }'.

938         customParameters: prev[category].customParameters.filter(
                              ~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:939:12 - error TS7006: Parameter 'p' implicitly has an 'any' type.

939           (p) => p.id !== id,
               ~

src/components/SettingsPanel.tsx:943:56 - error TS2339: Property 'id' does not exist on type 'never'.

943     setCustomParameters((prev) => prev.filter((p) => p.id !== id));
                                                           ~~

src/components/SettingsPanel.tsx:956:23 - error TS2339: Property 'length' does not exist on type 'Promise<SettingsData[]>'.

956           allSettings.length,
                          ~~~~~~

  src/components/SettingsPanel.tsx:956:23
    956           allSettings.length,
                              ~~~~~~
    Did you forget to use 'await'?

src/components/SettingsPanel.tsx:1131:33 - error TS7006: Parameter 'category' implicitly has an 'any' type.

1131   const calculateTotalWeight = (category, section = null) => {
                                     ~~~~~~~~

src/components/SettingsPanel.tsx:1147:16 - error TS2339: Property 'customParameters' does not exist on type 'never'.

1147           data.customParameters?.reduce((sum, p) => sum + p.weight, 0) || 0;
                    ~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:1147:42 - error TS7006: Parameter 'sum' implicitly has an 'any' type.

1147           data.customParameters?.reduce((sum, p) => sum + p.weight, 0) || 0;
                                              ~~~

src/components/SettingsPanel.tsx:1147:47 - error TS7006: Parameter 'p' implicitly has an 'any' type.

1147           data.customParameters?.reduce((sum, p) => sum + p.weight, 0) || 0;
                                                   ~

src/components/SettingsPanel.tsx:1151:40 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ passengerPrioritization: { loyaltyTier: number; ticketClass: number; specialNeeds: number; groupSize: number; connectionRisk: number; }; flightPrioritization: { airlinePreference: number; onTimePerformance: number; aircraftType: number; departureTime: number; connectionBuffer: number; }; flightScoring: { ...; }; p...'.

1151       const baseParams = Object.values(passengerPriorityConfig[category] || {});
                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:1152:7 - error TS2322: Type 'unknown' is not assignable to type 'number'.

1152       baseWeights = baseParams.reduce((sum, val) => sum + val, 0);
           ~~~~~~~~~~~

src/components/SettingsPanel.tsx:1152:53 - error TS18046: 'sum' is of type 'unknown'.

1152       baseWeights = baseParams.reduce((sum, val) => sum + val, 0);
                                                         ~~~

src/components/SettingsPanel.tsx:1152:59 - error TS18046: 'val' is of type 'unknown'.

1152       baseWeights = baseParams.reduce((sum, val) => sum + val, 0);
                                                               ~~~

src/components/SettingsPanel.tsx:1154:26 - error TS2339: Property 'category' does not exist on type 'never'.

1154         .filter((p) => p.category === category)
                              ~~~~~~~~

src/components/SettingsPanel.tsx:1155:37 - error TS2339: Property 'weight' does not exist on type 'never'.

1155         .reduce((sum, p) => sum + p.weight, 0);
                                         ~~~~~~

src/components/SettingsPanel.tsx:1161:27 - error TS7006: Parameter 'weight' implicitly has an 'any' type.

1161   const getWeightColor = (weight) => {
                               ~~~~~~

src/components/SettingsPanel.tsx:1168:29 - error TS7006: Parameter 'param' implicitly has an 'any' type.

1168   const getParameterIcon = (param) => {
                                 ~~~~~

src/components/SettingsPanel.tsx:1213:12 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ costWeight: ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>; ... 33 more ...; revenueWeight: ForwardRefExoticComponent<...>; }'.

1213     return icons[param] || Settings;
                ~~~~~~~~~~~~

src/components/SettingsPanel.tsx:1216:29 - error TS7006: Parameter 'type' implicitly has an 'any' type.

1216   const getRuleTypeColor = (type) => {
                                 ~~~~

src/components/SettingsPanel.tsx:1222:31 - error TS7006: Parameter 'status' implicitly has an 'any' type.

1222   const getRuleStatusColor = (status) => {
                                   ~~~~~~

src/components/SettingsPanel.tsx:1228:32 - error TS7006: Parameter 'category' implicitly has an 'any' type.

1228   const getRuleCategoryIcon = (category) => {
                                    ~~~~~~~~

src/components/SettingsPanel.tsx:1239:12 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ Weather: ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>; ... 6 more ...; Security: ForwardRefExoticComponent<...>; }'.

1239     return icons[category] || FileText;
                ~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:1353:20 - error TS7006: Parameter 'screen' implicitly has an 'any' type.

1353                   (screen) => screen.category === categoryKey,
                        ~~~~~~

src/components/SettingsPanel.tsx:1366:45 - error TS7006: Parameter 'screen' implicitly has an 'any' type.

1366                       {categoryScreens.map((screen) => {
                                                 ~~~~~~

src/components/SettingsPanel.tsx:1464:30 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ loyaltyTier: string; ticketClass: string; specialNeeds: string; groupSize: string; connectionRisk: string; }'.
  No index signature with a parameter of type 'string' was found on type '{ loyaltyTier: string; ticketClass: string; specialNeeds: string; groupSize: string; connectionRisk: string; }'.

1464                             {labels[key]}
                                  ~~~~~~~~~~~

src/components/SettingsPanel.tsx:1547:30 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ airlinePreference: string; onTimePerformance: string; aircraftType: string; departureTime: string; connectionBuffer: string; }'.
  No index signature with a parameter of type 'string' was found on type '{ airlinePreference: string; onTimePerformance: string; aircraftType: string; departureTime: string; connectionBuffer: string; }'.

1547                             {labels[key]}
                                  ~~~~~~~~~~~

src/components/SettingsPanel.tsx:1626:32 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ baseScore: string; priorityBonus: string; airlineBonus: string; specialReqBonus: string; loyaltyBonus: string; groupBonus: string; }'.
  No index signature with a parameter of type 'string' was found on type '{ baseScore: string; priorityBonus: string; airlineBonus: string; specialReqBonus: string; loyaltyBonus: string; groupBonus: string; }'.

1626                               {labels[key]}
                                    ~~~~~~~~~~~

src/components/SettingsPanel.tsx:1701:32 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ vipWeight: string; loyaltyWeight: string; specialNeedsWeight: string; revenueWeight: string; }'.
  No index signature with a parameter of type 'string' was found on type '{ vipWeight: string; loyaltyWeight: string; specialNeedsWeight: string; revenueWeight: string; }'.

1701                               {labels[key]}
                                    ~~~~~~~~~~~

src/components/SettingsPanel.tsx:2623:32 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ costWeight: string; timeWeight: string; passengerImpactWeight: string; operationalComplexityWeight: string; reputationWeight: string; }'.
  No index signature with a parameter of type 'string' was found on type '{ costWeight: string; timeWeight: string; passengerImpactWeight: string; operationalComplexityWeight: string; reputationWeight: string; }'.

2623                               {labels[key]}
                                    ~~~~~~~~~~~

src/components/SettingsPanel.tsx:2633:35 - error TS2322: Type 'number | never[]' is not assignable to type 'number'.
  Type 'never[]' is not assignable to type 'number'.

2633                           value={[value]}
                                       ~~~~~

src/components/SettingsPanel.tsx:2654:34 - error TS2339: Property 'id' does not exist on type 'never'.

2654                       key={param.id}
                                      ~~

src/components/SettingsPanel.tsx:2661:36 - error TS2339: Property 'name' does not exist on type 'never'.

2661                             {param.name}
                                        ~~~~

src/components/SettingsPanel.tsx:2669:64 - error TS2339: Property 'weight' does not exist on type 'never'.

2669                             className={`${getWeightColor(param.weight)} bg-transparent border`}
                                                                    ~~~~~~

src/components/SettingsPanel.tsx:2671:36 - error TS2339: Property 'weight' does not exist on type 'never'.

2671                             {param.weight}%
                                        ~~~~~~

src/components/SettingsPanel.tsx:2678:39 - error TS2339: Property 'id' does not exist on type 'never'.

2678                                 param.id,
                                           ~~

src/components/SettingsPanel.tsx:2689:32 - error TS2339: Property 'description' does not exist on type 'never'.

2689                         {param.description}
                                    ~~~~~~~~~~~

src/components/SettingsPanel.tsx:2702:52 - error TS2345: Argument of type '"recoveryOptionsRanking"' is not assignable to parameter of type 'null | undefined'.

2702                         calculateTotalWeight(null, "recoveryOptionsRanking") ===
                                                        ~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:2708:51 - error TS2345: Argument of type '"recoveryOptionsRanking"' is not assignable to parameter of type 'null | undefined'.

2708                       {calculateTotalWeight(null, "recoveryOptionsRanking")}%
                                                       ~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:2746:32 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ maintenanceStatus: string; fuelEfficiency: string; routeSuitability: string; passengerCapacity: string; availabilityWindow: string; }'.
  No index signature with a parameter of type 'string' was found on type '{ maintenanceStatus: string; fuelEfficiency: string; routeSuitability: string; passengerCapacity: string; availabilityWindow: string; }'.

2746                               {labels[key]}
                                    ~~~~~~~~~~~

src/components/SettingsPanel.tsx:2756:35 - error TS2322: Type 'number | never[]' is not assignable to type 'number'.
  Type 'never[]' is not assignable to type 'number'.

2756                           value={[value]}
                                       ~~~~~

src/components/SettingsPanel.tsx:2777:34 - error TS2339: Property 'id' does not exist on type 'never'.

2777                       key={param.id}
                                      ~~

src/components/SettingsPanel.tsx:2784:36 - error TS2339: Property 'name' does not exist on type 'never'.

2784                             {param.name}
                                        ~~~~

src/components/SettingsPanel.tsx:2792:64 - error TS2339: Property 'weight' does not exist on type 'never'.

2792                             className={`${getWeightColor(param.weight)} bg-transparent border`}
                                                                    ~~~~~~

src/components/SettingsPanel.tsx:2794:36 - error TS2339: Property 'weight' does not exist on type 'never'.

2794                             {param.weight}%
                                        ~~~~~~

src/components/SettingsPanel.tsx:2801:39 - error TS2339: Property 'id' does not exist on type 'never'.

2801                                 param.id,
                                           ~~

src/components/SettingsPanel.tsx:2812:32 - error TS2339: Property 'description' does not exist on type 'never'.

2812                         {param.description}
                                    ~~~~~~~~~~~

src/components/SettingsPanel.tsx:2827:27 - error TS2345: Argument of type '"aircraftSelectionCriteria"' is not assignable to parameter of type 'null | undefined'.

2827                           "aircraftSelectionCriteria",
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:2833:51 - error TS2345: Argument of type '"aircraftSelectionCriteria"' is not assignable to parameter of type 'null | undefined'.

2833                       {calculateTotalWeight(null, "aircraftSelectionCriteria")}%
                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:2871:32 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ dutyTimeRemaining: string; qualifications: string; baseLocation: string; restRequirements: string; languageSkills: string; }'.
  No index signature with a parameter of type 'string' was found on type '{ dutyTimeRemaining: string; qualifications: string; baseLocation: string; restRequirements: string; languageSkills: string; }'.

2871                               {labels[key]}
                                    ~~~~~~~~~~~

src/components/SettingsPanel.tsx:2881:35 - error TS2322: Type 'number | never[]' is not assignable to type 'number'.
  Type 'never[]' is not assignable to type 'number'.

2881                           value={[value]}
                                       ~~~~~

src/components/SettingsPanel.tsx:2902:34 - error TS2339: Property 'id' does not exist on type 'never'.

2902                       key={param.id}
                                      ~~

src/components/SettingsPanel.tsx:2909:36 - error TS2339: Property 'name' does not exist on type 'never'.

2909                             {param.name}
                                        ~~~~

src/components/SettingsPanel.tsx:2917:64 - error TS2339: Property 'weight' does not exist on type 'never'.

2917                             className={`${getWeightColor(param.weight)} bg-transparent border`}
                                                                    ~~~~~~

src/components/SettingsPanel.tsx:2919:36 - error TS2339: Property 'weight' does not exist on type 'never'.

2919                             {param.weight}%
                                        ~~~~~~

src/components/SettingsPanel.tsx:2926:39 - error TS2339: Property 'id' does not exist on type 'never'.

2926                                 param.id,
                                           ~~

src/components/SettingsPanel.tsx:2937:32 - error TS2339: Property 'description' does not exist on type 'never'.

2937                         {param.description}
                                    ~~~~~~~~~~~

src/components/SettingsPanel.tsx:2950:52 - error TS2345: Argument of type '"crewAssignmentCriteria"' is not assignable to parameter of type 'null | undefined'.

2950                         calculateTotalWeight(null, "crewAssignmentCriteria") ===
                                                        ~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:2956:51 - error TS2345: Argument of type '"crewAssignmentCriteria"' is not assignable to parameter of type 'null | undefined'.

2956                       {calculateTotalWeight(null, "crewAssignmentCriteria")}%
                                                       ~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:3813:32 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ email: boolean; sms: boolean; push: boolean; desktop: boolean; recoveryAlerts: boolean; passengerUpdates: boolean; systemAlerts: boolean; }'.
  No index signature with a parameter of type 'string' was found on type '{ email: boolean; sms: boolean; push: boolean; desktop: boolean; recoveryAlerts: boolean; passengerUpdates: boolean; systemAlerts: boolean; }'.

3813                       checked={notificationSettings[key]}
                                    ~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/SettingsPanel.tsx:3836:32 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ email: boolean; sms: boolean; push: boolean; desktop: boolean; recoveryAlerts: boolean; passengerUpdates: boolean; systemAlerts: boolean; }'.
  No index signature with a parameter of type 'string' was found on type '{ email: boolean; sms: boolean; push: boolean; desktop: boolean; recoveryAlerts: boolean; passengerUpdates: boolean; systemAlerts: boolean; }'.

3836                       checked={notificationSettings[key]}
                                    ~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/VoucherManagement.tsx:3:8 - error TS6133: 'React' is declared but its value is never read.

3 import React, { useState } from 'react'
         ~~~~~

src/components/VoucherManagement.tsx:17:3 - error TS6133: 'Clock' is declared but its value is never read.

17   Clock,
     ~~~~~

src/components/VoucherManagement.tsx:18:3 - error TS6133: 'Users' is declared but its value is never read.

18   Users,
     ~~~~~

src/components/VoucherManagement.tsx:20:3 - error TS6133: 'CheckCircle' is declared but its value is never read.

20   CheckCircle,
     ~~~~~~~~~~~

src/components/VoucherManagement.tsx:105:37 - error TS7031: Binding element 'selectedPassengers' implicitly has an 'any' type.

105 export function VoucherManagement({ selectedPassengers, passengers }) {
                                        ~~~~~~~~~~~~~~~~~~

src/components/VoucherManagement.tsx:105:57 - error TS7031: Binding element 'passengers' implicitly has an 'any' type.

105 export function VoucherManagement({ selectedPassengers, passengers }) {
                                                            ~~~~~~~~~~

src/components/VoucherManagement.tsx:113:9 - error TS6133: 'selectedPassengerData' is declared but its value is never read.

113   const selectedPassengerData = passengers.filter(p => selectedPassengers.includes(p.id))
            ~~~~~~~~~~~~~~~~~~~~~

src/components/VoucherManagement.tsx:113:51 - error TS7006: Parameter 'p' implicitly has an 'any' type.

113   const selectedPassengerData = passengers.filter(p => selectedPassengers.includes(p.id))
                                                      ~

src/components/VoucherManagement.tsx:131:34 - error TS18048: 'selectedVoucherTypeData' is possibly 'undefined'.

131     alert(`Issuing ${quantity} ${selectedVoucherTypeData.name}(s) worth $${amount} each to ${recipientCount} passenger(s). Total cost: $${totalCost.toFixed(2)}`)
                                     ~~~~~~~~~~~~~~~~~~~~~~~

src/components/VoucherManagement.tsx:139:34 - error TS7006: Parameter 'status' implicitly has an 'any' type.

139   const getVoucherStatusColor = (status) => {
                                     ~~~~~~

src/components/VoucherManagement.tsx:203:36 - error TS18048: 'typeData' is possibly 'undefined'.

203                   setVoucherAmount(typeData.defaultAmount)
                                       ~~~~~~~~

src/components/VoucherManagement.tsx:237:23 - error TS2322: Type 'Dispatch<SetStateAction<boolean>>' is not assignable to type '(checked: CheckedState) => void'.
  Types of parameters 'value' and 'checked' are incompatible.
    Type 'CheckedState' is not assignable to type 'SetStateAction<boolean>'.
      Type '"indeterminate"' is not assignable to type 'SetStateAction<boolean>'.

237                       onCheckedChange={setUseCustomAmount}
                          ~~~~~~~~~~~~~~~

  node_modules/@radix-ui/react-checkbox/dist/index.d.mts:33:5
    33     onCheckedChange?(checked: CheckedState): void;
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    The expected type comes from property 'onCheckedChange' which is declared here on type 'IntrinsicAttributes & Omit<CheckboxProps & RefAttributes<HTMLButtonElement>, "ref"> & RefAttributes<...>'

src/components/WorldMap.tsx:1:8 - error TS6133: 'React' is declared but its value is never read.

1 import React, { useState, useEffect } from "react";
         ~~~~~

src/components/WorldMap.tsx:3:1 - error TS6133: 'Badge' is declared but its value is never read.

3 import { Badge } from "./ui/badge";
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/WorldMap.tsx:5:1 - error TS6192: All imports in import declaration are unused.

5 import { Tabs, TabsContent, TabsList, TabsTrigger } from "./ui/tabs";
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/WorldMap.tsx:6:1 - error TS6192: All imports in import declaration are unused.

6 import { Alert, AlertDescription } from "./ui/alert";
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/WorldMap.tsx:17:3 - error TS6133: 'MapPin' is declared but its value is never read.

17   MapPin,
     ~~~~~~

src/components/WorldMap.tsx:19:3 - error TS6133: 'CheckCircle' is declared but its value is never read.

19   CheckCircle,
     ~~~~~~~~~~~

src/components/WorldMap.tsx:20:3 - error TS6133: 'Clock' is declared but its value is never read.

20   Clock,
     ~~~~~

src/components/WorldMap.tsx:21:3 - error TS6133: 'Zap' is declared but its value is never read.

21   Zap,
     ~~~

src/components/WorldMap.tsx:23:3 - error TS6133: 'Radar' is declared but its value is never read.

23   Radar,
     ~~~~~

src/components/WorldMap.tsx:24:3 - error TS6133: 'Layers' is declared but its value is never read.

24   Layers,
     ~~~~~~

src/components/WorldMap.tsx:25:3 - error TS6133: 'Filter' is declared but its value is never read.

25   Filter,
     ~~~~~~

src/components/WorldMap.tsx:27:3 - error TS6133: 'Info' is declared but its value is never read.

27   Info,
     ~~~~

src/components/WorldMap.tsx:36:10 - error TS6133: 'lastUpdate' is declared but its value is never read.

36   const [lastUpdate, setLastUpdate] = useState(new Date());
            ~~~~~~~~~~

src/components/WorldMap.tsx:49:9 - error TS7034: Variable 'intervalId' implicitly has type 'any' in some locations where its type cannot be determined.

49     let intervalId;
           ~~~~~~~~~~

src/components/WorldMap.tsx:69:32 - error TS7005: Variable 'intervalId' implicitly has an 'any' type.

69     return () => clearInterval(intervalId);
                                  ~~~~~~~~~~

src/components/WorldMap.tsx:73:23 - error TS7006: Parameter 'lat' implicitly has an 'any' type.

73   const latLngToXY = (lat, lng) => {
                         ~~~

src/components/WorldMap.tsx:73:28 - error TS7006: Parameter 'lng' implicitly has an 'any' type.

73   const latLngToXY = (lat, lng) => {
                              ~~~

src/components/WorldMap.tsx:80:27 - error TS7006: Parameter 'status' implicitly has an 'any' type.

80   const getStatusColor = (status) => {
                             ~~~~~~

src/components/WorldMap.tsx:478:46 - error TS6133: 'index' is declared but its value is never read.

478                     {destinations.map((dest, index) => {
                                                 ~~~~~

src/components/figma/ImageWithFallback.tsx:1:8 - error TS6133: 'React' is declared but its value is never read.

1 import React, { useState } from 'react'
         ~~~~~

src/components/index.ts:21:10 - error TS2305: Module '"./KPIWidgets"' has no exported member 'default'.

21 export { default as KPIWidgets } from './KPIWidgets'
            ~~~~~~~

src/components/index.ts:22:10 - error TS2305: Module '"./FlightTrackingGantt"' has no exported member 'default'.

22 export { default as FlightTrackingGantt } from './FlightTrackingGantt'
            ~~~~~~~

src/components/index.ts:23:10 - error TS2305: Module '"./DisruptionInput"' has no exported member 'default'.

23 export { default as DisruptionInput } from './DisruptionInput'
            ~~~~~~~

src/components/index.ts:24:10 - error TS2305: Module '"./RecoveryOptionsGenerator"' has no exported member 'default'.

24 export { default as RecoveryOptionsGenerator } from './RecoveryOptionsGenerator'
            ~~~~~~~

src/components/index.ts:25:10 - error TS2305: Module '"./ComparisonMatrix"' has no exported member 'default'.

25 export { default as ComparisonMatrix } from './ComparisonMatrix'
            ~~~~~~~

src/components/index.ts:26:10 - error TS2305: Module '"./DetailedRecoveryPlan"' has no exported member 'default'.

26 export { default as DetailedRecoveryPlan } from './DetailedRecoveryPlan'
            ~~~~~~~

src/components/index.ts:27:10 - error TS2305: Module '"./DisruptionPredictionDashboard"' has no exported member 'default'.

27 export { default as DisruptionPredictionDashboard } from './DisruptionPredictionDashboard'
            ~~~~~~~

src/components/index.ts:28:10 - error TS2305: Module '"./FlightDisruptionList"' has no exported member 'default'.

28 export { default as FlightDisruptionList } from './FlightDisruptionList'
            ~~~~~~~

src/components/index.ts:29:10 - error TS2305: Module '"./PredictionAnalytics"' has no exported member 'default'.

29 export { default as PredictionAnalytics } from './PredictionAnalytics'
            ~~~~~~~

src/components/index.ts:30:10 - error TS2305: Module '"./RiskAssessment"' has no exported member 'default'.

30 export { default as RiskAssessment } from './RiskAssessment'
            ~~~~~~~

src/components/index.ts:31:10 - error TS2305: Module '"./PendingSolutions"' has no exported member 'default'.

31 export { default as PendingSolutions } from './PendingSolutions'
            ~~~~~~~

src/components/index.ts:32:10 - error TS2305: Module '"./PastRecoveryLogs"' has no exported member 'default'.

32 export { default as PastRecoveryLogs } from './PastRecoveryLogs'
            ~~~~~~~

src/components/index.ts:32:21 - error TS2300: Duplicate identifier 'PastRecoveryLogs'.

32 export { default as PastRecoveryLogs } from './PastRecoveryLogs'
                       ~~~~~~~~~~~~~~~~

src/components/index.ts:33:10 - error TS2305: Module '"./AircraftMaintenance"' has no exported member 'default'.

33 export { default as AircraftMaintenance } from './AircraftMaintenance'
            ~~~~~~~

src/components/index.ts:34:10 - error TS2305: Module '"./PassengerLookup"' has no exported member 'default'.

34 export { default as PassengerLookup } from './PassengerLookup'
            ~~~~~~~

src/components/index.ts:35:10 - error TS2305: Module '"./PassengerRebooking"' has no exported member 'default'.

35 export { default as PassengerRebooking } from './PassengerRebooking'
            ~~~~~~~

src/components/index.ts:36:10 - error TS2305: Module '"./FlightRebooking"' has no exported member 'default'.

36 export { default as FlightRebooking } from './FlightRebooking'
            ~~~~~~~

src/components/index.ts:37:10 - error TS2305: Module '"./HotelBooking"' has no exported member 'default'.

37 export { default as HotelBooking } from './HotelBooking'
            ~~~~~~~

src/components/index.ts:38:10 - error TS2305: Module '"./VoucherManagement"' has no exported member 'default'.

38 export { default as VoucherManagement } from './VoucherManagement'
            ~~~~~~~

src/components/index.ts:39:10 - error TS2305: Module '"./HOTACManagement"' has no exported member 'default'.

39 export { default as HOTACManagement } from './HOTACManagement'
            ~~~~~~~

src/components/index.ts:40:10 - error TS2305: Module '"./FuelOptimization"' has no exported member 'default'.

40 export { default as FuelOptimization } from './FuelOptimization'
            ~~~~~~~

src/components/index.ts:41:10 - error TS2305: Module '"./AuditReporting"' has no exported member 'default'.

41 export { default as AuditReporting } from './AuditReporting'
            ~~~~~~~

src/components/index.ts:42:10 - error TS2305: Module '"./SettingsPanel"' has no exported member 'default'.

42 export { default as SettingsPanel } from './SettingsPanel'
            ~~~~~~~

src/components/index.ts:43:10 - error TS2305: Module '"./WorldMap"' has no exported member 'default'.

43 export { default as WorldMap } from './WorldMap'
            ~~~~~~~

src/components/index.ts:44:10 - error TS2305: Module '"./NetworkHeatMap"' has no exported member 'default'.

44 export { default as NetworkHeatMap } from './NetworkHeatMap'
            ~~~~~~~

src/components/index.ts:45:10 - error TS2305: Module '"./CrewTrackingGantt"' has no exported member 'default'.

45 export { default as CrewTrackingGantt } from './CrewTrackingGantt'
            ~~~~~~~

src/components/index.ts:46:10 - error TS2305: Module '"./RulesAssistantChatbot"' has no exported member 'default'.

46 export { default as RulesAssistantChatbot } from './RulesAssistantChatbot'
            ~~~~~~~

src/components/index.ts:48:10 - error TS2300: Duplicate identifier 'PastRecoveryLogs'.

48 export { PastRecoveryLogs } from './PastRecoveryLogs'
            ~~~~~~~~~~~~~~~~

src/components/passenger-data-helpers.tsx:3:50 - error TS7006: Parameter 'option' implicitly has an 'any' type.

3 export const requiresPassengerReaccommodation = (option) => {
                                                   ~~~~~~

src/components/passenger-data-helpers.tsx:556:44 - error TS7006: Parameter 'flight' implicitly has an 'any' type.

556 export const generateAffectedPassengers = (flight, option) => {
                                               ~~~~~~

src/components/passenger-data-helpers.tsx:556:52 - error TS7006: Parameter 'option' implicitly has an 'any' type.

556 export const generateAffectedPassengers = (flight, option) => {
                                                       ~~~~~~

src/components/passenger-data-helpers.tsx:558:9 - error TS7034: Variable 'passengers' implicitly has type 'any[]' in some locations where its type cannot be determined.

558   const passengers = []
            ~~~~~~~~~~

src/components/passenger-data-helpers.tsx:565:7 - error TS6133: 'pnrCounter' is declared but its value is never read.

565   let pnrCounter = 100
          ~~~~~~~~~~

src/components/passenger-data-helpers.tsx:592:60 - error TS6133: 'passengerIndex' is declared but its value is never read.

592       templateGroup.passengers.forEach((passengerTemplate, passengerIndex) => {
                                                               ~~~~~~~~~~~~~~

src/components/passenger-data-helpers.tsx:655:24 - error TS7005: Variable 'passengers' implicitly has an 'any[]' type.

655   const pnrBreakdown = passengers.reduce((acc, p) => {
                           ~~~~~~~~~~

src/components/passenger-data-helpers.tsx:661:36 - error TS7005: Variable 'passengers' implicitly has an 'any[]' type.

661   console.log('Status breakdown:', passengers.reduce((acc, p) => {
                                       ~~~~~~~~~~

src/components/passenger-data-helpers.tsx:666:10 - error TS7005: Variable 'passengers' implicitly has an 'any[]' type.

666   return passengers
             ~~~~~~~~~~

src/components/passenger-data-helpers.tsx:670:29 - error TS7006: Parameter 'relationship' implicitly has an 'any' type.

670 const generateRandomName = (relationship) => {
                                ~~~~~~~~~~~~

src/components/passenger-data-helpers.tsx:682:17 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ father: string[]; mother: string[]; son: string[]; daughter: string[]; individual: string[]; spouse: string[]; }'.

682   const names = firstNames[relationship] || firstNames.individual
                    ~~~~~~~~~~~~~~~~~~~~~~~~

src/components/recovery-option-helpers.tsx:3:40 - error TS7006: Parameter 'option' implicitly has an 'any' type.

3 export const getDetailedDescription = (option, flight) => {
                                         ~~~~~~

src/components/recovery-option-helpers.tsx:3:48 - error TS7006: Parameter 'flight' implicitly has an 'any' type.

3 export const getDetailedDescription = (option, flight) => {
                                                 ~~~~~~

src/components/recovery-option-helpers.tsx:26:7 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ AIRCRAFT_SWAP_A320_001: string; DELAY_4H_OVERNIGHT: string; REROUTE_AUH_TECH: string; PARTNER_CODESHARE: string; CREW_REPLACEMENT_DXB: string; }'.

26   if (descriptions[option.id]) {
         ~~~~~~~~~~~~~~~~~~~~~~~

src/components/recovery-option-helpers.tsx:27:12 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ AIRCRAFT_SWAP_A320_001: string; DELAY_4H_OVERNIGHT: string; REROUTE_AUH_TECH: string; PARTNER_CODESHARE: string; CREW_REPLACEMENT_DXB: string; }'.

27     return descriptions[option.id]
              ~~~~~~~~~~~~~~~~~~~~~~~

src/components/recovery-option-helpers.tsx:72:34 - error TS7006: Parameter 'option' implicitly has an 'any' type.

72 export const getCostBreakdown = (option) => {
                                    ~~~~~~

src/components/recovery-option-helpers.tsx:120:15 - error TS2339: Property 'totalCost' does not exist on type '{ category: string; amount: string; percentage: number; description: string; }[]'.

120     breakdown.totalCost = baseCost
                  ~~~~~~~~~

src/components/recovery-option-helpers.tsx:149:15 - error TS2339: Property 'totalCost' does not exist on type '{ category: string; amount: string; percentage: number; description: string; }[]'.

149     breakdown.totalCost = baseCost
                  ~~~~~~~~~

src/components/recovery-option-helpers.tsx:178:15 - error TS2339: Property 'totalCost' does not exist on type '{ category: string; amount: string; percentage: number; description: string; }[]'.

178     breakdown.totalCost = baseCost
                  ~~~~~~~~~

src/components/recovery-option-helpers.tsx:207:15 - error TS2339: Property 'totalCost' does not exist on type '{ category: string; amount: string; percentage: number; description: string; }[]'.

207     breakdown.totalCost = baseCost
                  ~~~~~~~~~

src/components/recovery-option-helpers.tsx:237:15 - error TS2339: Property 'totalCost' does not exist on type '{ category: string; amount: string; percentage: number; description: string; }[]'.

237     breakdown.totalCost = baseCost
                  ~~~~~~~~~

src/components/recovery-option-helpers.tsx:242:36 - error TS7006: Parameter 'option' implicitly has an 'any' type.

242 export const getTimelineDetails = (option) => {
                                       ~~~~~~

src/components/recovery-option-helpers.tsx:244:23 - error TS7006: Parameter 'minutes' implicitly has an 'any' type.

244   const addMinutes = (minutes) => new Date(currentTime.getTime() + minutes * 60000).toLocaleTimeString('en-GB', { hour: '2-digit', minute: '2-digit' })
                          ~~~~~~~

src/components/recovery-option-helpers.tsx:271:7 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ AIRCRAFT_SWAP_A320_001: { step: string; duration: string; status: string; startTime: string; endTime: string; details: string; }[]; DELAY_4H_OVERNIGHT: { step: string; duration: string; status: string; startTime: string; endTime: string; details: string; }[]; CREW_REPLACEMENT_DXB: { ...; }[]; }'.

271   if (timelines[option.id]) {
          ~~~~~~~~~~~~~~~~~~~~

src/components/recovery-option-helpers.tsx:272:12 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ AIRCRAFT_SWAP_A320_001: { step: string; duration: string; status: string; startTime: string; endTime: string; details: string; }[]; DELAY_4H_OVERNIGHT: { step: string; duration: string; status: string; startTime: string; endTime: string; details: string; }[]; CREW_REPLACEMENT_DXB: { ...; }[]; }'.

272     return timelines[option.id]
               ~~~~~~~~~~~~~~~~~~~~

src/components/recovery-option-helpers.tsx:285:11 - error TS6133: 'steps' is declared but its value is never read.

285     const steps = Math.ceil(totalMinutes / 20) // Roughly 20-minute steps
              ~~~~~

src/components/recovery-option-helpers.tsx:341:41 - error TS7006: Parameter 'option' implicitly has an 'any' type.

341 export const getResourceRequirements = (option) => {
                                            ~~~~~~

src/components/recovery-option-helpers.tsx:366:7 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ AIRCRAFT_SWAP_A320_001: { type: string; resource: string; availability: string; location: string; status: string; eta: string; details: string; }[]; DELAY_4H_OVERNIGHT: { type: string; resource: string; ... 4 more ...; details: string; }[]; CREW_REPLACEMENT_DXB: { ...; }[]; }'.

366   if (resources[option.id]) {
          ~~~~~~~~~~~~~~~~~~~~

src/components/recovery-option-helpers.tsx:367:12 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ AIRCRAFT_SWAP_A320_001: { type: string; resource: string; availability: string; location: string; status: string; eta: string; details: string; }[]; DELAY_4H_OVERNIGHT: { type: string; resource: string; ... 4 more ...; details: string; }[]; CREW_REPLACEMENT_DXB: { ...; }[]; }'.

367     return resources[option.id]
               ~~~~~~~~~~~~~~~~~~~~

src/components/recovery-option-helpers.tsx:429:35 - error TS7006: Parameter 'option' implicitly has an 'any' type.

429 export const getRiskAssessment = (option) => {
                                      ~~~~~~

src/components/recovery-option-helpers.tsx:452:7 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ AIRCRAFT_SWAP_A320_001: { risk: string; probability: string; impact: string; mitigation: string; riskScore: number; }[]; DELAY_4H_OVERNIGHT: { risk: string; probability: string; impact: string; mitigation: string; riskScore: number; }[]; CREW_REPLACEMENT_DXB: { ...; }[]; }'.

452   if (risks[option.id]) {
          ~~~~~~~~~~~~~~~~

src/components/recovery-option-helpers.tsx:453:12 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ AIRCRAFT_SWAP_A320_001: { risk: string; probability: string; impact: string; mitigation: string; riskScore: number; }[]; DELAY_4H_OVERNIGHT: { risk: string; probability: string; impact: string; mitigation: string; riskScore: number; }[]; CREW_REPLACEMENT_DXB: { ...; }[]; }'.

453     return risks[option.id]
               ~~~~~~~~~~~~~~~~

src/components/recovery-option-helpers.tsx:524:35 - error TS7006: Parameter 'option' implicitly has an 'any' type.

524 export const getTechnicalSpecs = (option) => {
                                      ~~~~~~

src/components/recovery-option-helpers.tsx:559:7 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ AIRCRAFT_SWAP_A320_001: { implementation: string; systemsRequired: string[]; certifications: string[]; maintenanceStatus: string; fuelRequirement: string; weatherLimitations: string; aircraftSpecs: string; routeApproval: string; }; DELAY_4H_OVERNIGHT: { ...; }; CREW_REPLACEMENT_DXB: { ...; }; }'.

559   if (specs[option.id]) {
          ~~~~~~~~~~~~~~~~

src/components/recovery-option-helpers.tsx:560:12 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ AIRCRAFT_SWAP_A320_001: { implementation: string; systemsRequired: string[]; certifications: string[]; maintenanceStatus: string; fuelRequirement: string; weatherLimitations: string; aircraftSpecs: string; routeApproval: string; }; DELAY_4H_OVERNIGHT: { ...; }; CREW_REPLACEMENT_DXB: { ...; }; }'.

560     return specs[option.id]
               ~~~~~~~~~~~~~~~~

src/components/recovery-option-helpers.tsx:627:35 - error TS7006: Parameter 'option' implicitly has an 'any' type.

627 export const getHistoricalData = (option) => {
                                      ~~~~~~

src/components/recovery-option-helpers.tsx:668:7 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ AIRCRAFT_SWAP_A320_001: { successRate: number; avgExecutionTime: string; avgCostVariance: string; specificNotes: string; seasonalTrends: string; previousIncidents: string; similarScenarios: number; lastUsed: string; passengerSatisfaction: number; }; DELAY_4H_OVERNIGHT: { ...; }; CREW_REPLACEMENT_DXB: { ...; }; }'.

668   if (specificData[option.id]) {
          ~~~~~~~~~~~~~~~~~~~~~~~

src/components/recovery-option-helpers.tsx:669:12 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ AIRCRAFT_SWAP_A320_001: { successRate: number; avgExecutionTime: string; avgCostVariance: string; specificNotes: string; seasonalTrends: string; previousIncidents: string; similarScenarios: number; lastUsed: string; passengerSatisfaction: number; }; DELAY_4H_OVERNIGHT: { ...; }; CREW_REPLACEMENT_DXB: { ...; }; }'.

669     return specificData[option.id]
               ~~~~~~~~~~~~~~~~~~~~~~~

src/components/recovery-option-helpers.tsx:731:46 - error TS7006: Parameter 'option' implicitly has an 'any' type.

731 export const getAlternativeConsiderations = (option, flight) => {
                                                 ~~~~~~

src/components/recovery-option-helpers.tsx:731:54 - error TS7006: Parameter 'flight' implicitly has an 'any' type.

731 export const getAlternativeConsiderations = (option, flight) => {
                                                         ~~~~~~

src/components/recovery-option-helpers.tsx:757:7 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ AIRCRAFT_SWAP_A320_001: string[]; DELAY_4H_OVERNIGHT: string[]; CREW_REPLACEMENT_DXB: string[]; }'.

757   if (considerations[option.id]) {
          ~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/recovery-option-helpers.tsx:758:12 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ AIRCRAFT_SWAP_A320_001: string[]; DELAY_4H_OVERNIGHT: string[]; CREW_REPLACEMENT_DXB: string[]; }'.

758     return considerations[option.id]
               ~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/recovery-option-helpers.tsx:827:38 - error TS7006: Parameter 'option' implicitly has an 'any' type.

827 export const getStakeholderImpact = (option, flight) => {
                                         ~~~~~~

src/components/recovery-option-helpers.tsx:827:46 - error TS7006: Parameter 'flight' implicitly has an 'any' type.

827 export const getStakeholderImpact = (option, flight) => {
                                                 ~~~~~~

src/components/recovery-option-helpers.tsx:832:9 - error TS6133: 'destination' is declared but its value is never read.

832   const destination = flight?.destination || 'BOM'
            ~~~~~~~~~~~

src/components/recovery-option-helpers.tsx:874:39 - error TS7006: Parameter 'option' implicitly has an 'any' type.

874 export const getEditableParameters = (option) => {
                                          ~~~~~~

src/components/recovery-option-helpers.tsx:896:7 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ AIRCRAFT_SWAP_A320_001: ({ name: string; type: string; value: string; options: string[]; impact: string; description: string; min?: undefined; max?: undefined; unit?: undefined; } | { name: string; type: string; ... 6 more ...; options?: undefined; } | { ...; })[]; DELAY_4H_OVERNIGHT: ({ ...; } | { ...; })[]; CREW...'.

896   if (editableParams[option.id]) {
          ~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/recovery-option-helpers.tsx:897:12 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ AIRCRAFT_SWAP_A320_001: ({ name: string; type: string; value: string; options: string[]; impact: string; description: string; min?: undefined; max?: undefined; unit?: undefined; } | { name: string; type: string; ... 6 more ...; options?: undefined; } | { ...; })[]; DELAY_4H_OVERNIGHT: ({ ...; } | { ...; })[]; CREW...'.

897     return editableParams[option.id]
               ~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/recovery-option-helpers.tsx:947:36 - error TS7006: Parameter 'option' implicitly has an 'any' type.

947 export const getWhatIfScenarios = (option) => {
                                       ~~~~~~

src/components/recovery-option-helpers.tsx:967:7 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ AIRCRAFT_SWAP_A320_001: { scenario: string; impact: string; probability: number; timeline: string; }[]; DELAY_4H_OVERNIGHT: { scenario: string; impact: string; probability: number; timeline: string; }[]; CREW_REPLACEMENT_DXB: { ...; }[]; }'.

967   if (scenarios[option.id]) {
          ~~~~~~~~~~~~~~~~~~~~

src/components/recovery-option-helpers.tsx:968:12 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ AIRCRAFT_SWAP_A320_001: { scenario: string; impact: string; probability: number; timeline: string; }[]; DELAY_4H_OVERNIGHT: { scenario: string; impact: string; probability: number; timeline: string; }[]; CREW_REPLACEMENT_DXB: { ...; }[]; }'.

968     return scenarios[option.id]
               ~~~~~~~~~~~~~~~~~~~~

src/components/recovery-scenarios.tsx:322:38 - error TS7006: Parameter 'flight' implicitly has an 'any' type.

322 export const getCrewIssueRecovery = (flight) => {
                                         ~~~~~~

src/components/recovery-scenarios.tsx:1346:33 - error TS7006: Parameter 'categorization' implicitly has an 'any' type.

1346 export const getScenarioData = (categorization) => {
                                     ~~~~~~~~~~~~~~

src/components/schedule-impact-helpers.tsx:2:51 - error TS7006: Parameter 'originalPlan' implicitly has an 'any' type.

2 export const generateScheduleComparisonSummary = (originalPlan, newPlan) => {
                                                    ~~~~~~~~~~~~

src/components/schedule-impact-helpers.tsx:2:65 - error TS7006: Parameter 'newPlan' implicitly has an 'any' type.

2 export const generateScheduleComparisonSummary = (originalPlan, newPlan) => {
                                                                  ~~~~~~~

src/components/schedule-impact-helpers.tsx:5:9 - error TS7034: Variable 'changes' implicitly has type 'any[]' in some locations where its type cannot be determined.

5   const changes = []
          ~~~~~~~

src/components/schedule-impact-helpers.tsx:6:20 - error TS7006: Parameter 'newFlight' implicitly has an 'any' type.

6   newPlan.forEach((newFlight, index) => {
                     ~~~~~~~~~

src/components/schedule-impact-helpers.tsx:6:31 - error TS7006: Parameter 'index' implicitly has an 'any' type.

6   newPlan.forEach((newFlight, index) => {
                                ~~~~~

src/components/schedule-impact-helpers.tsx:16:31 - error TS7005: Variable 'changes' implicitly has an 'any[]' type.

16   return changes.length > 0 ? changes.join('; ') : "Schedule maintained"
                                 ~~~~~~~

src/components/schedule-impact-helpers.tsx:19:42 - error TS6133: 'rotationPlan' is declared but its value is never read.

19 export const calculatePassengerImpact = (rotationPlan, option, flight) => {
                                            ~~~~~~~~~~~~

src/components/schedule-impact-helpers.tsx:19:42 - error TS7006: Parameter 'rotationPlan' implicitly has an 'any' type.

19 export const calculatePassengerImpact = (rotationPlan, option, flight) => {
                                            ~~~~~~~~~~~~

src/components/schedule-impact-helpers.tsx:19:56 - error TS7006: Parameter 'option' implicitly has an 'any' type.

19 export const calculatePassengerImpact = (rotationPlan, option, flight) => {
                                                          ~~~~~~

src/components/schedule-impact-helpers.tsx:19:64 - error TS7006: Parameter 'flight' implicitly has an 'any' type.

19 export const calculatePassengerImpact = (rotationPlan, option, flight) => {
                                                                  ~~~~~~

src/components/schedule-impact-helpers.tsx:62:35 - error TS7006: Parameter 'rotationPlan' implicitly has an 'any' type.

62 export const extractCrewImpact = (rotationPlan, option) => {
                                     ~~~~~~~~~~~~

src/components/schedule-impact-helpers.tsx:62:49 - error TS7006: Parameter 'option' implicitly has an 'any' type.

62 export const extractCrewImpact = (rotationPlan, option) => {
                                                   ~~~~~~

src/components/schedule-impact-helpers.tsx:85:39 - error TS7006: Parameter 'rotationPlan' implicitly has an 'any' type.

85 export const extractAircraftImpact = (rotationPlan, option, flight) => {
                                         ~~~~~~~~~~~~

src/components/schedule-impact-helpers.tsx:85:53 - error TS7006: Parameter 'option' implicitly has an 'any' type.

85 export const extractAircraftImpact = (rotationPlan, option, flight) => {
                                                       ~~~~~~

src/components/schedule-impact-helpers.tsx:85:61 - error TS7006: Parameter 'flight' implicitly has an 'any' type.

85 export const extractAircraftImpact = (rotationPlan, option, flight) => {
                                                               ~~~~~~

src/components/schedule-impact-helpers.tsx:113:37 - error TS7006: Parameter 'rotationPlan' implicitly has an 'any' type.

113 export const extractCostAnalysis = (rotationPlan, option) => {
                                        ~~~~~~~~~~~~

src/components/schedule-impact-helpers.tsx:113:51 - error TS7006: Parameter 'option' implicitly has an 'any' type.

113 export const extractCostAnalysis = (rotationPlan, option) => {
                                                      ~~~~~~

src/components/schedule-impact-helpers.tsx:125:42 - error TS7006: Parameter 'originalPlan' implicitly has an 'any' type.

125 export const calculateTotalPassengers = (originalPlan, flight) => {
                                             ~~~~~~~~~~~~

src/components/schedule-impact-helpers.tsx:125:56 - error TS7006: Parameter 'flight' implicitly has an 'any' type.

125 export const calculateTotalPassengers = (originalPlan, flight) => {
                                                           ~~~~~~

src/components/schedule-impact-helpers.tsx:130:40 - error TS7006: Parameter 'originalPlan' implicitly has an 'any' type.

130 export const calculateRevenueAtRisk = (originalPlan) => {
                                           ~~~~~~~~~~~~

src/components/schedule-impact-helpers.tsx:136:40 - error TS7006: Parameter 'newPlan' implicitly has an 'any' type.

136 export const countCriticalConflicts = (newPlan) => {
                                           ~~~~~~~

src/components/schedule-impact-helpers.tsx:138:25 - error TS7006: Parameter 'flight' implicitly has an 'any' type.

138   return newPlan.filter(flight =>
                            ~~~~~~

src/components/schedule-impact-helpers.tsx:145:41 - error TS7006: Parameter 'newPlan' implicitly has an 'any' type.

145 export const countManagableConflicts = (newPlan) => {
                                            ~~~~~~~

src/components/schedule-impact-helpers.tsx:147:25 - error TS7006: Parameter 'flight' implicitly has an 'any' type.

147   return newPlan.filter(flight =>
                            ~~~~~~

src/components/schedule-impact-helpers.tsx:154:39 - error TS7006: Parameter 'newPlan' implicitly has an 'any' type.

154 export const countProtectedFlights = (newPlan) => {
                                          ~~~~~~~

src/components/schedule-impact-helpers.tsx:156:25 - error TS7006: Parameter 'flight' implicitly has an 'any' type.

156   return newPlan.filter(flight =>
                            ~~~~~~

src/components/schedule-impact-helpers.tsx:162:48 - error TS7006: Parameter 'option' implicitly has an 'any' type.

162 export const generateRecommendedMitigations = (option, rotationPlan) => {
                                                   ~~~~~~

src/components/schedule-impact-helpers.tsx:162:56 - error TS7006: Parameter 'rotationPlan' implicitly has an 'any' type.

162 export const generateRecommendedMitigations = (option, rotationPlan) => {
                                                           ~~~~~~~~~~~~

src/components/schedule-impact-helpers.tsx:198:44 - error TS7006: Parameter 'option' implicitly has an 'any' type.

198 export const generateComplianceAnalysis = (option, rotationPlan) => {
                                               ~~~~~~

src/components/schedule-impact-helpers.tsx:198:52 - error TS6133: 'rotationPlan' is declared but its value is never read.

198 export const generateComplianceAnalysis = (option, rotationPlan) => {
                                                       ~~~~~~~~~~~~

src/components/schedule-impact-helpers.tsx:198:52 - error TS7006: Parameter 'rotationPlan' implicitly has an 'any' type.

198 export const generateComplianceAnalysis = (option, rotationPlan) => {
                                                       ~~~~~~~~~~~~

src/components/schedule-impact-helpers.tsx:236:44 - error TS7006: Parameter 'rotationPlan' implicitly has an 'any' type.

236 export const extractImplementationSteps = (rotationPlan) => {
                                               ~~~~~~~~~~~~

src/components/schedule-impact-helpers.tsx:238:48 - error TS7006: Parameter 'action' implicitly has an 'any' type.

238     return rotationPlan.crewOfficerActions.map(action => ({
                                                   ~~~~~~

src/components/schedule-impact-helpers.tsx:268:47 - error TS7006: Parameter 'selectedOption' implicitly has an 'any' type.

268 export const generateAlternativeComparison = (selectedOption, allOptions) => {
                                                  ~~~~~~~~~~~~~~

src/components/schedule-impact-helpers.tsx:268:63 - error TS7006: Parameter 'allOptions' implicitly has an 'any' type.

268 export const generateAlternativeComparison = (selectedOption, allOptions) => {
                                                                  ~~~~~~~~~~

src/components/schedule-impact-helpers.tsx:269:42 - error TS7006: Parameter 'opt' implicitly has an 'any' type.

269   const alternatives = allOptions.filter(opt => opt.id !== selectedOption.id)
                                             ~~~

src/components/schedule-impact-helpers.tsx:270:39 - error TS7006: Parameter 'alt' implicitly has an 'any' type.

270   return alternatives.slice(0, 2).map(alt => ({
                                          ~~~

src/components/schedule-impact-helpers.tsx:279:34 - error TS7006: Parameter 'selectedOption' implicitly has an 'any' type.

279 export const calculateSavings = (selectedOption, allOptions) => {
                                     ~~~~~~~~~~~~~~

src/components/schedule-impact-helpers.tsx:279:50 - error TS7006: Parameter 'allOptions' implicitly has an 'any' type.

279 export const calculateSavings = (selectedOption, allOptions) => {
                                                     ~~~~~~~~~~

src/components/schedule-impact-helpers.tsx:280:32 - error TS7006: Parameter 'opt' implicitly has an 'any' type.

280   const costs = allOptions.map(opt => parseInt(opt.cost.replace(/[^0-9]/g, '')))
                                   ~~~

src/components/schedule-impact-helpers.tsx:287:30 - error TS7006: Parameter 'selectedOption' implicitly has an 'any' type.

287 export const calculateROI = (selectedOption, allOptions) => {
                                 ~~~~~~~~~~~~~~

src/components/schedule-impact-helpers.tsx:287:46 - error TS7006: Parameter 'allOptions' implicitly has an 'any' type.

287 export const calculateROI = (selectedOption, allOptions) => {
                                                 ~~~~~~~~~~

src/components/schedule-impact-helpers.tsx:288:32 - error TS7006: Parameter 'opt' implicitly has an 'any' type.

288   const costs = allOptions.map(opt => parseInt(opt.cost.replace(/[^0-9]/g, '')))
                                   ~~~

src/components/schedule-impact-helpers.tsx:290:33 - error TS7006: Parameter 'a' implicitly has an 'any' type.

290   const avgCost = costs.reduce((a, b) => a + b, 0) / costs.length
                                    ~

src/components/schedule-impact-helpers.tsx:290:36 - error TS7006: Parameter 'b' implicitly has an 'any' type.

290   const avgCost = costs.reduce((a, b) => a + b, 0) / costs.length
                                       ~

src/components/schedule-impact-helpers.tsx:296:48 - error TS7006: Parameter 'option' implicitly has an 'any' type.

296 export const generateScheduleImpactAnalysis = (option, flight, scenarioData) => {
                                                   ~~~~~~

src/components/schedule-impact-helpers.tsx:296:56 - error TS7006: Parameter 'flight' implicitly has an 'any' type.

296 export const generateScheduleImpactAnalysis = (option, flight, scenarioData) => {
                                                           ~~~~~~

src/components/schedule-impact-helpers.tsx:296:64 - error TS7006: Parameter 'scenarioData' implicitly has an 'any' type.

296 export const generateScheduleImpactAnalysis = (option, flight, scenarioData) => {
                                                                   ~~~~~~~~~~~~

src/components/ui/accordion.tsx:4:37 - error TS2307: Cannot find module '@radix-ui/react-accordion@1.2.3' or its corresponding type declarations.

4 import * as AccordionPrimitive from "@radix-ui/react-accordion@1.2.3";
                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/ui/accordion.tsx:5:33 - error TS2307: Cannot find module 'lucide-react@0.487.0' or its corresponding type declarations.

5 import { ChevronDownIcon } from "lucide-react@0.487.0";
                                  ~~~~~~~~~~~~~~~~~~~~~~

src/components/ui/breadcrumb.tsx:2:22 - error TS2307: Cannot find module '@radix-ui/react-slot@1.1.2' or its corresponding type declarations.

2 import { Slot } from "@radix-ui/react-slot@1.1.2";
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/ui/breadcrumb.tsx:3:46 - error TS2307: Cannot find module 'lucide-react@0.487.0' or its corresponding type declarations.

3 import { ChevronRight, MoreHorizontal } from "lucide-react@0.487.0";
                                               ~~~~~~~~~~~~~~~~~~~~~~

src/components/ui/carousel.tsx:6:8 - error TS2307: Cannot find module 'embla-carousel-react@8.6.0' or its corresponding type declarations.

6 } from "embla-carousel-react@8.6.0";
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/ui/carousel.tsx:7:39 - error TS2307: Cannot find module 'lucide-react@0.487.0' or its corresponding type declarations.

7 import { ArrowLeft, ArrowRight } from "lucide-react@0.487.0";
                                        ~~~~~~~~~~~~~~~~~~~~~~

src/components/ui/drawer.tsx:4:43 - error TS2307: Cannot find module 'vaul@1.1.2' or its corresponding type declarations.

4 import { Drawer as DrawerPrimitive } from "vaul@1.1.2";
                                            ~~~~~~~~~~~~

src/components/ui/form.tsx:4:33 - error TS2307: Cannot find module '@radix-ui/react-label@2.1.2' or its corresponding type declarations.

4 import * as LabelPrimitive from "@radix-ui/react-label@2.1.2";
                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/ui/form.tsx:5:22 - error TS2307: Cannot find module '@radix-ui/react-slot@1.1.2' or its corresponding type declarations.

5 import { Slot } from "@radix-ui/react-slot@1.1.2";
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/ui/form.tsx:14:8 - error TS2307: Cannot find module 'react-hook-form@7.55.0' or its corresponding type declarations.

14 } from "react-hook-form@7.55.0";
          ~~~~~~~~~~~~~~~~~~~~~~~~

src/components/ui/resizable.tsx:4:34 - error TS2307: Cannot find module 'lucide-react@0.487.0' or its corresponding type declarations.

4 import { GripVerticalIcon } from "lucide-react@0.487.0";
                                   ~~~~~~~~~~~~~~~~~~~~~~

src/components/ui/resizable.tsx:5:37 - error TS2307: Cannot find module 'react-resizable-panels@2.1.7' or its corresponding type declarations.

5 import * as ResizablePrimitive from "react-resizable-panels@2.1.7";
                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/ui/sidebar.tsx:4:22 - error TS2307: Cannot find module '@radix-ui/react-slot@1.1.2' or its corresponding type declarations.

4 import { Slot } from "@radix-ui/react-slot@1.1.2";
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/ui/sidebar.tsx:5:35 - error TS2307: Cannot find module 'class-variance-authority@0.7.1' or its corresponding type declarations.

5 import { VariantProps, cva } from "class-variance-authority@0.7.1";
                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/ui/sidebar.tsx:6:31 - error TS2307: Cannot find module 'lucide-react@0.487.0' or its corresponding type declarations.

6 import { PanelLeftIcon } from "lucide-react@0.487.0";
                                ~~~~~~~~~~~~~~~~~~~~~~

src/components/ui/sonner.tsx:3:26 - error TS2307: Cannot find module 'next-themes@0.4.6' or its corresponding type declarations.

3 import { useTheme } from "next-themes@0.4.6";
                           ~~~~~~~~~~~~~~~~~~~

src/components/ui/sonner.tsx:4:49 - error TS2307: Cannot find module 'sonner@2.0.3' or its corresponding type declarations.

4 import { Toaster as Sonner, ToasterProps } from "sonner@2.0.3";
                                                  ~~~~~~~~~~~~~~

src/components/ui/toggle-group.tsx:4:39 - error TS2307: Cannot find module '@radix-ui/react-toggle-group@1.1.2' or its corresponding type declarations.

4 import * as ToggleGroupPrimitive from "@radix-ui/react-toggle-group@1.1.2";
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/ui/toggle-group.tsx:5:35 - error TS2307: Cannot find module 'class-variance-authority@0.7.1' or its corresponding type declarations.

5 import { type VariantProps } from "class-variance-authority@0.7.1";
                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/ui/toggle.tsx:4:34 - error TS2307: Cannot find module '@radix-ui/react-toggle@1.1.2' or its corresponding type declarations.

4 import * as TogglePrimitive from "@radix-ui/react-toggle@1.1.2";
                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/ui/toggle.tsx:5:40 - error TS2307: Cannot find module 'class-variance-authority@0.7.1' or its corresponding type declarations.

5 import { cva, type VariantProps } from "class-variance-authority@0.7.1";
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/ui/use-toast.tsx:21:6 - error TS6196: 'Toast' is declared but never used.

21 type Toast = {
        ~~~~~

src/components/what-if-simulation-helpers.tsx:18:41 - error TS7006: Parameter 'baseOption' implicitly has an 'any' type.

18 export const calculateScenarioImpact = (baseOption, scenario, editedParams = {}) => {
                                           ~~~~~~~~~~

src/components/what-if-simulation-helpers.tsx:18:53 - error TS7006: Parameter 'scenario' implicitly has an 'any' type.

18 export const calculateScenarioImpact = (baseOption, scenario, editedParams = {}) => {
                                                       ~~~~~~~~

src/components/what-if-simulation-helpers.tsx:45:24 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{}'.
  No index signature with a parameter of type 'string' was found on type '{}'.

45     const paramValue = editedParams[param]
                          ~~~~~~~~~~~~~~~~~~~

src/components/what-if-simulation-helpers.tsx:55:38 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ Budget: number; Standard: number; Premium: number; }'.

55       adjustedCost = adjustedCost * (multipliers[paramValue] || 1.0)
                                        ~~~~~~~~~~~~~~~~~~~~~~~

src/components/what-if-simulation-helpers.tsx:59:38 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ Standard: number; High: number; Emergency: number; }'.

59       adjustedCost = adjustedCost * (multipliers[paramValue] || 1.0)
                                        ~~~~~~~~~~~~~~~~~~~~~~~

src/components/what-if-simulation-helpers.tsx:61:38 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ Standard: number; High: number; Emergency: number; }'.

61       adjustedTime = adjustedTime - (timeReductions[paramValue] || 0)
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/components/what-if-simulation-helpers.tsx:80:33 - error TS7006: Parameter 'changes' implicitly has an 'any' type.

80 export const calculateImpact = (changes) => {
                                   ~~~~~~~

src/components/what-if-simulation-helpers.tsx:124:47 - error TS7006: Parameter 'option' implicitly has an 'any' type.

124 export const generateRecoveryOptionDetails = (option, flight) => {
                                                  ~~~~~~

src/components/what-if-simulation-helpers.tsx:124:55 - error TS7006: Parameter 'flight' implicitly has an 'any' type.

124 export const generateRecoveryOptionDetails = (option, flight) => {
                                                          ~~~~~~

src/components/what-if-simulation-helpers.tsx:132:36 - error TS7006: Parameter 'costString' implicitly has an 'any' type.

132     const extractCostFromString = (costString) => {
                                       ~~~~~~~~~~

src/context/AppContext.tsx:1:54 - error TS6133: 'ReactNode' is declared but its value is never read.

1 import React, { createContext, useContext, useState, ReactNode } from "react";
                                                       ~~~~~~~~~

src/pages/AffectedFlightsPage.tsx:2:1 - error TS6133: 'React' is declared but its value is never read.

2 import React from 'react'
  ~~~~~~~~~~~~~~~~~~~~~~~~~

src/pages/ComparisonPage.tsx:1:8 - error TS6133: 'React' is declared but its value is never read.

1 import React, { useState, useEffect } from 'react'
         ~~~~~

src/pages/ComparisonPage.tsx:27:36 - error TS2551: Property 'flight_number' does not exist on type 'FlightDisruption'. Did you mean 'flightNumber'?

27               flightNumber: flight.flight_number || flight.flightNumber,
                                      ~~~~~~~~~~~~~

  src/services/databaseService.ts:37:3
    37   flightNumber: string;
         ~~~~~~~~~~~~
    'flightNumber' is declared here.

src/pages/ComparisonPage.tsx:29:42 - error TS2551: Property 'scheduled_departure' does not exist on type 'FlightDisruption'. Did you mean 'scheduledDeparture'?

29               scheduledDeparture: flight.scheduled_departure || flight.scheduledDeparture,
                                            ~~~~~~~~~~~~~~~~~~~

  src/services/databaseService.ts:44:3
    44   scheduledDeparture: string;
         ~~~~~~~~~~~~~~~~~~
    'scheduledDeparture' is declared here.

src/pages/ComparisonPage.tsx:30:42 - error TS2551: Property 'estimated_departure' does not exist on type 'FlightDisruption'. Did you mean 'estimatedDeparture'?

30               estimatedDeparture: flight.estimated_departure || flight.estimatedDeparture,
                                            ~~~~~~~~~~~~~~~~~~~

  src/services/databaseService.ts:45:3
    45   estimatedDeparture: string;
         ~~~~~~~~~~~~~~~~~~
    'estimatedDeparture' is declared here.

src/pages/ComparisonPage.tsx:31:28 - error TS2339: Property 'disruption_type' does not exist on type 'FlightDisruption'.

31               type: flight.disruption_type || flight.type,
                              ~~~~~~~~~~~~~~~

src/pages/ComparisonPage.tsx:32:40 - error TS2551: Property 'disruption_reason' does not exist on type 'FlightDisruption'. Did you mean 'disruptionReason'?

32               disruptionReason: flight.disruption_reason || flight.disruptionReason,
                                          ~~~~~~~~~~~~~~~~~

  src/services/databaseService.ts:53:3
    53   disruptionReason: string;
         ~~~~~~~~~~~~~~~~
    'disruptionReason' is declared here.

src/pages/ComparisonPage.tsx:35:81 - error TS2339: Property 'disruption_type' does not exist on type 'FlightDisruption'.

35               categorization: flight.categorization || getCategorization(flight.disruption_type || flight.type || 'Technical'),
                                                                                   ~~~~~~~~~~~~~~~

src/pages/ComparisonPage.tsx:52:32 - error TS7006: Parameter 'type' implicitly has an 'any' type.

52     const getCategorization = (type) => {
                                  ~~~~

src/pages/ComparisonPage.tsx:61:14 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ Technical: string; Weather: string; Crew: string; ATC: string; Airport: string; Rotation: string; }'.

61       return categoryMap[type] || "Aircraft issue (e.g., AOG)"
                ~~~~~~~~~~~~~~~~~

src/pages/Dashboard.tsx:1:1 - error TS6133: 'React' is declared but its value is never read.

1 import React from "react";
  ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/pages/Dashboard.tsx:36:3 - error TS6133: 'Calendar' is declared but its value is never read.

36   Calendar,
     ~~~~~~~~

src/pages/Dashboard.tsx:51:9 - error TS6133: 'handleCreateRecoveryPlan' is declared but its value is never read.

51   const handleCreateRecoveryPlan = (disruption: any) => {
           ~~~~~~~~~~~~~~~~~~~~~~~~

src/pages/DetailedPlan.tsx:2:1 - error TS6133: 'React' is declared but its value is never read.

2 import React from 'react'
  ~~~~~~~~~~~~~~~~~~~~~~~~~

src/pages/DisruptionPage.tsx:1:1 - error TS6133: 'React' is declared but its value is never read.

1 import React from 'react'
  ~~~~~~~~~~~~~~~~~~~~~~~~~

src/pages/DisruptionPage.tsx:10:39 - error TS7006: Parameter 'flight' implicitly has an 'any' type.

10   const handleNavigateToComparison = (flight, recoveryOptions = []) => {
                                         ~~~~~~

src/pages/DisruptionPage.tsx:25:7 - error TS2322: Type '(flight: any, recoveryOptions?: never[]) => void' is not assignable to type '(flight: any, options?: any[] | undefined) => void'.
  Types of parameters 'recoveryOptions' and 'options' are incompatible.
    Type 'any[] | undefined' is not assignable to type 'never[] | undefined'.
      Type 'any[]' is not assignable to type 'never[]'.
        Type 'any' is not assignable to type 'never'.

25       onNavigateToComparison={handleNavigateToComparison}
         ~~~~~~~~~~~~~~~~~~~~~~

  src/components/DisruptionInput.tsx:274:3
    274   onNavigateToComparison?: (flight: any, options?: any[]) => void;
          ~~~~~~~~~~~~~~~~~~~~~~
    The expected type comes from property 'onNavigateToComparison' which is declared here on type 'IntrinsicAttributes & { disruption?: any; onSelectFlight?: ((flight: any) => void) | undefined; onNavigateToComparison?: ((flight: any, options?: any[] | undefined) => void) | undefined; }'

src/pages/FlightDisruptionListPage.tsx:1:1 - error TS6133: 'React' is declared but its value is never read.

1 import React from 'react'
  ~~~~~~~~~~~~~~~~~~~~~~~~~

src/pages/FlightTracking.tsx:2:1 - error TS6133: 'React' is declared but its value is never read.

2 import React from 'react'
  ~~~~~~~~~~~~~~~~~~~~~~~~~

src/pages/FuelOptimizationPage.tsx:1:1 - error TS6133: 'React' is declared but its value is never read.

1 import React from 'react'
  ~~~~~~~~~~~~~~~~~~~~~~~~~

src/pages/HOTACPage.tsx:1:1 - error TS6133: 'React' is declared but its value is never read.

1 import React from 'react'
  ~~~~~~~~~~~~~~~~~~~~~~~~~

src/pages/MaintenancePage.tsx:1:1 - error TS6133: 'React' is declared but its value is never read.

1 import React from 'react'
  ~~~~~~~~~~~~~~~~~~~~~~~~~

src/pages/PassengerServicesPage.tsx:1:8 - error TS6133: 'React' is declared but its value is never read.

1 import React, { useEffect } from 'react'
         ~~~~~

src/pages/PastLogsPage.tsx:2:1 - error TS6133: 'React' is declared but its value is never read.

2 import React from 'react'
  ~~~~~~~~~~~~~~~~~~~~~~~~~

src/pages/PendingSolutionsPage.tsx:1:1 - error TS6133: 'React' is declared but its value is never read.

1 import React from 'react'
  ~~~~~~~~~~~~~~~~~~~~~~~~~

src/pages/PredictionAnalyticsPage.tsx:1:1 - error TS6133: 'React' is declared but its value is never read.

1 import React from 'react'
  ~~~~~~~~~~~~~~~~~~~~~~~~~

src/pages/PredictionDashboard.tsx:2:1 - error TS6133: 'React' is declared but its value is never read.

2 import React from 'react'
  ~~~~~~~~~~~~~~~~~~~~~~~~~

src/pages/RecoveryOptions.tsx:1:1 - error TS6133: 'React' is declared but its value is never read.

1 import React from 'react'
  ~~~~~~~~~~~~~~~~~~~~~~~~~

src/pages/ReportsPage.tsx:1:1 - error TS6133: 'React' is declared but its value is never read.

1 import React from 'react'
  ~~~~~~~~~~~~~~~~~~~~~~~~~

src/pages/RiskAssessmentPage.tsx:1:1 - error TS6133: 'React' is declared but its value is never read.

1 import React from 'react'
  ~~~~~~~~~~~~~~~~~~~~~~~~~

src/pages/SettingsPage.tsx:2:1 - error TS6133: 'React' is declared but its value is never read.

2 import React from 'react'
  ~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/backendConfig.ts:34:40 - error TS2339: Property 'env' does not exist on type 'ImportMeta'.

34     const envBackendType = import.meta.env.VITE_BACKEND_TYPE?.toLowerCase();
                                          ~~~

src/services/backendConfig.ts:44:36 - error TS2339: Property 'env' does not exist on type 'ImportMeta'.

44     const expressUrl = import.meta.env.VITE_API_URL || 'http://0.0.0.0:3001/api';
                                      ~~~

src/services/backendConfig.ts:45:35 - error TS2339: Property 'env' does not exist on type 'ImportMeta'.

45     const pythonUrl = import.meta.env.VITE_PYTHON_API_URL || 'https://de8beaee-b5a0-4c60-90f6-8331e3429086-00-37powysl19y12.sisko.replit.dev/api';
                                     ~~~

src/services/backendConfig.ts:83:7 - error TS2353: Object literal may only specify known properties, and 'port' does not exist in type 'BackendConfig'.

83       port,
         ~~~~

src/services/backendConfig.ts:130:36 - error TS2339: Property 'env' does not exist on type 'ImportMeta'.

130     const expressUrl = import.meta.env.VITE_API_URL || 'http://0.0.0.0:3001/api'
                                       ~~~

src/services/backendConfig.ts:131:35 - error TS2339: Property 'env' does not exist on type 'ImportMeta'.

131     const pythonUrl = import.meta.env.VITE_PYTHON_API_URL || 'https://de8beaee-b5a0-4c60-90f6-8331e3429086-00-37powysl19y12.sisko.replit.dev/api'
                                      ~~~

src/services/backendConfig.ts:132:49 - error TS2339: Property 'env' does not exist on type 'ImportMeta'.

132     const expressTimeout = parseInt(import.meta.env.VITE_EXPRESS_TIMEOUT || '2000', 10)
                                                    ~~~

src/services/backendConfig.ts:133:48 - error TS2339: Property 'env' does not exist on type 'ImportMeta'.

133     const pythonTimeout = parseInt(import.meta.env.VITE_PYTHON_TIMEOUT || '8000', 10)
                                                   ~~~

src/services/databaseService.ts:547:44 - error TS18046: 'error' is of type 'unknown'.

547       console.warn("Health check failed:", error.message || "Unknown error");
                                               ~~~~~

src/services/databaseService.ts:649:46 - error TS7006: Parameter 'flight' implicitly has an 'any' type.

649         const transformedFlights = data.map((flight) => {
                                                 ~~~~~~

src/services/databaseService.ts:766:15 - error TS18046: 'error' is of type 'unknown'.

766         name: error.name,
                  ~~~~~

src/services/databaseService.ts:767:18 - error TS18046: 'error' is of type 'unknown'.

767         message: error.message,
                     ~~~~~